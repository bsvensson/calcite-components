name: "Chromatic"
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [synchronize, labeled, ready_for_review]
jobs:
  run:
    if: |
      (github.event.pull_request.draft == false &&
        (github.event.action == 'synchronize' ||
        (github.event.action == 'ready_for_review' && contains(github.event.pull_request.labels.*.name, 'pr ready for visual snapshots')) ||
        (github.event.action == 'labeled' && github.event.label.name == 'pr ready for visual snapshots'))
      ) || (github.event_name == 'push' && github.actor != 'dependabot[bot]' && github.actor != 'github-actions[bot]')

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{github.event.after}}

      - name: check for commit message flag
        if: github.event.action == 'synchronize'
        id: commit-message
        run: |
          MSG="$(git log --format=%B -n 1 ${{github.event.after}})"
          echo "commit message: $MSG"
          echo "MSG=$MSG" >> "$GITHUB_OUTPUT"

      - name: skip for markdown only prs
        id: markdown-check
        run: |
          current_branch="$(git rev-parse --abbrev-ref HEAD)"
          echo "branch: $current_branch"
          if [ "$current_branch" == "master" ]; then
            # diff of last commit excluding md (assumes squash merge)
            code_changes="$(git diff --name-only @~..@ -- . ':(exclude)*.md*')"
            echo "workflow running from 'push' event type"
          else
            # diff of branch excluding md
            code_changes="$(
              git diff --name-only "$current_branch" "$(
                git merge-base "$current_branch" origin/master
              )" -- . ':(exclude)*.md*'
            )"
            echo "workflow running from 'pull_request' event type"
          fi
          echo "changed files: $code_changes"
          # skip if there are only md changes
          if [ -z "$code_changes" ]; then
            echo "skip chromatic"
            echo "SKIP=true" >> "$GITHUB_OUTPUT"
          else
            echo "run chromatic"
            echo "SKIP=false" >> "$GITHUB_OUTPUT"
          fi

      - if: |
          steps.markdown-check.outputs.SKIP == 'false' &&
          !contains(steps.commit-message.outputs.MSG, '[skip-snap]')
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version-file: package.json

      - if: steps.setup-node.conclusion == 'success'
        id: install-deps
        run: npm install --legacy-peer-deps

      - if: steps.install-deps.conclusion == 'success'
        id: run-chromatic
        name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitOnceUploaded: true
        env:
          CHROMATIC_DIFF_THRESHOLD: ${{ secrets.CHROMATIC_DIFF_THRESHOLD }}

      - if: steps.run-chromatic.conclusion == 'skipped'
        id: skip-chromatic
        name: skip chromatic for markdown PRs
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: UI Tests
          description: Chromatic run skipped (markdown PR)
          state: success
          sha: ${{github.event.pull_request.head.sha || github.sha}}

  skip:
    if: |
      github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' && (
        github.event.action != 'labeled' || github.event.label.name != 'pr ready for visual snapshots'
      ) || (
        github.event.action == 'synchronize' && contains(github.event.head_commit.message, '[skip-snap]' && (
        contains(github.event.pull_request.labels.*.name, 'pr ready for visual snapshots') || true))
      )
    runs-on: ubuntu-latest
    steps:
      - name: skip chromatic for dependabot PRs
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: UI Tests
          description: Chromatic run skipped (not ready for snapshots or dependabot PR)
          state: success
          sha: ${{github.event.pull_request.head.sha || github.sha}}
