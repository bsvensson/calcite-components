(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./.storybook/helpers.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";(function(process){__webpack_require__.d(__webpack_exports__,"b",(function(){return iconNames})),__webpack_require__.d(__webpack_exports__,"a",(function(){return boolean})),__webpack_require__.d(__webpack_exports__,"c",(function(){return storyFilters}));var _esri_calcite_ui_icons__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@esri/calcite-ui-icons/index.js"),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),iconNames=(__webpack_require__("./src/utils/resources.ts"),Object.keys(_esri_calcite_ui_icons__WEBPACK_IMPORTED_MODULE_0__).filter((function(iconName){return iconName.endsWith("16")})).map((function(iconName){return iconName.replace("16","")}))),boolean=function(prop,value){var standalone=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],knob=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.boolean)(prop,value),propValue=standalone&&knob||!standalone?prop:"",attrValue=standalone?"":`="${knob}"`;return`${propValue}${attrValue}`};function storyFilters(){return{excludeStories:process.env.STORYBOOK_SCREENSHOT_TEST_BUILD?/.*_NoTest$/:/.*_TestOnly$/}}}).call(this,__webpack_require__("./node_modules/process/browser.js"))},"./.storybook/placeholderImage.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";function placeholderImage(_ref){var _ref$width=_ref.width,width=void 0===_ref$width?300:_ref$width,_ref$height=_ref.height,height=void 0===_ref$height?150:_ref$height,_ref$text=_ref.text,text=void 0===_ref$text?`${width}×${height}`:_ref$text,_ref$fontFamily=_ref.fontFamily,fontFamily=void 0===_ref$fontFamily?"sans-serif":_ref$fontFamily,_ref$fontWeight=_ref.fontWeight,fontWeight=void 0===_ref$fontWeight?"bold":_ref$fontWeight,_ref$fontSize=_ref.fontSize,fontSize=void 0===_ref$fontSize?Math.floor(.2*Math.min(width,height)):_ref$fontSize,_ref$dy=_ref.dy,dy=void 0===_ref$dy?.35*fontSize:_ref$dy,_ref$bgColor=_ref.bgColor,bgColor=void 0===_ref$bgColor?"#ddd":_ref$bgColor,_ref$textColor=_ref.textColor,textColor=void 0===_ref$textColor?"rgba(0,0,0,0.5)":_ref$textColor,_ref$dataUri=_ref.dataUri,dataUri=void 0===_ref$dataUri||_ref$dataUri,_ref$charset=_ref.charset,charset=void 0===_ref$charset?"UTF-8":_ref$charset,cleaned=`<svg xmlns="http://www.w3.org/2000/svg" width="${width}" height="${height}" viewBox="0 0 ${width} ${height}">\n    <rect fill="${bgColor}" width="${width}" height="${height}"/>\n    <text fill="${textColor}" font-family="${fontFamily}" font-size="${fontSize}" dy="${dy}" font-weight="${fontWeight}" x="50%" y="50%" text-anchor="middle">${text}</text>\n  </svg>`.replace(/[\t\n\r]/gim,"").replace(/\s\s+/g," ").replace(/'/gim,"\\i");return dataUri?`data:image/svg+xml;charset=${charset},${encodeURIComponent(cleaned).replace(/\(/g,"%28").replace(/\)/g,"%29")}`:cleaned}__webpack_require__.d(__webpack_exports__,"a",(function(){return placeholderImage}))},"./.storybook/preview.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(process){__webpack_require__.d(__webpack_exports__,"decorators",(function(){return decorators})),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters}));var storybook_rtl_addon__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/storybook-rtl-addon/dist/index.js"),_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/utils.tsx"),decorators=[storybook_rtl_addon__WEBPACK_IMPORTED_MODULE_0__.withDirection,function(Story,context){var _modes$list,modes=context.parameters.modes;return null==modes||null===(_modes$list=modes.list)||void 0===_modes$list||_modes$list.forEach((function(mode){var isDefault=mode.name===modes.default;Array.isArray(mode.class)?mode.class.forEach((function(className){return document.body.classList.toggle(className,isDefault)})):mode.class&&document.body.classList.toggle(mode.class,isDefault)})),Story()}],parameters={a11y:{element:"#root",config:{},options:{},manual:!1},modes:_utils__WEBPACK_IMPORTED_MODULE_1__.d,docs:{extractComponentDescription:function(_component,_ref){var notes=_ref.notes;if(notes){if("string"==typeof notes)return Object(_utils__WEBPACK_IMPORTED_MODULE_1__.f)(notes);var multipleNotes=Array.isArray(notes)?notes:Object.keys(notes).map((function(section){return notes[section]}));return Object(_utils__WEBPACK_IMPORTED_MODULE_1__.f)(multipleNotes.join("\n"))}return null},page:_utils__WEBPACK_IMPORTED_MODULE_1__.c},layout:"centered",options:{storySort:{order:["Overview","Components","App Components"]}},chromatic:{diffThreshold:Number(process.env.CHROMATIC_DIFF_THRESHOLD)||.15}}}.call(this,__webpack_require__("./node_modules/process/browser.js"))},"./.storybook/preview.ts-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _home_runner_work_calcite_components_calcite_components_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),_home_runner_work_calcite_components_calcite_components_storybook_preview_ts__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/preview.ts");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(_home_runner_work_calcite_components_calcite_components_storybook_preview_ts__WEBPACK_IMPORTED_MODULE_1__).forEach((function(key){var value=_home_runner_work_calcite_components_calcite_components_storybook_preview_ts__WEBPACK_IMPORTED_MODULE_1__[key];switch(key){case"args":return Object(_home_runner_work_calcite_components_calcite_components_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_0__.d)(value);case"argTypes":return Object(_home_runner_work_calcite_components_calcite_components_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_0__.b)(value);case"decorators":return value.forEach((function(decorator){return Object(_home_runner_work_calcite_components_calcite_components_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_0__.f)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(_home_runner_work_calcite_components_calcite_components_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_0__.g)(loader,!1)}));case"parameters":return Object(_home_runner_work_calcite_components_calcite_components_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_0__.h)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(_home_runner_work_calcite_components_calcite_components_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_0__.c)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(_home_runner_work_calcite_components_calcite_components_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_0__.e)(enhancer)}));case"render":return Object(_home_runner_work_calcite_components_calcite_components_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_0__.i)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(_home_runner_work_calcite_components_calcite_components_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_0__.h)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./.storybook/resources.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ATTRIBUTES}));var logicalFlowPositionOptions=["inline-start","inline-end","block-start","block-end"],positionOptions=["start","end"],scaleOptions=["s","m","l"],alignmentOptions=["start","center","end"],appearanceOptions=["solid","transparent","outline"],ATTRIBUTES={alignment:{values:alignmentOptions,defaultValue:alignmentOptions[0]},appearance:{values:appearanceOptions,defaultValue:appearanceOptions[0]},logicalFlowPosition:{values:logicalFlowPositionOptions,defaultValue:logicalFlowPositionOptions[2]},position:{values:positionOptions,defaultValue:positionOptions[0]},scale:{values:scaleOptions,defaultValue:scaleOptions[1]}}},"./.storybook/utils.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"d",(function(){return modes})),__webpack_require__.d(__webpack_exports__,"e",(function(){return modesDarkDefault})),__webpack_require__.d(__webpack_exports__,"f",(function(){return parseReadme})),__webpack_require__.d(__webpack_exports__,"a",(function(){return createComponentHTML})),__webpack_require__.d(__webpack_exports__,"c",(function(){return globalDocsPage})),__webpack_require__.d(__webpack_exports__,"b",(function(){return filterComponentAttributes}));var _src_utils_resources__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/utils/resources.ts"),_node_modules_esri_calcite_colors_dist_colors__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@esri/calcite-colors/dist/colors.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/index.js"),react__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__),autoValue={name:"Auto",value:_node_modules_esri_calcite_colors_dist_colors__WEBPACK_IMPORTED_MODULE_1__.colors["blk-200"]},lightValue={name:"Light",value:_node_modules_esri_calcite_colors_dist_colors__WEBPACK_IMPORTED_MODULE_1__.colors["blk-005"]},darkValue={name:"Dark",value:_node_modules_esri_calcite_colors_dist_colors__WEBPACK_IMPORTED_MODULE_1__.colors["blk-210"]},list=[{name:lightValue.name,class:_src_utils_resources__WEBPACK_IMPORTED_MODULE_0__.a.lightMode,color:lightValue.value},{name:darkValue.name,class:_src_utils_resources__WEBPACK_IMPORTED_MODULE_0__.a.darkMode,color:darkValue.value},{name:autoValue.name,class:_src_utils_resources__WEBPACK_IMPORTED_MODULE_0__.a.autoMode,color:autoValue.value}],modes={default:lightValue.name,list:list},modesDarkDefault={default:darkValue.name,list:list},parseReadme=function(content){return content.replace(/ \\\| /g," | ").replace(/\.\.\//g,"https://github.com/Esri/calcite-components/tree/master/src/components/")},createComponentHTML=function(tagName,attributes){var contentHTML=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return`<${tagName} ${attributes.map((function(_ref){var name=_ref.name,value=_ref.value;return"boolean"==typeof value?value?name:"":`${name}="${value}"`})).join(" ")}>${contentHTML}</${tagName}>`},globalDocsPage=function(){return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.b,null))},filterComponentAttributes=function(attributesList,exceptions){return exceptions.length?attributesList.filter((function(attr){return!exceptions.find((function(except){return except===attr.name}))})).map((function(attr){return attr.commit()})):attributesList.map((function(attr){return attr.commit()}))}},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/html/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(mdx|ts))$")],module,!1)}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module))},"./node_modules/@stencil/core/internal/client lazy recursive ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$":function(module,exports){function webpackEmptyAsyncContext(req){return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=function(){return[]},webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,module.exports=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id="./node_modules/@stencil/core/internal/client lazy recursive ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$"},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(mdx|ts))$":function(module,exports,__webpack_require__){var map={"./01-introduction.stories.mdx":"./src/01-introduction.stories.mdx","./02-contributing.stories.mdx":"./src/02-contributing.stories.mdx","./03-code-of-conduct.stories.mdx":"./src/03-code-of-conduct.stories.mdx","./04-licensing.stories.mdx":"./src/04-licensing.stories.mdx","./05-custom-theme.stories.mdx":"./src/05-custom-theme.stories.mdx","./06-faq.stories.mdx":"./src/06-faq.stories.mdx","./07-conventions.stories.mdx":"./src/07-conventions.stories.mdx","./08-testing.stories.mdx":"./src/08-testing.stories.mdx","./09-styling.stories.mdx":"./src/09-styling.stories.mdx","./10-documentation.stories.mdx":"./src/10-documentation.stories.mdx","./11-accessibility.stories.mdx":"./src/11-accessibility.stories.mdx","./12-accessibilitydesign.stories.mdx":"./src/12-accessibilitydesign.stories.mdx","./13-accessibilitydeveloper.stories.mdx":"./src/13-accessibilitydeveloper.stories.mdx","./14-accessibilityroles.stories.mdx":"./src/14-accessibilityroles.stories.mdx","./15-internationalization.stories.mdx":"./src/15-internationalization.stories.mdx","./components/accordion/accordion.stories.ts":"./src/components/accordion/accordion.stories.ts","./components/action-bar/action-bar.stories.ts":"./src/components/action-bar/action-bar.stories.ts","./components/action-group/action-group.stories.ts":"./src/components/action-group/action-group.stories.ts","./components/action-menu/action-menu.stories.ts":"./src/components/action-menu/action-menu.stories.ts","./components/action-pad/action-pad.stories.ts":"./src/components/action-pad/action-pad.stories.ts","./components/action/action.stories.ts":"./src/components/action/action.stories.ts","./components/alert/alert.stories.ts":"./src/components/alert/alert.stories.ts","./components/avatar/avatar.stories.ts":"./src/components/avatar/avatar.stories.ts","./components/block/block.stories.ts":"./src/components/block/block.stories.ts","./components/button/button.stories.ts":"./src/components/button/button.stories.ts","./components/card/card.stories.ts":"./src/components/card/card.stories.ts","./components/checkbox/checkbox.stories.ts":"./src/components/checkbox/checkbox.stories.ts","./components/chip/chip.stories.ts":"./src/components/chip/chip.stories.ts","./components/color-picker/color-picker.stories.ts":"./src/components/color-picker/color-picker.stories.ts","./components/combobox/combobox.stories.ts":"./src/components/combobox/combobox.stories.ts","./components/date-picker/date-picker.stories.ts":"./src/components/date-picker/date-picker.stories.ts","./components/dropdown/dropdown.stories.ts":"./src/components/dropdown/dropdown.stories.ts","./components/fab/fab.stories.ts":"./src/components/fab/fab.stories.ts","./components/flow-item/flow-item.stories.ts":"./src/components/flow-item/flow-item.stories.ts","./components/flow/flow.stories.ts":"./src/components/flow/flow.stories.ts","./components/graph/graph.stories.ts":"./src/components/graph/graph.stories.ts","./components/icon/icon.stories.ts":"./src/components/icon/icon.stories.ts","./components/inline-editable/inline-editable.stories.ts":"./src/components/inline-editable/inline-editable.stories.ts","./components/input-date-picker/input-date-picker.stories.ts":"./src/components/input-date-picker/input-date-picker.stories.ts","./components/input-number/input-number.stories.ts":"./src/components/input-number/input-number.stories.ts","./components/input-text/input-text.stories.ts":"./src/components/input-text/input-text.stories.ts","./components/input-time-picker/input-time-picker.stories.ts":"./src/components/input-time-picker/input-time-picker.stories.ts","./components/input/input.stories.ts":"./src/components/input/input.stories.ts","./components/label/label.stories.ts":"./src/components/label/label.stories.ts","./components/link/link.stories.ts":"./src/components/link/link.stories.ts","./components/list/list.stories.ts":"./src/components/list/list.stories.ts","./components/loader/loader.stories.ts":"./src/components/loader/loader.stories.ts","./components/modal/modal.stories.ts":"./src/components/modal/modal.stories.ts","./components/notice/notice.stories.ts":"./src/components/notice/notice.stories.ts","./components/pagination/pagination.stories.ts":"./src/components/pagination/pagination.stories.ts","./components/panel/panel.stories.ts":"./src/components/panel/panel.stories.ts","./components/pick-list/pick-list.stories.ts":"./src/components/pick-list/pick-list.stories.ts","./components/popover/popover.stories.ts":"./src/components/popover/popover.stories.ts","./components/progress/progress.stories.ts":"./src/components/progress/progress.stories.ts","./components/radio-button-group/radio-button-group.stories.ts":"./src/components/radio-button-group/radio-button-group.stories.ts","./components/radio-button/radio-button.stories.ts":"./src/components/radio-button/radio-button.stories.ts","./components/rating/rating.stories.ts":"./src/components/rating/rating.stories.ts","./components/scrim/scrim.stories.ts":"./src/components/scrim/scrim.stories.ts","./components/segmented-control/segmented-control.stories.ts":"./src/components/segmented-control/segmented-control.stories.ts","./components/select/select.stories.ts":"./src/components/select/select.stories.ts","./components/shell/shell.stories.ts":"./src/components/shell/shell.stories.ts","./components/slider/slider.stories.ts":"./src/components/slider/slider.stories.ts","./components/split-button/split-button.stories.ts":"./src/components/split-button/split-button.stories.ts","./components/stepper/stepper.stories.ts":"./src/components/stepper/stepper.stories.ts","./components/switch/switch.stories.ts":"./src/components/switch/switch.stories.ts","./components/tabs/tabs.stories.ts":"./src/components/tabs/tabs.stories.ts","./components/text-area/text-area.stories.ts":"./src/components/text-area/text-area.stories.ts","./components/tile-select-group/tile-select-group.stories.ts":"./src/components/tile-select-group/tile-select-group.stories.ts","./components/tile-select/tile-select.stories.ts":"./src/components/tile-select/tile-select.stories.ts","./components/tile/tile.stories.ts":"./src/components/tile/tile.stories.ts","./components/tip-manager/tip-manager.stories.ts":"./src/components/tip-manager/tip-manager.stories.ts","./components/tip/tip.stories.ts":"./src/components/tip/tip.stories.ts","./components/tooltip/tooltip.stories.ts":"./src/components/tooltip/tooltip.stories.ts","./components/tree/tree.stories.ts":"./src/components/tree/tree.stories.ts","./components/value-list/value-list.stories.ts":"./src/components/value-list/value-list.stories.ts"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(mdx|ts))$"},"./src/01-introduction.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.c,{title:"Overview/Home",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("h1",{id:"calcite-components"},"Calcite Components"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("p",null,"Calcite Components are a set of reusable web components built using Stencil.js. With Calcite Components, you can quickly build on-brand, lightweight, and accessible web applications."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("a",{parentName:"li",href:"https://github.com/Esri/calcite-components",target:"_blank",rel:"nofollow noopener noreferrer"},"GitHub project"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("h2",{id:"calcite"},"Calcite"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("p",null,"Calcite is the name of a branded visual design system for Esri."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("h2",{id:"issues"},"Issues"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("p",null,"Find a bug or want to request a new feature? Please let us know by ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("a",{parentName:"p",href:"https://github.com/Esri/calcite-components/issues/new/choose",target:"_blank",rel:"nofollow noopener noreferrer"},"submitting an issue"),"."))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Home",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},"./src/02-contributing.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Contributing",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:"# Contributing\n\nEsri welcomes contributions from anyone and everyone. Please see our [guidelines for contributing](https://github.com/esri/contributing).\n\nNote: New contributors should first contact [Ben Elan](mailto:belan@esri.com) or [Juan Carlos Franco](mailto:JFranco@esri.com) to join the [Calcite Components GitHub team](https://github.com/orgs/Esri/teams/calcite-components/members). Then, clone the repo via SSH key on your machine (this Git workflow is required in order to work with our Chromatic test integration).\n\n## I want to contribute, what should I work on?\n\nCalcite Components is still in its early stages. You can help most by:\n\n- Adding ideas for components by [creating a New Component issue](https://github.com/Esri/calcite-components/issues/new?assignees=&labels=new+component%2C0+-+new%2Cneeds+triage&template=new-component.yml).\n- Requesting features for existing components by [creating a Enhancement issue](https://github.com/Esri/calcite-components/issues/new?assignees=&labels=enhancement%2C0+-+new%2Cneeds+triage&template=enhancement.yml).\n- Reporting problems by [creating a Bug issue](https://github.com/Esri/calcite-components/issues/new?assignees=&labels=bug%2C0+-+new%2Cneeds+triage&template=bug.yml).\n- Working on [the issues marked as `help wanted`](https://github.com/Esri/calcite-components/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22+no%3Aassignee). There is also a `good first issue` label if you are just getting started.\n  - Comment on the issue and ask for the action items before you start working. Sometimes additional context is needed, which may not be specified in the issue.\n- If you want to help develop components take a look at the [new component issues](https://github.com/Esri/calcite-components/issues?q=is%3Aopen+is%3Aissue+label%3A%22new+component%22). Before starting development please review our [component conventions](./conventions/README.md) and the [Stencil documentation](https://stenciljs.com/docs/introduction).\n\nIf you aren't familiar with the basics of Web Components and Shadow DOM, please read through some of the following resources before contributing:\n\n- [Google - Custom Elements v1: Reusable Web Components](https://developers.google.com/web/fundamentals/web-components/customelements)\n- [Google - Shadow DOM v1: Self-Contained Web Components](https://developers.google.com/web/fundamentals/web-components/shadowdom)\n- [CSS Tricks - An Introduction to Web Components](https://css-tricks.com/an-introduction-to-web-components/)\n\n## Before filing an issue\n\nIf something isn't working the way you expect, please take a look at the [existing issues](https://github.com/Esri/calcite-components/issues) before logging a new one. Have you found a new bug? Want to request a new feature? We'd love to hear from you! Please make sure to provide all of the requested info from the appropriate [issue template](https://github.com/Esri/calcite-components/issues/new/choose) so we can work on resolving the issue as soon as possible. A sample that reproduces the issue is required for logging bugs, we created templates in [codepen](https://codepen.io/pen?template=RwgrjEx), [codesandbox](https://codesandbox.io/s/calcite-template-p95kp?file=/src/App.js), and [jsbin](https://jsbin.com/lopumatiru/edit?html,output) (with the ArcGIS API for JavaScript) to help get started. Alternatively, a [documentation](https://developers.arcgis.com/calcite-design-system/components/) sample can be used if the issue is reproducible. Some other things to consider:\n\n- Use a clear and descriptive title\n- Detail what is happening now vs what should happen\n- Tell us how to reproduce the issue (e.g. is it happening in a specific browser?)\n- Can it be reliably reproduced? If not, tell us how often it happens and under what circumstances.\n- Screenshots and GIFs are our friends!\n- Did this problem start happening after a recent release or was it always a bug?\n\n## Issue management\n\n### Labels\n\nGitHub labels are used for organizing issues and providing context. You can familiarize yourself with the [label descriptions](https://github.com/Esri/calcite-components/labels) to understand what they signify.\n\n### Lifecycle\n\nThere are four issue lifecycle labels:\n\n- `0 - new`: Issues that are up for grabs.\n- `1 - assigned`: Issues that someone will work on soon.\n- `2 - in development`: Issues are currently being worked on.\n- `3 - installed`: Issues that have been merged to master.\n- `4 - verified`: Issues that have been tested and are ready to close.\n\nAn issue can only have one of the lifecycle labels at any time. Please make sure to keep these up to date.\n\n### Issues that cannot be worked on\n\nThere are three labels that mean an issue is not ready for development:\n\n- `design`: Issues that need design consultation, such as interaction research/feedback, visual mockups, and general approval. Once design completes their review, the `design` label will be removed, which means a developer can pick up the issue.\n- `need more info`: Issues that are missing information and/or a clear, actionable description. This can mean we are waiting on a user to provide additional context, we can't reproduce the issue, or further discussion is needed in order to determine a solution.\n- `blocked`: Issues that cannot be worked on until a different issue is resolved. The blocking issue may be from an external library (Stencil, Storybook, Jest, etc.) or a Calcite Components issue. The blocking issue should be linked to in the blocked issue's body or comment.\n\n### Milestones\n\nMilestones are used to manage sprints, which are two weeks long. Sprint milestones are not closed until all of the issues are verified. We usually have a couple sprint milestones open at a time to help with future planning. Calcite Core team members should grab issues from the current sprint when you are looking for something to work on. External contributors should ask before working on issues in upcoming sprints, since some of them need to be completed in a timely manner. There are also two constant milestones:\n\n- **Backburner:** Issues we want to tackle soon, but not in the immediate sprint. If you didn't find anything to work on in the current sprint, this is the second place to look.\n- **Freezer:** Items that we want to look into, but do not have an immediate timeline associated. Try not to work on these issues unless they have a `help wanted` label.\n\n### Estimates\n\nEstimates are used to determine how much work needs to go into an issue. The total estimate helps product managers triage issues effectively so developers are not overwhelmed during sprints. If you are not on the team, please do not add estimates when creating cases. Here are some guidelines for time estimates using an `estimate-#` label for tracking:\n\n- `estimate - 1`: Very small fix or change, a one line update.\n- `estimate - 2`: Small fix or update, does not require updates to tests.\n- `estimate - 3`: A day or two of work, may require changes to tests.\n- `estimate - 5`: A few days of work, requires updates to tests.\n- `estimate - 8`: Requires input from team, consider smaller steps.\n- `estimate - 13`: Requires planning and input from team, consider smaller steps.\n- `estimate - 21`: Requires planning, input from team members and possibly others.\n- `estimate - 34`: Issue should be converted into an epic. Requires all hands on deck.\n\n### Epics\n\nEpics are specified by the `epic` label. Epics are changes that require a lot of work and wouldn't fit into a single milestone. An epic should be a single concept, and have child issues for individual tasks created and listed in the epic's issue body.\n\n## Code base\n\nOur code base is written in TypeScript and must adhere to specific conventions and formatting. Please do the following while developing:\n\n1. Avoid setting types as `any`.\n2. Try to always provide a type.\n3. Provide JSDoc for all public APIs.\n4. Fix linting errors, don't ignore them.\n\n## Getting a development environment set up\n\nAn installation of Node is required for development. If you don't have Node installed, we recommend [Volta](https://docs.volta.sh/guide/getting-started), which will automatically use the Node/NPM versions pinned at the bottom of [`package.json`](./package.json). If you prefer a different Node version manager, make sure to use the major versions of Node/NPM specified in [`package.json`](./package.json).\n\nWe also recommend installing the following extensions in your editor of choice: TypeScript, TailwindCSS, ESLint, Stylelint, and Prettier. If you use VS Code, you will see a pop up in the bottom right corner prompting you to install or view the workspaces's recommended extensions. Here are instructions for manually installing the extensions in a variety of editors:\n\n- <https://tailwindcss.com/docs/intellisense>\n- <https://eslint.org/docs/latest/user-guide/integrations>\n- <https://stylelint.io/user-guide/integrations/editor>\n- <https://prettier.io/docs/en/editors.html>\n\nIf your IDE supports the [Language Server Protocol (LSP) specification](https://microsoft.github.io/language-server-protocol/) but isn't mentioned in the links above, ask Ben for help getting set up.\n\n**NOTE:** If you are on Windows, we strongly recommend using the Bash emulation that ships with [Git for Windows](https://gitforwindows.org/). Or better yet, use [Ubuntu in WSL](https://ubuntu.com/wsl)! Otherwise, keep in mind that some of the scripts used by maintainers (such as for releasing) likely won't work in Command Prompt or PowerShell. However, please log an issue if scripts used for normal development (start/test/build/etc) don't work in your Windows environment.\n\n## Starting the demos\n\nFirst, clone the repo and install the NPM dependencies from within the `calcite-components` directory:\n\n```sh\ngit clone git@github.com:Esri/calcite-components.git\ncd calcite-components\nnpm install\n```\n\nNext, start the local Stencil development server on localhost:\n\n```sh\nnpm start\n```\n\nThe demos will open in the browser after building. Edit the pages in [`src/demos`](./src/demos) to modify the component demos, such as changing attributes or adding content to slots. When adding a new demo page, make sure to add a link in [`index.html`](./src/index.html) so others can find it. You can also edit the component code in [`src/components`](./src/components), and the changes will be reflected in the demos.\n\n## Linting\n\nThis project uses [lint-staged](https://www.npmjs.com/package/lint-staged) to automatically format code on commit, making it easier to contribute. There are also NPM scripts in [`package.json`](./package.json) to lint a variety of filetypes. To run them all:\n\n```sh\nnpm run lint\n```\n\n## Running the tests\n\n`npm test` will run the current test suite.\n\nCalcite Components include Stencil's default testing tools which are built on [Jest](https://jestjs.io/) and [Puppeteer](https://github.com/GoogleChrome/puppeteer).\n\nIf you're working on writing tests for a particular component, it can be helpful to use `npm run test:watch` to retest on file changes. Once the initial tests run, typing `o` at the prompt will run tests only on changed files, allowing you to quickly iterate on tests for a specific component.\n\nPlease refer to the [Stencil testing documentation](https://stenciljs.com/docs/testing-overview) and Calcite's [testing conventions](./conventions/Testing.md) for more information.\n\n## Adding a new component\n\nBefore adding a new component, please read through the [component conventions guide](./conventions/README.md). This guide covers everything from colors to event naming syntax and will help you create a component that is consistent with those that already exist. All new components should have an [issue](https://github.com/Esri/calcite-components/issues/new?assignees=&labels=new+component%2C+0+-+new%2C+architecture&template=new-component.md&title=New+Component%3A+).\n\n## Documenting a component\n\nStencil creates API reference documentation using JSDoc, here is their [documentation page](https://stenciljs.com/docs/docs-json). Calcite Components utilizes [Storybook](https://storybook.js.org/) for documenting components. Adding a new component is very simple:\n\n1. Create a new file inside your component directory like `X.stories.js`\n2. Write stories\n3. Run the documentation locally with `npm run docs:preview`\n\nThe `docs:preview` command will build Calcite Components and open your browser to view the storybook docs locally.\n\nPlease refer to the [Documentation Conventions](./conventions/Documentation.md) for more information.\n\n## Branch naming conventions\n\nWhen submitting a pull request, please use one of the following formats for your branch name:\n\nFor pull requests associated with an existing issue:\n\n```text\n<username>/<issue-id><issue-description>\njohndoe/15-update-modal\njohndoe/update-modal-15\n```\n\nFor pull requests without an associated issue:\n\n```text\n<username>/<issue-description>\njohndoe/modal-styling\n```\n\n```text\n<username>/<type-of-pr><issue-description>\njohndoe/docs/update-modal-docs\njohndoe/feature/add-something-to-modal\n\n```\n\n## Commit message format\n\nThis project follows [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/), which are used to generate the changelog. Be sure to provide clear and sufficient information in commit messages. This is important because the commit messages are used to automatically update the changelog.\n\n[Stencil's contributing document](https://github.com/ionic-team/stencil/blob/master/.github/CONTRIBUTING.md#commit-message-format) explains this in great detail, so please refer to this for more details and examples.\n\n## Breaking changes\n\nCommit messages for breaking changes should use both the header (`!`) and body (`BREAKING CHANGE:`) syntax:\n\n```text\n<type>!: <descriptive summary>\n\n<optional info>\n\nBREAKING CHANGE: <details about the change and migration options (this can span multiple lines)>\n```\n\nWhen adding a `BREAKING CHANGE:` note to the summary block right before confirming a squash merge, remove all the info except the `BREAKING CHANGE:` note itself, or else everything ends up being added to the changelog.\n\nSee the [conventional commits doc](https://www.conventionalcommits.org/en/v1.0.0/) for more helpful information.\n\n## Pull requests\n\nIn order to ensure conventional commits are followed, pull requests will run a check to indicate whether the PR is following the convention or not. The [Semantic Pull Request](https://github.com/amannn/action-semantic-pull-request) status check will ensure your pull requests are semantic before you merge them.\n\nYou can update the PR title any time before merging the PR. This may be necessary when the scope or type of the PR changes, or if additional details are needed for the changelog entry.\n",mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Contributing",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/03-code-of-conduct.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Code of Conduct",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:"# Code of Conduct\n\nv1.0.0, February 2019\n\n> Adapted from Esri's [Conference and Community Spaces Code of Conduct](https://www.esri.com/en-us/about/events/code-of-conduct)\n\n## Purpose\n\nAt Esri, we believe geography can make the world a better place. In adopting this Community Code of Conduct, we as Esri employees are committed to fostering a welcoming environment for collaboration, creativity, and the free exchange of ideas for developing, maintaining, and using open source GIS software. We aim to empower all participants to actively engage and help build a friendly and safe Esri open source developer community.\n\nWhether publicly or privately, and whether in-person or online, we expect all members of this community to interact both professionally and without harassment toward others, regardless of race, color, creed, gender, gender identity, religion, marital status, domestic partner status, genetic information, age, national origin or ancestry, military or veteran status, sexual orientation, or either physical or mental disability.\n\n## Expectations\n\nBehavior we encourage:\n\n- Share your ideas, but also listen to others\n- Be professional, kind, and considerate in technical discussions and disagreements\n- Respect personal boundaries and preferences\n- Respect all project contributors and maintainers\n\nInappropriate/unacceptable behavior is anything hurtful that interferes with other people’s experience and participation in our community. This includes:\n\n- Harassment, aggression, and intimidation\n- Slurs\n- Derogatory jokes and statements\n- Foul or obscene language\n- Stalking\n- Sharing graphic or derogatory pictures, drawings, or cartoons\n- _Ad hominem_ or personal attacks and insults\n- Unwanted or offensive letters or poems\n- Offensive email, voicemail messages, or social media postings\n- Personal threats\n\n## Reporting\n\nRepository maintainers reserve the right to remove offensive content. To report inappropriate behavior, you can also contact [events@esri.com](mailto:events@esri.com).\n\n## Consequences\n\nViolations of this Code of Conduct may result in:\n\n- Disqualification from Esri Events and Conferences\n- Being blocked from Esri's [GitHub Organization](https://help.github.com/articles/blocking-a-user-from-your-organization/)\n",mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Code of Conduct",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/04-licensing.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Licensing",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:"# Licensing\n\nCOPYRIGHT © 2023 Esri\n\nAll rights reserved under the copyright laws of the United States and applicable international laws, treaties, and conventions.\n\nThis material is licensed for use under the Esri Master License Agreement (MLA), and is bound by the terms of that agreement. You may redistribute and use this code without modification, provided you adhere to the terms of the MLA and include this copyright notice.\n\nSee use restrictions at <http://www.esri.com/legal/pdfs/mla_e204_e300/english>\n\nFor additional information, contact: Environmental Systems Research Institute, Inc. Attn: Contracts and Legal Services Department 380 New York Street Redlands, California, USA 92373 USA\n\nemail: contracts@esri.com\n",mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Licensing",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/05-custom-theme.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Template",(function(){return Template})),__webpack_require__.d(__webpack_exports__,"interactive",(function(){return interactive}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),placeholderImage=__webpack_require__("./.storybook/placeholderImage.ts"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Template=function(){return`<div\n    style="\n      --calcite-ui-brand: ${Object(dist.color)("--calcite-ui-brand","#007ac2")};\n      --calcite-ui-brand-hover: ${Object(dist.color)("--calcite-ui-brand-hover","#00619b")};\n      --calcite-ui-brand-press: ${Object(dist.color)("--calcite-ui-brand-press","#004874")};\n      --calcite-ui-info: ${Object(dist.color)("--calcite-ui-info","#00619b")};\n      --calcite-ui-success: ${Object(dist.color)("--calcite-ui-success","#35ac46")};\n      --calcite-ui-warning: ${Object(dist.color)("--calcite-ui-warning","#edd317")};\n      --calcite-ui-danger: ${Object(dist.color)("--calcite-ui-danger","#d83020")};\n      --calcite-ui-danger-hover: ${Object(dist.color)("--calcite-ui-danger-hover","#a82b1e")};\n      --calcite-ui-danger-press: ${Object(dist.color)("--calcite-ui-danger-press","#7c1d13")};\n      --calcite-ui-background: ${Object(dist.color)("--calcite-ui-background","#f8f8f8")};\n      --calcite-ui-foreground-1: ${Object(dist.color)("--calcite-ui-foreground-1","#ffffff")};\n      --calcite-ui-foreground-2: ${Object(dist.color)("--calcite-ui-foreground-2","#f3f3f3")};\n      --calcite-ui-foreground-3: ${Object(dist.color)("--calcite-ui-foreground-3","#eaeaea")};\n      --calcite-ui-text-1: ${Object(dist.color)("--calcite-ui-text-1","#151515")};\n      --calcite-ui-text-2: ${Object(dist.color)("--calcite-ui-text-2","#4a4a4a")};\n      --calcite-ui-text-3: ${Object(dist.color)("--calcite-ui-text-3","#6a6a6a")};\n      --calcite-ui-text-inverse: ${Object(dist.color)("--calcite-ui-text-inverse","#ffffff")};\n      --calcite-ui-text-link: ${Object(dist.color)("--calcite-ui-text-link","#00619b")};\n      --calcite-ui-border-1: ${Object(dist.color)("--calcite-ui-border-1","#cacaca")};\n      --calcite-ui-border-2: ${Object(dist.color)("--calcite-ui-border-2","#d4d4d4")};\n      --calcite-ui-border-3: ${Object(dist.color)("--calcite-ui-border-3","#dfdfdf")};\n      --calcite-ui-border-input: ${Object(dist.color)("--calcite-ui-border-input","#949494")};\n      --calcite-ui-icon-color: ${Object(dist.color)("--calcite-ui-icon-color","currentColor")};\n    "\n  >\n    <style>\n      .demo {\n        display: flex;\n        align-items: flex-start;\n      }\n      .demo-column {\n        flex: 0;\n        width: 320px;\n      }\n      .demo-column + .demo-column {\n        margin-left: 4rem;\n      }\n      .demo-column > * {\n        margin-bottom: 2rem;\n      }\n    </style>\n    <div class="demo">\n      <div class="demo-column">\n        <calcite-accordion>\n          <calcite-accordion-item heading="Accordion Item"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item heading="Accordion Item 2"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item heading="Accordion Item 3"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item heading="Accordion Item 4"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item heading="Accordion Item 5" expanded>\n            <calcite-tree lines>\n              <calcite-tree-item>\n                Child 1\n              </calcite-tree-item>\n              <calcite-tree-item>\n                Child 2\n                <calcite-tree slot="children">\n                  <calcite-tree-item>\n                    Grandchild 1\n                  </calcite-tree-item>\n                  <calcite-tree-item>\n                    Grandchild 2\n                    <calcite-tree slot="children">\n                      <calcite-tree-item>\n                        Great-Grandchild 1\n                      </calcite-tree-item>\n                      <calcite-tree-item>\n                        Great-Grandchild 2\n                      </calcite-tree-item>\n                    </calcite-tree>\n                  </calcite-tree-item>\n                </calcite-tree>\n              </calcite-tree-item>\n              <calcite-tree-item>\n                Child 3\n              </calcite-tree-item>\n            </calcite-tree>\n          </calcite-accordion-item>\n        </calcite-accordion>\n        <calcite-notice kind="danger" scale="s" open>\n          <div slot="title">Something failed</div>\n          <div slot="message">\n            There was an error while performing the task.\n          </div>\n          <calcite-link slot="link" title="my action">Retry</calcite-link>\n        </calcite-notice>\n        <calcite-notice icon kind="success" scale="s" open closable>\n          <div slot="title">Something worked</div>\n          <div slot="message">\n            That thing you wanted to do worked as expected\n          </div>\n        </calcite-notice>\n        <calcite-label>\n          Segmented Control\n          <calcite-segmented-control>\n            <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>\n            <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>\n            <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>\n            <calcite-segmented-control-item value="vue">Vue</calcite-segmented-control-item>\n          </calcite-segmented-control>\n        </calcite-label>\n        <calcite-icon icon="3d-glasses"></calcite-icon>\n      </div>\n      <div class="demo-column">\n        <div>\n          <calcite-card selected selectable>\n            <img\n              alt="thumbnail"\n              slot="thumbnail"\n              style="width:260px"\n              src="${Object(placeholderImage.a)({width:260,height:160})}"\n            />\n            <h3 slot="title">Selectable card</h3>\n            <calcite-link slot="footer-start">Lead füt</calcite-link>\n            <calcite-link slot="footer-end">Trail füt</calcite-link>\n          </calcite-card>\n        </div>\n        <div>\n          <calcite-dropdown>\n            <calcite-button slot="trigger">Primary</calcite-button>\n            <calcite-dropdown-group group-title="View">\n              <calcite-dropdown-item icon-start="list-bullet" selected>List</calcite-dropdown-item>\n              <calcite-dropdown-item icon-start="grid">Grid</calcite-dropdown-item>\n              <calcite-dropdown-item icon-start="table">Table</calcite-dropdown-item>\n            </calcite-dropdown-group>\n          </calcite-dropdown>\n          <calcite-button appearance="outline">Outline</calcite-button>\n          <calcite-button kind="danger">Red</calcite-button>\n        </div>\n        <div>\n          <label>\n            <calcite-checkbox indeterminate></calcite-checkbox>\n            Initially indeterminate and unchecked\n          </label>\n        </div>\n        <div>\n          <calcite-chip>Neutral</calcite-chip>\n          <calcite-chip kind="inverse">Inverse</calcite-chip>\n          <calcite-chip kind="brand">Brand</calcite-chip>\n        </div>\n        <div>\n          <calcite-chip appearance="transparent">Neutral</calcite-chip>\n          <calcite-chip appearance="transparent" kind="inverse">Inverse</calcite-chip>\n          <calcite-chip appearance="outline-fill" kind="brand">Brand</calcite-chip>\n        </div>\n        <calcite-pagination total-items="1200" page-size="100" start-item="1"></calcite-pagination>\n        <calcite-slider\n          min="0"\n          max="100"\n          min-value="50"\n          max-value="85"\n          step="1"\n          min-label="Temperature range (lower)"\n          max-label="Temperature range (upper)"\n        ></calcite-slider>\n      </div>\n      <div class="demo-column">\n        <calcite-date-picker scale="m" value="2020-11-27"></calcite-date-picker>\n        <calcite-tabs>\n          <calcite-tab-nav slot="title-group">\n            <calcite-tab-title selected>Tab 1 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 2 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 3 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 4 Title</calcite-tab-title>\n          </calcite-tab-nav>\n        </calcite-tabs>\n        <calcite-loader class="chromatic-ignore"></calcite-loader>\n        <label>\n          <calcite-switch scale="m" checked> </calcite-switch>\n          Red switch scale medium\n        </label>\n      </div>\n    </div>\n  </div>`},layoutProps={Template:Template};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Theming/Custom Theme",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'# Custom Theme\n\nDevelopers building Esri applications are encouraged to use the default theme as much as possible. However, some apps (think user-configurable template applications) will need to customize the colors. Luckily, this can be done through CSS. All colors used in calcite components are set as variables on root, which you can override in your application. Take the following html/css:\n\n```html\n<style>\n  .my-theme {\n    --calcite-ui-brand: red;\n  }\n</style>\n<div class="my-theme">\n  <calcite-loader>\n</div>\n```\n\nThis will set the main Esri blue to `red` in all components within the `div`. See the [canvas tab](/canvas/overview-custom-theme--interactive-example) for an interactive sandbox with all the theme variables.\n',mdxType:"Description"}),Object(esm.b)(dist_esm.d,{name:"Interactive",mdxType:"Story"},Template.bind({})))}MDXContent.isMDXComponent=!0;var interactive=Template.bind({});interactive.storyName="Interactive",interactive.parameters={storySource:{source:'() => `<div\n    style="\n      --calcite-ui-brand: ${color("--calcite-ui-brand", "#007ac2")};\n      --calcite-ui-brand-hover: ${color("--calcite-ui-brand-hover", "#00619b")};\n      --calcite-ui-brand-press: ${color("--calcite-ui-brand-press", "#004874")};\n      --calcite-ui-info: ${color("--calcite-ui-info", "#00619b")};\n      --calcite-ui-success: ${color("--calcite-ui-success", "#35ac46")};\n      --calcite-ui-warning: ${color("--calcite-ui-warning", "#edd317")};\n      --calcite-ui-danger: ${color("--calcite-ui-danger", "#d83020")};\n      --calcite-ui-danger-hover: ${color("--calcite-ui-danger-hover", "#a82b1e")};\n      --calcite-ui-danger-press: ${color("--calcite-ui-danger-press", "#7c1d13")};\n      --calcite-ui-background: ${color("--calcite-ui-background", "#f8f8f8")};\n      --calcite-ui-foreground-1: ${color("--calcite-ui-foreground-1", "#ffffff")};\n      --calcite-ui-foreground-2: ${color("--calcite-ui-foreground-2", "#f3f3f3")};\n      --calcite-ui-foreground-3: ${color("--calcite-ui-foreground-3", "#eaeaea")};\n      --calcite-ui-text-1: ${color("--calcite-ui-text-1", "#151515")};\n      --calcite-ui-text-2: ${color("--calcite-ui-text-2", "#4a4a4a")};\n      --calcite-ui-text-3: ${color("--calcite-ui-text-3", "#6a6a6a")};\n      --calcite-ui-text-inverse: ${color("--calcite-ui-text-inverse", "#ffffff")};\n      --calcite-ui-text-link: ${color("--calcite-ui-text-link", "#00619b")};\n      --calcite-ui-border-1: ${color("--calcite-ui-border-1", "#cacaca")};\n      --calcite-ui-border-2: ${color("--calcite-ui-border-2", "#d4d4d4")};\n      --calcite-ui-border-3: ${color("--calcite-ui-border-3", "#dfdfdf")};\n      --calcite-ui-border-input: ${color("--calcite-ui-border-input", "#949494")};\n      --calcite-ui-icon-color: ${color("--calcite-ui-icon-color", "currentColor")};\n    "\n  >\n    <style>\n      .demo {\n        display: flex;\n        align-items: flex-start;\n      }\n      .demo-column {\n        flex: 0;\n        width: 320px;\n      }\n      .demo-column + .demo-column {\n        margin-left: 4rem;\n      }\n      .demo-column > * {\n        margin-bottom: 2rem;\n      }\n    </style>\n    <div class="demo">\n      <div class="demo-column">\n        <calcite-accordion>\n          <calcite-accordion-item heading="Accordion Item"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item heading="Accordion Item 2"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item heading="Accordion Item 3"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item heading="Accordion Item 4"\n            ><img src="https://placem.at/places?w=200&txt=0" />\n          </calcite-accordion-item>\n          <calcite-accordion-item heading="Accordion Item 5" expanded>\n            <calcite-tree lines>\n              <calcite-tree-item>\n                Child 1\n              </calcite-tree-item>\n              <calcite-tree-item>\n                Child 2\n                <calcite-tree slot="children">\n                  <calcite-tree-item>\n                    Grandchild 1\n                  </calcite-tree-item>\n                  <calcite-tree-item>\n                    Grandchild 2\n                    <calcite-tree slot="children">\n                      <calcite-tree-item>\n                        Great-Grandchild 1\n                      </calcite-tree-item>\n                      <calcite-tree-item>\n                        Great-Grandchild 2\n                      </calcite-tree-item>\n                    </calcite-tree>\n                  </calcite-tree-item>\n                </calcite-tree>\n              </calcite-tree-item>\n              <calcite-tree-item>\n                Child 3\n              </calcite-tree-item>\n            </calcite-tree>\n          </calcite-accordion-item>\n        </calcite-accordion>\n        <calcite-notice kind="danger" scale="s" open>\n          <div slot="title">Something failed</div>\n          <div slot="message">\n            There was an error while performing the task.\n          </div>\n          <calcite-link slot="link" title="my action">Retry</calcite-link>\n        </calcite-notice>\n        <calcite-notice icon kind="success" scale="s" open closable>\n          <div slot="title">Something worked</div>\n          <div slot="message">\n            That thing you wanted to do worked as expected\n          </div>\n        </calcite-notice>\n        <calcite-label>\n          Segmented Control\n          <calcite-segmented-control>\n            <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>\n            <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>\n            <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>\n            <calcite-segmented-control-item value="vue">Vue</calcite-segmented-control-item>\n          </calcite-segmented-control>\n        </calcite-label>\n        <calcite-icon icon="3d-glasses"></calcite-icon>\n      </div>\n      <div class="demo-column">\n        <div>\n          <calcite-card selected selectable>\n            <img\n              alt="thumbnail"\n              slot="thumbnail"\n              style="width:260px"\n              src="${placeholderImage({\n  width: 260,\n  height: 160\n})}"\n            />\n            <h3 slot="title">Selectable card</h3>\n            <calcite-link slot="footer-start">Lead füt</calcite-link>\n            <calcite-link slot="footer-end">Trail füt</calcite-link>\n          </calcite-card>\n        </div>\n        <div>\n          <calcite-dropdown>\n            <calcite-button slot="trigger">Primary</calcite-button>\n            <calcite-dropdown-group group-title="View">\n              <calcite-dropdown-item icon-start="list-bullet" selected>List</calcite-dropdown-item>\n              <calcite-dropdown-item icon-start="grid">Grid</calcite-dropdown-item>\n              <calcite-dropdown-item icon-start="table">Table</calcite-dropdown-item>\n            </calcite-dropdown-group>\n          </calcite-dropdown>\n          <calcite-button appearance="outline">Outline</calcite-button>\n          <calcite-button kind="danger">Red</calcite-button>\n        </div>\n        <div>\n          <label>\n            <calcite-checkbox indeterminate></calcite-checkbox>\n            Initially indeterminate and unchecked\n          </label>\n        </div>\n        <div>\n          <calcite-chip>Neutral</calcite-chip>\n          <calcite-chip kind="inverse">Inverse</calcite-chip>\n          <calcite-chip kind="brand">Brand</calcite-chip>\n        </div>\n        <div>\n          <calcite-chip appearance="transparent">Neutral</calcite-chip>\n          <calcite-chip appearance="transparent" kind="inverse">Inverse</calcite-chip>\n          <calcite-chip appearance="outline-fill" kind="brand">Brand</calcite-chip>\n        </div>\n        <calcite-pagination total-items="1200" page-size="100" start-item="1"></calcite-pagination>\n        <calcite-slider\n          min="0"\n          max="100"\n          min-value="50"\n          max-value="85"\n          step="1"\n          min-label="Temperature range (lower)"\n          max-label="Temperature range (upper)"\n        ></calcite-slider>\n      </div>\n      <div class="demo-column">\n        <calcite-date-picker scale="m" value="2020-11-27"></calcite-date-picker>\n        <calcite-tabs>\n          <calcite-tab-nav slot="title-group">\n            <calcite-tab-title selected>Tab 1 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 2 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 3 Title</calcite-tab-title>\n            <calcite-tab-title>Tab 4 Title</calcite-tab-title>\n          </calcite-tab-nav>\n        </calcite-tabs>\n        <calcite-loader class="chromatic-ignore"></calcite-loader>\n        <label>\n          <calcite-switch scale="m" checked> </calcite-switch>\n          Red switch scale medium\n        </label>\n      </div>\n    </div>\n  </div>`'}};var componentMeta={title:"Theming/Custom Theme",includeStories:["interactive"]},mdxStoryNameToKey={Interactive:"interactive"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/06-faq.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/FAQ",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'# Frequently Asked Questions\n\n## What is Calcite Design System?\n\nCalcite Design System is a collection of reusable components, coupled with implementation, guidance, and advice, that together can be used to build engaging and consistent products and applications. Its purpose is to create and maintain common standards of aesthetics, interface design, accessibility, usability, and patterns, while strengthening a consistent and familiar experience across and between mapping applications.\n\n## How can I use Calcite Design System?\n\nYou can start building web apps or websites at the [getting started page](https://developers.arcgis.com/calcite-design-system/get-started/). Additionally, we have a [Sketch UI kit](https://developers.arcgis.com/calcite-design-system/sketch-ui-kit/) and [Figma UI kit](https://developers.arcgis.com/calcite-design-system/figma-ui-kit/) for designers, along with the best practices for working with developers to ensure consistent design outcomes.\n\nCalcite Design System serves as the collective documentation resource for both design guidance and composable frameworks. This includes tools, guidance, inspiration, UI kits, and other Calcite Design System frameworks.\n\nThe suggested patterns and component guidelines represent the best in user-centric design standards across our family of applications and products. As such, this resource is a living, growing domain that will continue to evolve in lockstep with the best design at Esri.\n\n## What are the Calcite Design System repositories?\n\nEsri\'s design principles, components, and patterns can be consumed through a suite of frameworks to help you get started quickly. The Calcite Design System references patterns and components provided by these frameworks, however the source of truth for implementation-specific documentation will always be found in each respective GitHub project.\n\n[Calcite Components](https://github.com/Esri/calcite-components)\n\n[Calcite Components Examples](https://github.com/Esri/calcite-components-examples)\n\n[Calcite Colors](https://github.com/Esri/calcite-colors)\n\n[Calcite UI Icons](https://github.com/Esri/calcite-ui-icons)\n\n[Calcite Point Symbols](https://github.com/Esri/calcite-point-symbols)\n\n[Calcite UI Kits](https://github.com/Esri/calcite-ui-kits)\n\n## What are Calcite Components?\n\nCalcite Components are a set of reusable web components built using Stencil.js. With Calcite Components, you can quickly build on-brand, lightweight, and accessible web applications.\n\nThe framework-agnostic components can be used to develop entire websites and applications. The set is flexible for developers and adheres to consistent, industry-standard design principles. The codebase is well supported, steadily maintained, and always being improved.\n\n### What are web components?\n\nWeb components are reusable custom elements with their functionality encapsulated away from the rest of your code. They are built on Web Component standards, will work across modern browsers, and can be used with any JavaScript library or framework that works with HTML.\n\n### What are slots?\n\nSlots are a common web components concept, and chances are you already use them. For example, take the following HTML:\n\n```html\n<select>\n  <option value="js">JavaScript</option>\n  <option value="ts">TypeScript</option>\n</select>\n```\n\nThe `option` elements are placed in `select`\'s _default slot_. Additionally, the "JavaScript" and "TypeScript" text is placed in `option`\'s respective default slots. Many Calcite Components also utilize default slots. For example, here is a `calcite-dropdown` component:\n\n```html\n<calcite-dropdown>\n  <calcite-button slot="trigger">Open Dropdown</calcite-button>\n  <calcite-dropdown-item active>Date modified</calcite-dropdown-item>\n  <calcite-dropdown-item>Title</calcite-dropdown-item>\n</calcite-dropdown>\n```\n\nThe `calcite-dropdown-item`s are placed in `calcite-dropdown`\'s default slot. In many cases a default slot is all that is needed. However, as components become more complicated, the need arises to position and style child components differently. This is where _named slots_ come into play. In the example above, we are passing `calcite-button` into the dropdown\'s `trigger` slot. This informs the dropdown that the `calcite-button` component should be handled differently than the components in the default slot. If a Calcite Component has slots, they will be listed in the documentation. For example, [here are the slots](https://developers.arcgis.com/calcite-design-system/components/card/#component-api-slots) for `calcite-card`. For a more detailed explanation, I suggest reading the [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_templates_and_slots#adding_flexibility_with_slots) about slots.\n\n### How do I change modes?\n\nCalcite Components provide light and dark modes which can be changed using CSS classes: `calcite-mode-light` and `calcite-mode-dark`. There is also a `calcite-mode-auto` class which defers to the browser\'s CSS "prefers-color-scheme" media query to decide whether the light or dark mode will be used.\n\nSetting the mode class on an element changes all of their child nodes as well. Therefore, to switch the whole app from light to dark, we can do the following:\n\n```html\n<div class="calcite-mode-dark">\n  \x3c!-- your app --\x3e\n</div>\n```\n\n### How do I change the style of a component?\n\nCalcite Components provide CSS variables to override styles. The CSS cannot be altered for a component without the variables due to web component\'s encapsulation. There are CSS variables for [color](https://developers.arcgis.com/calcite-design-system/foundations/colors/) and [typography](https://developers.arcgis.com/calcite-design-system/foundations/type/). Additionally, some Calcite Components have their own CSS variables to change component-specific styles. These styles can be found in a component\'s documentation. For example, [here are the css variables](https://developers.arcgis.com/calcite-design-system/components/loader/#component-api-styles) provided for `calcite-loader`.\n\nIf we want to swap the foreground and text colors, we can use the variables:\n\n```css\ncalcite-notice {\n  --calcite-ui-foreground-1: #151515;\n  --calcite-ui-text-1: #ffffff;\n}\n```\n\nThe CSS variable [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties) provides a detailed explanation of the functionality.\n\n### Is Internationalization supported?\n\nAll of our components that provide strings in the user interface allow those strings to be set via a property. This allows you to define the string for the locale you would like. Your application can handle internationalization as it sees fit.\n',mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/FAQ",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/07-conventions.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Conventions",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'# Component Guidelines\n\nThis is a living document defining our best practices and reasoning for authoring Calcite Components.\n\n## General Guidelines\n\nGenerally adhere to and follow these best practices for authoring components.\n\n- [Google Web Component Best Practices](https://developers.google.com/web/fundamentals/web-components/best-practices)\n- [Custom Element Conformance - W3C Editor\'s Draft](https://w3c.github.io/webcomponents/spec/custom/#custom-element-conformance)\n\n## Structure\n\nWe follow Stencil\'s suggested component structure. See their [style guide](https://github.com/ionic-team/stencil/blob/master/STYLE_GUIDE.md#file-structure) for more details.\n\n## Component Responsibilities\n\nCalcite Components broadly targets two groups of projects inside Esri:\n\n- **Sites** like [esri.com](https://esri.com) and [developers.arcgis.com](https://developers.arcgis.com).\n- **Apps** like [ArcGIS Online](https://arcgis.com), [Vector Tile Style Editor](https://developers.arcgis.com/vector-tile-style-editor), [Workforce](https://www.esri.com/en-us/arcgis/products/workforce/overview), [ArcGIS Hub](https://hub.arcgis.com) etc...\n\nComponents should present the minimum possible implementation to be usable by both sites and apps and leave as much as possible to users.\n\nIt is generally agreed on that components should not:\n\n- Make network requests. Authentication and the exact environment of the request is difficult to manage and better left to the specific application or site.\n- Manage routing or manipulate the URL. Managing the URL is the domain of the specific site or app.\n- Implement any feature which can easily be achieved with simple CSS and HTML. E.x. it was decided that `<calcite-switch>` should not support `text` or `position` properties because those could be easily duplicated with CSS ([ref](https://github.com/ArcGIS/calcite-components/pull/24#discussion_r289424140))\n- Implement any component which might replace a browser feature, without adding functionality that goes above and beyond what browser defaults would provide.\n\nHowever components are allowed to:\n\n- Use or implement `localStorage` if there is a specific use case.\n- Communicate with other components if a specific use case exists.\n\n**Discussed In**:\n\n- [Should tabs support syncing and loading from localstorage](https://github.com/ArcGIS/calcite-components/pull/27) . **Yes** because such feature are difficult to implement for **Sites** and would require lots of additional JavaScript work on the part of teams and authors\n- [Should switch support a label](https://github.com/ArcGIS/calcite-components/pull/24#discussion_r289424140). **No** because label place\n\n## Events\n\nAll public events should be documented with [JSDoc](https://jsdoc.app/).\n\n### Event Names\n\nEvent names should be treated like global variables since they can collide with any other event names and global variables. As such follow these guidelines when naming events.\n\n- Name events list `Component + Event name` for example the `change` event on `<calcite-tabs>` should be named `calciteTabsChange`.\n- Always prefix event names with `calcite` and never use an event name used by existing DOM standards <https://developer.mozilla.org/en-US/docs/Web/Events>.\n- For example:\n  - Bad: `change`\n  - Good: `calciteTabChange`\n- If an existing event can be listened to, don\'t create a new custom event. For example, there is no need to create a `calciteButtonClick` event because a standard `click` event will still be fired from the element.\n- For consistency, use `calcite<ComponentName>Change` for value change events.\n\n**Discussed In:**\n\n- <https://github.com/Esri/calcite-components/pull/24/files/3446c89010e3ef0421803d68d627aba2e7c4bfa0#r289430227>\n\n### Private/Internal Events\n\nIf you need to use events to pass information inside your components for example to communicate between parents and children make sure you call `event.stopPropagation();` and `event.preventDefault();` to prevent the event from reaching outside the component.\n\nAlso, make sure to add the `@internal` JSDoc tag to hide an event from the generated doc or `@private` to hide it from both the doc and generated type declarations.\n\n### Event Details\n\nOnly attach additional data to your event if that data cannot be determined from the state of the component. This is because events also get a reference to the component that fired the event. For example you do not need to pass anything exposed as a `@Prop()` in the event details.\n\n```tsx\n@Listen("calciteCustomEvent") customEventHandler(\n  event: CustomEvent\n) {\n  console.log(event.target.prop); // event.target is the component that fired the event.\n}\n```\n\n`<calcite-tab-nav>` is also an example of this. The `event.details.tab` item contains the index of the selected tab or the tab name which cannot be easily determined from the state of `<calcite-tab-nav>` in some cases so it makes sense to include in the event.\n\n### Native event cancelation\n\nWhen a component **handles events for its own interaction** (e.g., moving between list items, closing an open menu), if the event is tied to default browser behavior (e.g., space key scrolling the page), `Event.preventDefault()` must be called to avoid mixed behavior.\n\n```tsx\nclass SomeInputTypeComponent {\n  handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === "Escape") {\n      /* clear text/close popover */\n      event.preventDefault(); // let browser or other components know that the event has been handled\n    }\n    // ...\n  }\n}\n```\n\nFor composite components or components that support children (either light or shadow DOM), they may need to check if an event has been canceled (`Event.defaultPrevented`) before handling it.\n\n```tsx\nclass CompositeOrParentComponent {\n  handleKeyDown(event: KeyboardEvent): void {\n    if (\n      event.key === "Escape" &&\n      !event.defaultPrevented // check if child component has already handled this\n    ) {\n      /* close */\n      event.preventDefault(); // let browser or other components know that the event has been handled\n    }\n    // ...\n  }\n}\n```\n\n### Interaction events\n\nPointer events should be used in favor of mouse events to maximize device compatibility.\n\n### Event listeners\n\nThere are a few ways to add event listeners within our components:\n\n1. `@Listen` decorator\n   - automatically cleaned up by component lifecycle\n   - can easily specify [different event listener options](https://stenciljs.com/docs/events#listen-decorator)\n   - does not provide event type information\n   - event name is not type checked\n2. JSX event listener props\n   - automatically cleaned up by component lifecycle\n   - cannot specify event listener options (some events may have a matching capture prop)\n   - provides event type information\n   - event name is type checked\n3. `addListener`\n   - not removed by the component lifecycle, so the listener needs to be explicitly removed to prevent memory leaks\n   - provides total flexibility regarding event listener options\n   - provides event type information\n   - event name is not type checked\n\n1 and 2 should be used whenever possible (which one you use will depend on convenience). 3 should only be used whenever 1 and 2 are not possible or ideal.\n\n## Properties\n\nPrivate/internal properties should be annotated accordingly to avoid exposing them in the doc and/or API. You can do this by using the `@private`/`@internal` [JSDoc](https://jsdoc.app/) tags.\n\n### Reflecting to attributes\n\nIt is recommended to reflect properties that fit the following criteria:\n\n- are static or will not be updated frequently during the component lifespan (e.g., a number that represents a range min or max would be reflected, but a number that represents a value that will constantly be updated by the user would not)\n- value represents non-rich data or booleans/numbers/strings that are not used as content (e.g., a string that represents a mode would be reflected, but a string that represents a placeholder, title or summary would not)\n- are public and belong to a public component\n- required for internal styling or would make internal styling easier\n\nDoing so will give developers more flexibility when querying the DOM. This is important in framework environments where we can\'t safely assume components will have their attributes set vs properties.\n\n### `ref` usage\n\nDue to a [bug in Stencil](https://github.com/ionic-team/stencil/issues/4074), `ref` should be set as the last property in JSX to ensure the node\'s attributes/properties are up to date.\n\n```jsx\n<div\n  class={CSS.foo}\n  // ...\n  tabIndex={0}\n  // eslint-disable-next-line react/jsx-sort-props\n  ref={this.storeSomeElementRef}\n/>\n```\n\n## Focus support\n\nComponents with focusable content, must implement the following pattern:\n\n```ts\ninterface FocusableComponent {\n  setFocus(focusId?: FocusId): Promise<void>; // focusId should be supported if there is more than one supported focus target\n}\n\ntype FocusId = string;\n```\n\n**Note**: Implementations can use the [`focusElement`](https://github.com/Esri/calcite-components/blob/f2bb61828f3da54b7dcb5fb1dade12b85d82331e/src/utils/dom.ts#L41-L47) helper to handle focusing both native and calcite components.\n\nExamples:\n\n- [`calcite-color`](https://github.com/Esri/calcite-components/blob/78a70a805324689d516130816a69f031e39c5338/src/components/color/color.tsx#L409-L413)\n- [`calcite-panel` (supports `focusId`)](https://github.com/Esri/calcite-components/blob/f2bb61828f3da54b7dcb5fb1dade12b85d82331e/src/components/panel/panel.tsx#L298-L311)\n\n## CSS Class Names\n\nBecause most components utilize shadow DOM, there is far less concern over naming collisions in a global CSS namespace. In addition, it\'s better for file transfer times and easier to write if class names are shorter. For these reasons, full BEM is not necessary. Instead, we can omit the "Block", and use the host instead. Consider the following BEM markup:\n\n```html\n<div class="card">\n  <h3 class="card__title card__title--large">Title</h3>\n  <p class="card__text">Text</p>\n</div>\n```\n\nIn a component using shadow DOM, this should instead be written as:\n\n```jsx\n<Host>\n  <h3 class="title title--large">Title</h3>\n  <p class="text">Text</p>\n</Host>\n```\n\nNotice `.card` does not appear anywhere. We would then apply styles to the host element itself:\n\n```scss\n:host {\n  // card styles here\n}\n\n.title {\n}\n.title--large {\n}\n.text {\n}\n```\n\nModifier classes on the "block" (host element) can often be written by reflecting the prop and selecting it directly via an attribute selector:\n\n```scss\n:host([kind="success"]) {\n}\n```\n\nThis builds a nice symmetry between the styling and the public API of a component.\n\n- <https://github.com/ArcGIS/calcite-components/issues/28>\n- <https://github.com/ArcGIS/calcite-components/pull/24#discussion_r287462934>\n- <https://github.com/ArcGIS/calcite-components/pull/24#issuecomment-495788683>\n- <https://github.com/ArcGIS/calcite-components/pull/24#issuecomment-497962263>\n\n## assets\n\nIf a component needs assets, they should be placed under a `assets/<component-name>` subdirectory. For example,\n\n```text\nmy-component/\n  assets/\n    my-component/\n      asset.json\n  my-component.e2e.ts\n  my-component.tsx\n  my-component.scss\n  ...\n```\n\nThe component\'s metadata should then include the following metadata prop `assetsDir: ["assets"]`.\n\n```tsx\nimport { Component, Host, h } from "@stencil/core";\n\n@Component({\n  tag: "calcite-test",\n  shadow: true,\n  assetsDir: ["assets"]\n})\nexport class MyComponent {\n  /* ... */\n}\n```\n\nAfterwards, any asset path references must use the `getAssetPath` utility, using the `assets` directory as the root.\n\n```ts\nconst assetPath = getAssetPath(`./assets/my-component/asset.json`);\n```\n\nThis is required in order to have a unified assets folder in the distributable.\n\n## Bundling and Loading\n\nStencil has the capability to build and distribute a large variety of outputs based on our needs. You can read more about this in the [output targets](https://github.com/ionic-team/stencil/blob/cc55401555ff5c28757cf99edf372dcada2c0b25/src/compiler/output-targets/readme.md) documentation.\n\nAs a best practice we should follow [Ionic\'s configuration](https://github.com/ionic-team/ionic/blob/master/core/stencil.config.ts) and generate a `bundle` for each component. Stencil will then generate a loader that will dynamically load the components used on the page.\n\n**Note:** This is highly likely to change as we move closer to our first release and as Stencil improves their documentation around their specific methods and build processes.\n\nEach root component should have a corresponding bundle entry in `stencil.config.ts`.\n\n## Unique IDs for Components\n\nMany times it is necessary for components to have a `id="something"` attribute for things like `<label>` and various `aria-*` properties. To safely generate a unique id for a component but to also allow a user supplied `id` attribute to work follow the following pattern:\n\n```tsx\nimport { guid } from "../../utils/guid";\n\n@Component({\n  tag: "calcite-example",\n  styleUrl: "example.scss",\n  shadow: true\n})\nexport class Example {\n  // ...\n\n  guid: string = `calcite-example-${guid()}`;\n\n  render() {\n    const id = this.el.id || this.guid;\n    return <Host id={id}></Host>;\n  }\n\n  // ...\n}\n```\n\nThis will create a unique id attribute like `id="calcite-example-51af-0941-54ae-22c14d441beb"` which should have a VERY low collision change since `guid()` generates IDs with `window.crypto.getRandomValues`. If a user supplies an `id` this will respect the users `id`.\n\n## Prerendering and SSR\n\nStencil provide the capability to render web components on the server and seamlessly hydrate them on the client. This is handled by the `dist-hydrate-script` output target in `stencil.config.ts`.\n\nThis generates a `hydrate` directory which exposes `renderToString()` (for the server) and `hydrateDocument()` for the client.\n\nSince many of the same lifecycle methods are called on the client and server you may need to differentiate any code that relies on browser APIs like so:\n\n```ts\nimport { Build } from "@stencil/core";\n\nif (Build.isBrowser) {\n  // client side\n} else {\n  // server side\n}\n```\n\nChecking if the necessary APIs are present is also acceptable:\n\n```ts\nconst elements = this.el.shadowRoot ? this.el.shadowRoot.querySelector("slot").assignedElements() : [];\n```\n\nTo ensure that all components are compatible for prerendering a prerender build is done as part of `npm test`.\n\n## Cleaning up resources\n\nEnsure all components clean up their resources.\n\n### Timeouts\n\nWhen using `setTimeout()`, make sure that you clear the timeout using `clearTimeout()` in cases where the same timeout may be called again before the first timeout has finished or if the handler is no longer needed. For example, the handler may no longer need to be called if the component was disconnected from the DOM.\n\nExample:\n\n```tsx\nmenuFocusTimeout: number;\n\nfocusMenu(): void => {\n  clearTimeout(this.menuFocusTimeout);\n  this.menuFocusTimeout = window.setTimeout(() => focusElement(this.menuEl), 100);\n}\n```\n\n## Layering\n\nAvoid setting z-index ad hoc and instead use a contextual z-index layer from the [Tailwind z-index extension](../tailwind.config.ts#L212-L222). This will ensure proper layering across components.\n\n## Utils\n\nThere are utilities for common workflows in [`src/utils`](../src/utils).\n\n### Global attributes\n\nThe [`globalAttributes`](../src/utils/globalAttributes.ts) util was specifically made to access the `lang` global attribute when set on a Calcite component. However, it can be extended to allow additional [global attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#list_of_global_attributes) by adding to the [`allowedGlobalAttributes`](https://github.com/Esri/calcite-components/blob/a33aa0df0c5bf103f91187826e6b12b8ff266d90/src/utils/globalAttributes.ts#L4-L5) array. The util is used in [`calcite-pagination`](../src/components/pagination/pagination.tsx), which you can use as a reference.\n\n#### Usage steps\n\n1. Import the interface and watch/unwatch methods\n\n   ```js\n   import { GlobalAttrComponent, watchGlobalAttributes, unwatchGlobalAttributes } from "../../utils/globalAttributes";\n   ```\n\n2. Implement the interface\n\n   ```js\n   export class ComponentName implements GlobalAttrComponent {\n   ```\n\n3. Add `globalAttributes` state\n\n   ```js\n   @State() globalAttributes = {};\n   ```\n\n4. Add connect/disconnect callbacks\n\n   ```js\n   connectedCallback(): void {\n       watchGlobalAttributes(this, ["lang"]);\n   }\n\n   disconnectedCallback(): void {\n       unwatchGlobalAttributes(this);\n   }\n   ```\n\n5. Use the state to access `lang` (or another global attribute that may be allowed in the future).\n\n   ```js\n   const lang = this.globalAttributes["lang"] || document.documentElement.lang || "en";\n   ```\n\n### BigDecimal\n\n`BigDecimal` is a [number util](https://github.com/Esri/calcite-components/blob/master/src/utils/number.ts) that helps with [arbitrary precision arithmetic](https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic). The util is adopted from a [Stack Overflow answer](https://stackoverflow.com/a/66939244) with some small changes. There are some usage examples in [`number.spec.ts`](../src/utils/number.spec.ts).\n',mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Conventions",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/08-testing.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Testing",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:"# Tests\n\nComponents should have an automated test for any incoming features or bug fixes. Make sure all tests pass as PRs will not be allowed to merge if there is a single test failure.\n\nWe encourage writing expressive test cases and code that indicates intent. Use comments sparingly when the aforementioned can't be fully achieved. Keep it clean!\n\nPlease see Stencil's doc for more info on [end-to-end](https://stenciljs.com/docs/end-to-end-testing) testing. See one of our test examples [here](https://github.com/Esri/calcite-components/blob/master/src/components/block/block.e2e.ts).\n\n## Choosing which tests to write\n\n### End-to-end tests\n\nIn most cases, when working with components, you will need to write end-to-end tests.\n\n### Unit (spec) tests\n\nIf you are adding or updating shared utilities or shared modules you should make sure that there are unit tests covering those use cases.\n\n### Visual regression tests\n\nYou don't have to worry about writing visual regression tests. We cover those automatically using [Chromatic](https://www.chromatic.com/) in our build pipeline.\n\n## Writing Tests\n\n### Helpers and utilities\n\nThere are helpers and utilities to make testing common workflows easier. [`commonTests.ts`](https://github.com/Esri/calcite-components/blob/master/src/tests/commonTests.ts) contains common tests that you can import and use for your component. For example, every component should have an [`accessible`](https://github.com/Esri/calcite-components/blob/35f5aaf165b54d3f139e1ff2978a7c0246a0bf69/src/tests/commonTests.ts#L48-L62) test. To use the test in your component, import the helper and assert that the component is accessible.\n\n```js\nimport { accessible } from \"../../tests/commonTests\";\n\nit(\"is accessible\", async () => accessible(`<calcite-example>${content}</calcite-example>`));\n```\n\nHere is an example of the helper test usage in [`accordion.e2e.ts`](https://github.com/Esri/calcite-components/blob/35f5aaf165b54d3f139e1ff2978a7c0246a0bf69/src/components/accordion/accordion.e2e.ts#L16).\n\nThere are many more useful, common tests that you should use in specific scenarios. In most IDEs or text editors, you can search the function name of a common test to find usage examples in component's end-to-end test files.\n\nIn addition to the common tests, there are also test utilities in [`utils.ts`](https://github.com/Esri/calcite-components/blob/master/src/tests/utils.ts). These utilities are created to avoid duplicate code in component end-to-end test files. If you find yourself creating the same test function for different components, then it should be moved to `utils.ts`. A good example is [`getElementXY`](https://github.com/Esri/calcite-components/blob/35f5aaf165b54d3f139e1ff2978a7c0246a0bf69/src/tests/utils.ts#L124-L139). Determining the screen location of an element can be very important when testing interactive components. Here are some end-to-end tests where the utility is used in [`color-picker.e2e.ts`](https://github.com/Esri/calcite-components/blob/35f5aaf165b54d3f139e1ff2978a7c0246a0bf69/src/components/color-picker/color-picker.e2e.ts#L232-L236), [`input-e2e.ts`](https://github.com/Esri/calcite-components/blob/35f5aaf165b54d3f139e1ff2978a7c0246a0bf69/src/components/input/input.e2e.ts#L289-L293), [`shell-panel.e2e.ts`](https://github.com/Esri/calcite-components/blob/35f5aaf165b54d3f139e1ff2978a7c0246a0bf69/src/components/shell-panel/shell-panel.e2e.ts#L381), and [`slider.e2e.ts`](https://github.com/Esri/calcite-components/blob/35f5aaf165b54d3f139e1ff2978a7c0246a0bf69/src/components/slider/slider.e2e.ts#L176).\n\n### Prevent unnecessary logging in the build\n\n**This is only necessary if a component's test will produce a lot of console messages in a test run.**\n\nAs a best practice when writing tests, prevent emitting console warnings by stubbing them. Depending on the tested component, this may also apply to other console APIs.\n\nConsole warnings can end up polluting the build output messaging that makes it more difficult to identify real issues. By stubbing `console.warn`, you can prevent warning messages from displaying in the build. See [`color.e2e`](https://github.com/Esri/calcite-components/blob/af0c6cb/src/components/color/color.e2e.ts#L9-L17) for an example.\n\n## Unstable Tests\n\nIf you notice that a test fails intermittently during local or CI test runs, it is unstable and must be skipped to avoid holding up test runs, builds and deployments.\n\nTo skip a test, use the `skip` method that's available on [tests, or suites](https://jestjs.io/docs/en/api#methods) and submit a pull request. Once that's done, please create a follow-up issue by [choosing](https://github.com/Esri/calcite-components/issues/new/choose) the unstable test template and filling it out.\n",mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Testing",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/09-styling.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Styling",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'# Styling\n\nBe sure to set `shadow: true` in Stencil\'s `@Component` options to make sure styles are encapsulated in our Calcite design system. This helps keep our components consistent across applications.\n\n## Avoid complex CSS selectors\n\nAvoid complex CSS selectors and move logic into the component. As a general rule, if using more than 1 attribute in the CSS selector, use a class and move the logic into the component.\n\nFor example, instead of a complex CSS selector as demonstrated below:\n\n```css\n[alignment="icon-end-space-between"]:not([width="auto"]) {\n  /* ... */\n}\n```\n\nAdd a class to handle the logic in the component class.\n\n```tsx\n<div\n  class={{\n    [CSS.myClass]: alignment === "icon-end-space-between" && width !== "auto"\n  }}\n/>\n```\n\n```css\n.myClass {\n  /* ... */\n}\n```\n\n## Light Mode/Dark Mode\n\nIn the [global CSS file](https://github.com/Esri/calcite-components/blob/master/src/assets/styles/global.scss), we specify the values of each color for both light and dark mode. This enables theming to be inherited throughout a component tree. Consider this valid example:\n\n```html\n<div class="calcite-mode-dark">\n  <calcite-button>Button text</calcite-button>\n  <calcite-date-picker></calcite-date-picker>\n</div>\n```\n\nThis will cause both the button and the date picker to use the dark mode color variables declared in the global file. This makes it very easy for developers to move an entire app from light to dark mode and vice versa.\n\nTo make this work, inside a component\'s SASS file, _you must use colors from the theme variables_. For example\n\n```scss\n// 🙅‍♀️ using the sass var will not correctly inherit or change in light/dark mode\n:host {\n  color: $ui-brand-light;\n}\n\n// 👍 using the CSS var will inherit correctly\n:host {\n  color: var(--calcite-ui-brand);\n}\n```\n\n## Custom Themes\n\nSince Calcite Components might be used in many different contexts such as configurable apps, multiple themes and appearances need to be supported. The most common use case for custom themes are applications where the end user needs to be able to customize brand colors and typography. To this end custom theming can be accomplished by overriding the [CSS Custom Properties (CSS Variables)](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) from the main light and dark modes with new values:\n\n```css\n:root {\n  --calcite-ui-brand: red;\n}\n```\n\nYou can apply these overrides to individual components as well:\n\n```css\ncalcite-slider {\n  --calcite-ui-brand: red;\n}\n```\n\nOr, add a class to the specific instance:\n\n```css\n.my-custom-theme {\n  --calcite-ui-brand: red;\n}\n```\n\n```html\n<calcite-slider class="my-custom-theme"></calcite-slider>\n```\n\n### Typography\n\nAll components have been constructed to inherit their `font-family`. This enables you to change the font much like changing the colors:\n\n```css\n:root {\n  font-family: "Comic Sans";\n}\n```\n\n### Palette\n\nThe Esri color palette can be found [here](https://esri.github.io/calcite-colors/).\n\n**Discussed In**:\n\n- <https://github.com/Esri/calcite-components/issues/507>\n',mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Styling",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/10-documentation.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Documentation",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'# Documentation\n\n## Stencil API reference\n\nStencil uses [JSDoc](https://jsdoc.app) for their API reference generation. Stencil generates a [`docs-json`](https://stenciljs.com/docs/docs-json) output target, which is parsed and displayed on the [SDK site](https://developers.arcgis.com/calcite-design-system/components). The API reference includes property/attribute names, descriptions, types, values, and description notes (e.g. required, optional, deprecated). The SDK site updates the API reference after Calcite Component releases.\n\n### Style guide\n\nFollow these conventions when adding or editing API reference:\n\n- Use complete sentences with proper grammar, capitalization, and punctuation.\n- No abbreviations, e.g. use "property" instead of "prop".\n- Verbs must be in present tense.\n- Use the full tag name when referencing other Calcite Components (prefix with `calcite-`), e.g. `calcite-button` instead of `button`.\n- For plural context, use `calcite-button`s instead of `calcite-button` elements.\n- Use backticks (`` ` ``) for the names of slots, events, properties, CSS variables, and component names (e.g. `calcite-button` instead of calcite-button and `selectionMode` instead of "selectionMode"). Also use backticks for the values of properties and event details (e.g. `true`). If the value is a string, use both backticks and double quotes (e.g. `"single-persist"`).\n- Only use single quotes (`\'`) as apostrophes.\n- No links or URLs allowed in descriptions. If a link is necessary, a [custom JSDoc tag](https://stenciljs.com/docs/docs-json#custom-jsdocs-tags) should be added and parsed in the SDK site.\n- Refrain from using "e.g." or "i.e." references. Leverage "such as" (or similar) where examples are referenced.\n- Use "Accessible" instead of "Aria" or "a11y" language.\n- Verify slots and properties/attributes don\'t use the text "optional" in their descriptions.\n\n### Deprecation notices\n\nThere are two ways to document deprecations, depending on the API reference. In both cases a deprecated chip will be displayed in the SDK site within the component\'s API reference section.\n\n1. The `@deprecated` JSDoc tag is used for JavaScript properties, events, and methods in the `<component-name>.tsx` file. Notes can accompany the JSDoc tag, such as "use `<property>` instead".\n2. The `[Deprecated]` text is added at the beginning of the JSDoc description for slots (`@slots`) in the `<component-name>.tsx` file and CSS variables in the `<component-name>.scss` file. The text is parsed and removed from the description in the SDK site.\n\n### Usage snippets\n\nYou can provide code snippets demonstrating a specific behavior or pattern for a component. Within the component\'s directory, create a new `usage` directory. Then, create a Markdown file with the filename as the title of the snippet. There should only be one snippet per Markdown file. Stencil will add the usage snippets to the component\'s README after building. These usage snippets will then be displayed in Storybook.\n\n## Storybook\n\nCalcite Components uses [Storybook](https://storybook.js.org/) to provide an interactive showcase of components with accompanying documentation and also to provide previews for screenshot testing. Storybook is deployed with prerelease versions, whereas the [SDK site](https://developers.arcgis.com/calcite-design-system/components/) is only updated during releases. Storybook is a great resource for testing the newest changes and viewing the newest API reference.\n\n### Writing stories\n\nFor each main component (i.e. one that can be used by itself), there should be a `<component-name>.stories.ts` file in its component folder.\n\nEach component should use the [Component Story Format (CSF)](https://storybook.js.org/docs/html/api/csf) with at least two stories. If your component has properties that effect visual styles, you can use the [storybook knobs addon](https://www.npmjs.com/package/@storybook/addon-knobs) to allow people to manipulate properties and see live updates in the documentation. A minimal stories file might look something like this (explained below):\n\n```ts\nimport { boolean } from "@storybook/addon-knobs";\nimport { modesDarkDefault } from "../../../.storybook/utils";\nimport { storyFilters } from "../../../.storybook/helpers";\nimport { html } from "../../../support/formatting";\nimport notes from "./readme.md";\n\nexport default {\n  title: "Components/My Component",\n  parameters: { notes },\n  ...storyFilters()\n};\n\nexport const simple = (): string => html`<my-component demo-prop="${boolean("demo-prop", true)}"></my-component>`;\n\nexport const darkModeRTL_TestOnly = (): string =>\n  html`<my-component demo-prop dir="rtl" class="calcite-mode-dark"></my-component>`;\n\ndarkModeRTL_TestOnly.parameters = { modes: modesDarkDefault };\n```\n\nMake sure to import the README generated by Stencil so that it can be viewed in Storybook. Parent components should also import the READMEs for their children:\n\n```ts\nimport accordionReadme from "./readme.md";\nimport accordionItemReadme from "../accordion-item/readme.md";\n\nexport default {\n  title: "Components/Accordion",\n  parameters: {\n    notes: {\n      accordion: accordionReadme,\n      accordionItem: accordionItemReadme\n    },\n    ...\n};\n```\n\n#### General guidelines\n\n- Story names should be camelCased\n- All stories need to import the `storyFilters` util and include it in the default export so stories can be properly filtered\n- Update the [main custom theme](https://github.com/Esri/calcite-components/blob/master/src/05-custom-theme.stories.mdx) story instead of adding a specific story showing how to use a custom CSS prop\n- Should only have HTML for the component or use case itself (e.g., no need to wrap in calcite-label)\n- Update the `simple` story with a corresponding knob instead of adding a story specific to a new prop\n- Don\'t add or update a story if it is covered by an existing one\n\n#### Interactive showcase stories\n\n- Should have knobs configured to allow users to toggle different options available to the component\n- The simplest, base configuration should be named `simple` for consistency\n- This story should have as many knobs possible for developers to interact with\n- Should have one story per unique, supported use case\n- Stories that can be covered by adding a new prop/knob should instead update an existing playground story (with the exception of `_TestOnly` stories, explained below)\n\n#### Screenshot test-only stories\n\n- Should have the minimal HTML needed to reproduce the test scenario\n- Should not have knobs since screenshot tests cannot interact with them\n- Stories that are only meant for testing should use the `_TestOnly` suffix, which ensures it is only used for the screenshot test build. For example, if a snapshot with specific properties is needed for testing, it wouldn\'t need to be included in the playground where knobs can be used to display the state in the `simple` story.\n- Stories that are not meant for testing should use the `_NoTest` suffix, which ensures it is only used for the internal playground build. For example, stories that requires interaction not supported by the screenshot test environment, such as changing knobs.\n- The `simple` story and any other significant configuration should have a matching `darkModeRTL_TestOnly` story\n  - In order to reduce snapshot count, dark mode and RTL visual tests have been combined\n\n### Using utilities\n\nThere are a variety of Storybook [helpers](../.storybook/helpers.ts) and [utilities](../.storybook/utils.tsx) that should be used for common patterns. You can use existing stories as a reference for when/how the utilities and helpers should be used.\n',mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Documentation",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/11-accessibility.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Accessibility/General",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'<style>\n    .check-div {\n        padding: 1rem;\n    }\n    .check-div > label {\n        margin-left: 1rem;\n    }\n    fieldset {\n        padding: 3rem;\n    }\n    h2 {\n        font-size: 1.25rem;\n        padding: 0.5rem;\n    }\n    calcite-chip {\n        margin-right: 0.5rem;\n    }\n</style>\n\n# Accessibility\n\nCalcite Components leverages the [W3C Accessibility Standards](https://www.w3.org/WAI/standards-guidelines) to ensure the applications and experiences are usable by a wide range of audiences. Additional considerations in designing for individuals include:\n\n| Designing for Individuals                  | Do                                                                                                                                                                               | Don\'t                                                                                                                                                                                  |\n| ------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| On the Autistic Spectrum                   | <p>Use simple sentences and bullets.</p> <img src="https://user-images.githubusercontent.com/5023024/173696318-e39483e1-6a78-4318-8fb0-4b2599b288e2.svg" alt="" />               | <p>Create a wall of text.</p> <img src="https://user-images.githubusercontent.com/5023024/173696337-6d2eff4d-e9be-4537-9418-f99beb2e0294.svg" alt="" />                                |\n| Who use Screen Readers                     | <p>Write descriptive links & headings.</p> <img src="https://user-images.githubusercontent.com/5023024/173841832-cd01b9cb-23e7-4770-8e39-74d9562002b0.svg" alt="" />             | <p>Write vague links & headings.</p> <img src="https://user-images.githubusercontent.com/5023024/173696336-6eafc9dc-c55e-4e3f-9e08-0df30d13e50e.svg" alt="" />                         |\n| <p>Who have low vision</p>                 | <p>Use a combination of color, shapes & text.</p> <img src="https://user-images.githubusercontent.com/5023024/173696330-9c3ea753-9aec-4768-bb34-4b8eea233442.svg" alt="" />      | <p>Use only color to convey meaning or status.</p> <img src="https://user-images.githubusercontent.com/5023024/173696322-e5fb7e87-a026-4cb9-97d7-4ce5fde58b5e.svg" alt="" />           |\n| <p>With physical or motor difficulties</p> | <p>Make large clickable actions.</p> <img src="https://user-images.githubusercontent.com/5023024/173696323-11baf649-ec6d-499a-8e8a-cb1ffa74fc63.svg" alt="" />                   | <p>Demand precision.</p> <img src="https://user-images.githubusercontent.com/5023024/173696324-ca314eff-44a6-4327-ab2e-5d2ec215b1b8.svg" alt="" />                                     |\n| <p>Who are deaf or hard of hearing</p>     | <p>Use subtitles or provide transcripts for video.</p> <img src="https://user-images.githubusercontent.com/5023024/173696320-c06c6999-2397-4390-a1f1-e4929510de90.svg" alt="" /> | <p>Put content in audio or video formats only.</p> <img src="https://user-images.githubusercontent.com/5023024/173696314-00c0911d-0acc-473d-a527-65b61f0d2101.svg" alt="" />           |\n| <p>With Dyslexia</p>                       | <p>Provide reminders & prompts.</p> <img src="https://user-images.githubusercontent.com/5023024/173696328-767d2cc3-2635-449b-9159-1cea1dcdcc14.svg" alt="" />                    | <p>Force people to remember things from previous places.</p> <img src="https://user-images.githubusercontent.com/5023024/173696321-6655f279-71c0-4a8d-836f-5f429721e64a.svg" alt="" /> |\n\n<fieldset>\n    <legend># Checklist</legend>\n\n## Content\n\n<div class="check-div">\n    <input type="checkbox" name="1" id="1">\n    <label for="1">Information should not depend on color, sound, shape, size, or visual location\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="2" id="2">\n    <label for="2">Text and background color should have sufficient contrast\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="3" id="3">\n    <label for="3">Links should be descriptive and provide intent\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="4" id="4">\n    <label for="4">Links should be visually identifiable\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="5" id="5">\n    <label for="5">Use descriptive section headings\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="6" id="6">\n    <label for="6">Content should use semantic HTML elements\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="7" id="7">\n    <label for="7">HTML should be valid and error-free\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="8" id="8">\n    <label for="8">Forms have descriptive labels\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="9" id="9">\n    <label for="9">Forms have helpful and accessible error and verification messages\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="10" id="10">\n    <label for="10">Labels and help text should be programmatically associated with form fields\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="11" id="11">\n    <label for="11">Use correct HTML5 input types\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="12" id="12">\n    <label for="12">Content does not loose context when zoomed/enlarged\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="13" id="13">\n    <label for="13">Site should not time out unexpectedly\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="14" id="14">\n    <label for="14">Pages are understandable with no styles enabled\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="15" id="15">\n    <label for="15">Web page size should not exceed 500k\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n\n## Keyboard & Assistive Tech\n\n<div class="check-div">\n    <input type="checkbox" name="16" id="16">\n    <label for="16">Users should be able to navigate content using a screen reader\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="17" id="17">\n    <label for="17">Avoid mouse only interactions\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="18" id="18">\n    <label for="18">Support keyboard navigation\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="19" id="19">\n    <label for="19">Focus states should be visible for keyboard users\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="20" id="20">\n    <label for="20">Allow keyboard users to skip navigation\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="21" id="21">\n    <label for="21">Offer multiple ways to find pages on your website\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="22" id="22">\n    <label for="22">Use ARIA landmarks where applicable\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="23" id="23">\n    <label for="23">Set focus on modals, popovers, alerts, etc.\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n\n## Multimedia & Data Viz\n\n<div class="check-div">\n    <input type="checkbox" name="25" id="25">\n    <label for="25">Images should have meaningful alternative text or intentionally marked decorative\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="26" id="26">\n    <label for="26">Decorative images should not be visible to screen readers\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="27" id="27">\n    <label for="27">Content that moves automatically has the ability to be paused\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="28" id="28">\n    <label for="28">Limit or remove any flashing elements\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="29" id="29">\n    <label for="29">Ensure audio and video is not played automatically unless that is the expected behavior\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="30" id="30">\n    <label for="30">Multimedia should have alternative ways to be consumed\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="31" id="31">\n    <label for="31">Make data available for graphs, charts, maps, SVGs, etc. through assistive technology\n    <calcite-chip appearance="solid" icon="palette" scale="s">Design</calcite-chip>\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n<div class="check-div">\n    <input type="checkbox" name="32" id="32">\n    <label for="32">Table data is accessible to non-sighted users\n    <calcite-chip appearance="solid" kind="neutral" icon="code" scale="s">Development</calcite-chip>\n    </label>\n</div>\n\n</fieldset>\n\n## Renderring SVG elements within components\n\nSVGs are visual elements. When rendering them in a component, assess if the SVG has semantic meaning that needs to be described.\n\nIf the SVG has no semantic meaning or the semantic meaning is described elsewhere, make sure to set `aria-hidden="true"` on it so that screen readers can ignore it.\n\nIf the SVG has some semantic meaning that needs to be described to an end user, set the role to `img` and ensure that it has an `aria-label` or `aria-lablledby`.\n\nMore information can be found here: <https://www.deque.com/blog/creating-accessible-svgs/>\n',mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Accessibility/General",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/12-accessibilitydesign.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Accessibility/Design Quick Start",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'# Design Quick Start Guide\n\n1. **[Color](#1-color)**: [Color contrast](#color-contrast) | [Color and state](#color--state)\n2. **[Typography](#2-typography)**: [Text styling](#text-styling) | [Text resizing](#text-resizing)\n3. **[Information hierarchy](#3-information-hierarchy)**: [Semantic structure](#semantic-structure) | [Headings](#headings) | [Links](#links) | [Navigation](#navigation) | [Focus order](#focus-order)\n4. **[Forms](#4-forms)**: [Labels](#labels) | [Grouping controls](#grouping-controls) | [Form fields](#form-fields) | [Buttons and disabled buttons](#buttons) | [User notifications](#user-notifications) | [Touch zones](#touch-zones)\n5. **[Images](#5-images)**: [Background images](#background-images) | [Icons](#icons)\n6. **[Animation](#6-animation)**\n7. **[Writing and labels](#7-writing-and-labels)**: [Error messaging](#error-messaging)\n\n## 1. Color\n\n### Color contrast\n\nEsri targets WCAG 2.1 AA compliance, so large text and graphical elements need to pass a luminance contrast ratio of 3:1 and regular text needs to pass 4.5:1.\n\nLarge text equates 18pt or 14pt bold and greater. Regular sized text is anything less than that.\n\n> Note: Windows also provides a high contrast mode that is designed to improve text legibility and readability. It is often used by people with low-vision. High contrast mode will force a preset color palette on the browsing experience, but it also disables background images.\n\n### Color & state\n\nWhen designing components, it is important to use a combination of color, shapes, and text to indicate states and statuses, such as keyboard focus, form validation, and alerts. Using these other elements provides a secondary indicator in the event a color cannot be seen.\n\n### Who does color help?\n\nApproximately 300 million people in the world have some type of color vision deficiency. Color vision deficiency diminishes an individual\'s ability to distinguish between certain colors and may prevent them from seeing certain colors all together.\n\n### Color resources\n\n- [Color Contrast Checker](https://coolors.co/contrast-checker/000000-73777d)\n- [Adobe Color](https://coolors.co/contrast-checker/000000-73777d)\n- [Color Oracle](https://colororacle.org/)\n\n### WCAG Success Criteria for Color\n\n- [1.4.1 Use of Color](https://www.w3.org/TR/WCAG21/#use-of-color)\n- [1.4.3 Contrast (Minimum)](https://www.w3.org/TR/WCAG21/#contrast-minimum)\n- [1.4.11 Non-Text Contrast](https://www.w3.org/TR/WCAG21/#non-text-contrast)\n\n[scroll to top](#design-quick-start-guide)\n\n## 2. Typography\n\n### Text styling\n\nKeeping text aligned to the left (or right in certain languages) and limiting the use of text formatting such as underlining, italics, or writing in all capitals improves design for individuals who have dyslexia.\n\n### Text resizing\n\nConsider how text will reflow within components if the words become longer in translations or get bigger because an individual has changed their browser or operating system base font size. Within WCAG it\'s expected that text should be able to scale up to 200% without loss of content or functionality.\n\n### Who does typography help?\n\nSmart typography choices can improve readability for individuals with dyslexia, cognitive disabilities, or those who have low vision and may be using zoom tools to navigate an app or web page.\n\n### Typography resources\n\n- [Zoom Magnifier (Mac)](https://support.apple.com/en-us/HT210978)\n- [Magnifier](https://support.microsoft.com/en-us/windows/use-magnifier-to-make-things-on-the-screen-easier-to-see-414948ba-8b1c-d3bd-8615-0e5e32204198)\n- Zoom: [Firefox](https://support.mozilla.org/en-US/kb/font-size-and-zoom-increase-size-of-web-pages) | [Chrome](https://support.google.com/chrome/answer/96810) | [Edge](https://support.microsoft.com/en-us/microsoft-edge/accessibility-features-in-microsoft-edge-4c696192-338e-9465-b2cd-bd9b698ad19a) | [Safari](https://support.apple.com/guide/safari/zoom-in-on-webpages-ibrw1068/mac)\n\n[scroll to top](#design-quick-start-guide)\n\n## 3. Information hierarchy\n\n### Semantic structure\n\nThe value of using semantic HTML elements in interface design is that many elements communicate specific states to assistive technologies automatically; although, ARIA can be used to supplement interactions. However, it is recommended to use ARIA sparingly. When adding multiple elements to a page, ensure the HTML matches the intent. (e.g., If it is something that operates like a checkbox, is that apparent?)\n\n### Headings\n\nHeadings allow assistive technologies to automatically identify section headings and allow for keyboard shortcuts for navigating the page. It is best practice to properly nest headings (h1, h2, h3, h4, h5, h6) as a missing heading may make an individual think, they have missed a section of content.\n\n### Links\n\nLink text should be meaningful and inform the individual where the link will take them. For example, “Learn more about WCAG 4.1.3” instead of “Learn More”. Links should be associated with a unique identifier, such as an item title using aria-labelledby.\n\nBody links should be denoted with a style other than color and should either avoid opening in a new tab or display an indicator, such as an icon or supporting text, that communicates it as such.\n\n<img src="https://user-images.githubusercontent.com/5023024/171473221-4d0bfe41-c7cb-47e8-99c5-12ebbe872199.svg" alt="" />\n\n### Navigation\n\nNavigation should remain consistent when moving linearly on a page; nothing should move or disappear. Primary navigation should also remain consistent between related web pages, so that high-level links and components, like search or sign in, show up in the same places.\n\n### Focus order\n\nWhen navigating via keyboard, focus order should be logical and generally follow the visual order of the page.\n\n### Who does information hierarchy help?\n\nA well thought out page structure helps all users, especially those who navigate with assistive technologies to better understand the content and what native shortcuts are available within their tools.\n\n### Information hierarchy resources\n\n- [The Accessibility Tree](https://web.dev/the-accessibility-tree/)\n\n### WCAG Success Criteria for Information hierarchy\n\n- [1.3.1 Info and Relationships](https://www.w3.org/TR/WCAG21/#info-and-relationships)\n- [1.3.2 Meaningful Sequence](https://www.w3.org/TR/WCAG21/#meaningful-sequence)\n- [2.4.1 Bypass Blocks](https://www.w3.org/TR/WCAG21/#bypass-blocks)\n- [2.4.3 Focus Order](https://www.w3.org/TR/WCAG21/#focus-order)\n- [2.4.6 Headings and Labels](https://www.w3.org/TR/WCAG21/#headings-and-labels)\n- [3.1.5 Reading Level](https://www.w3.org/TR/WCAG21/#reading-level)\n- [3.2.3 Consistent Navigation](https://www.w3.org/TR/WCAG21/#consistent-navigation)\n- [3.2.4 Consistent Identification](https://www.w3.org/TR/WCAG21/#consistent-identification)\n- [3.3.2 Labels or Instructions](https://www.w3.org/TR/WCAG21/#labels-or-instructions)\n\n[scroll to top](#design-quick-start-guide)\n\n## 4. Forms\n\n### Labels\n\nLabels and supporting text should be kept near their relevant fields providing context for non-sighted and low vision individuals who may be using assistive technologies. If the system has constraints (e.g., dates being formatted in a specific way) supply help text.\n\nPlaceholder text should not be used as a replacement for labels as it vanishes upon typing, which can increase the cognitive load for individuals using the form as they must memorize what was there.\n\n### Grouping controls\n\nElements that are grouped need to be associated with related form controls, such as `<fieldset>` and `<legend>`. Examples include radio button groups, grouped checkboxes, and related form fields.\n\n<img src="https://user-images.githubusercontent.com/5023024/171473214-3b1824dc-553e-4d6d-8ce5-57a2d68e1d23.svg" alt="" />\n\n### Form fields\n\n- Always indicate required vs optional fields.\n- If a field uses input masks (asterisks on sensitive fields) provide an option to reveal the text to reduce cognitive load. Avoid patterns that require a press-and-hold to display plaintext.\n\n### Buttons\n\n- Buttons are triggered by the spacebar and enter/return keys.\n- Because buttons have slightly different keyboard interactions than links, it\'s good practice to distinguish the design patterns. This helps individuals who may be using assistive technologies like dictation software, verbally navigate a page.\n- Buttons should trigger an event, not take you to a different URL, as that is the purpose of links.\n\n#### Disabled buttons\n\nIt may not always be clear to an individual why a button is disabled. Due to its disabled state, an individual cannot interact with the button to use error messaging to inform their understanding. When disabling a button is necessary, it\'s recommended to add a tooltip or supporting text explaining why.\n\n### User notifications\n\nDisplaying form validation errors next to the field, which has triggered the message helps individuals with limited working memory maintain context.\n\n- Summarize errors at the top of the form with anchor links to jump to the affected fields. This benefits anyone using a keyboard who may be forced to move through the form linearly.\n- Including a count of errors in the summary helps all users, in particular those with cognitive disabilities.\n- After establishing an error pattern, it should be used consistently throughout the interface. Icons and styling need to mean the same thing, no matter where the pattern is surfaced.\n\n<img src="https://user-images.githubusercontent.com/5023024/171473203-9a60e718-d5dd-4e31-9a34-03cd1580fe40.svg" alt="" />\n\n### Touch zones\n\nBeing able to use mobile and touchscreen devices is valuable for individuals with physical or motor disabilities. Interactive elements should not require precise touch points and a best practice within mobile to use 44x44 px touch zones.\n\n<img src="https://user-images.githubusercontent.com/5023024/171473228-345c2b4d-c5d3-44fa-b9bb-04440d621990.svg" alt="" />\n\n### Who does form accessibility help?\n\nA well-designed form can be helpful to all users. Whereas poorly designed forms can add hurdles for those with cognitive disabilities or those who need to navigate by keyboard.\n\n### WCAG Success Criteria for Forms\n\n- [1.3.1 Info and Relationships](https://www.w3.org/TR/WCAG21/#info-and-relationships)\n- [1.3.2 Meaningful Sequence](https://www.w3.org/TR/WCAG21/#meaningful-sequence)\n- [2.1.1 Keyboard](https://www.w3.org/TR/WCAG21/#keyboard)\n- [2.1.2 No Keyboard Trap](https://www.w3.org/TR/WCAG21/#no-keyboard-trap)\n- [2.1.4 Character Key Shortcuts](https://www.w3.org/TR/WCAG21/#character-key-shortcuts)\n- [2.2.3 No Timing](https://www.w3.org/TR/WCAG21/#no-timing)\n- [2.2.6 Timeouts](https://www.w3.org/TR/WCAG21/#timeouts)\n- [2.4.6 Headings and Labels](https://www.w3.org/TR/WCAG21/#headings-and-labels)\n- [2.5.5 Target Size](https://www.w3.org/TR/WCAG21/#target-size)\n- [3.2.1 On Focus](https://www.w3.org/TR/WCAG21/#on-focus)\n- [3.2.2 On Input](https://www.w3.org/TR/WCAG21/#on-input)\n- [3.2.3 Consistent Navigation](https://www.w3.org/TR/WCAG21/#consistent-navigation)\n- [3.2.4 Consistent Identification](https://www.w3.org/TR/WCAG21/#consistent-identification)\n- [3.3 Input Assistance](https://www.w3.org/TR/WCAG21/#input-assistance)\n- [4.1.2 Name, Role, Value](https://www.w3.org/TR/WCAG21/#name-role-value)\n\n[scroll to top](#design-quick-start-guide)\n\n## 5. Images\n\nWhen adding images to content, use alt text to provide a succinct description that can be read by screen readers. Avoid alt text that would be redundant to surrounding content. If no new information is conveyed, consider marking the image as decorative.\n\n### Background images\n\nBackground images do not support the application of alt text in the same manner as images do because they are rendered with CSS. They can be marked up to communicate as an image, but it requires role="img" and an aria-label rather than an alt attribute.\n\n> Tip: Remember Windows High Contrast Mode will disable background images, so if using them to convey information, add an aria-label.\n\n### Icons\n\nIf an icon has a functional purpose, such as indicating a menu expands, it should have alt text. For vector-based icons such as iconfonts or SVGs, the alt text should be added via an aria-label.\n\nTo support the screen reader, NVDA, SVGs must also have role="img" to be read.\n\nIf the icon is decorative and describing it would be redundant to surrounding content, then it should be marked as decorative. To hide SVGs from screen readers, use aria-hidden="true". Do not use aria-hidden="false" as screen reader support is inconsistent.\n\nWhile not always possible due to mobile or internationalization, it is best practice to include a visible label with icons in buttons as this reduces the guesswork of an icon\'s label when using voice dictation software.\n\n### Who does image accessibility help?\n\nAdding alternative text to graphics benefits anyone who may be using a screen reader or voice dictation software to navigate and interact with content.\n\n### WCAG Success Criteria for Images\n\n- [1.1.1 Non-Text content](https://www.w3.org/TR/WCAG21/#non-text-content)\n- [1.3.1 Info and Relationships](https://www.w3.org/TR/WCAG21/#info-and-relationships)\n- [1.3.3 Sensory Characteristics](https://www.w3.org/TR/WCAG21/#sensory-characteristics)\n- [1.4.5 Images of Text](https://www.w3.org/TR/WCAG21/#images-of-text)\n- [1.4.11 Non-Text Content](https://www.w3.org/TR/WCAG21/#non-text-contrast)\n\n[scroll to top](#design-quick-start-guide)\n\n## 6. Animation\n\n- Auto-playing content is often considered distracting, especially if audio is involved.\n- Content should not flash or blink more than three times per second to avoid triggering photo-epileptic seizures.\n\n### Who does animation help?\n\nFor individuals who have motion sensitivities, whether that rooted in a vestibular disorder, migraines, or other factors, moving interfaces may cause dizziness, headaches, nausea, or even seizures.\n\n### WCAG Success Criteria for Animation\n\n- [1.3.3 Sensory Characteristics](https://www.w3.org/TR/WCAG21/#sensory-characteristics)\n- [1.4.2 Audio Control](https://www.w3.org/TR/WCAG21/#audio-control)\n- [2.2.2 Pause, Stop, hide](https://www.w3.org/TR/WCAG21/#pause-stop-hide)\n- [2.3.1 Three Flashes or Below Threshold](https://www.w3.org/TR/WCAG21/#three-flashes-or-below-threshold)\n- [2.5.4 Motion Actuation](https://www.w3.org/TR/WCAG21/#motion-actuation)\n\n[scroll to top](#design-quick-start-guide)\n\n## 7. Writing and labels\n\nInstructions for understanding and interacting with an interface should not rely on any sensory characteristics such as shape, size, visual location, orientation, or sound. Contextual descriptors such as those are often lost by non-sighted or low-vision individuals who may be using a screen-reader and keyboard shortcuts to navigate.\n\n### Error messaging\n\nError text should be descriptive and should not remove any visible instruction. If a form field has help text and form validation, they should both be able to be viewed at the same time.\n\n### Who does writing and labels help?\n\nProviding clear and unambiguous content, instructions and/or labels benefits everyone in better understanding an interface, but it can be particularly useful to those with cognitive, language, or learning disabilities, or those navigating an interface in a non-linear way.\n\n### WCAG Success Criteria for Writing and labels\n\n- [1.3.1 Info and Relationships](https://www.w3.org/TR/WCAG21/#info-and-relationships)\n- [1.3.2 Meaningful Sequence](https://www.w3.org/TR/WCAG21/#meaningful-sequence)\n- [3.1.2 Language of Parts](https://www.w3.org/TR/WCAG21/#language-of-parts)\n- [3.1.5 Reading Level](https://www.w3.org/TR/WCAG21/#reading-level)\n- [3.2.4 Consistent Identification](https://www.w3.org/TR/WCAG21/#consistent-identification)\n- [3.3.1 Error Identification](https://www.w3.org/TR/WCAG21/#error-identification)\n- [3.3.2 Labels or Instructions](https://www.w3.org/TR/WCAG21/#labels-or-instructions)\n- [3.3.3 Error Suggestion](https://www.w3.org/TR/WCAG21/#error-suggestion)\n- [3.3.4 Error Prevention (Legal, Financial, Data)](https://www.w3.org/TR/WCAG21/#error-suggestion)\n- [3.3.5 Help](https://www.w3.org/TR/WCAG21/#help)\n\n[scroll to top](#design-quick-start-guide)\n',mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Accessibility/Design Quick Start",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/13-accessibilitydeveloper.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Accessibility/Dev Quick Start",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'# Developer Quick Start Guide\n\n1. **[Shadow DOM](#1-shadow-dom)**\n2. **[Tests](#2-tests)**: [Adding a test](#adding-a-test) | [Failed test example](#failed-test-example) | [How to test](#how-to-test)\n3. **[Storybook](#3-storybook)**: [Adding a new story](#adding-a-new-story)\n\n## 1. Shadow DOM\n\nBroken associations between the Shadow DOM and global light DOM can break accessibility semantics.\n\n```html\n\x3c!-- Inaccessible example due to the Shadow DOM and global light DOM --\x3e\n<label for="four">four - broken cross boundary</label>\n<ui-input-broken id="four"></ui-input-broken>\n```\n\nIn this example, if we were to wrap an input in our web component but want to associate a label to the element, we would break the association. First, the `id` in this template will refer to the `ui-input-broken`, not the input contained within. We could change the attribute not to use `id` and pass it into the inner input `id`.\n\n```ts\nconst template = document.createElement("template");\ntemplate.innerHTML = `\n  <style>\n    :host {\n    }\n  </style>\n\n  <div>\n    <input id="" />\n  </div>\n`;\nclass UIInputBroken extends HTMLElement {\n  static get observedAttributes() {\n    return ["input-id"];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: "open" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    console.log(newValue);\n    if (attrName === "input-id") {\n      this.shadowRoot.querySelector("input").setAttribute("id", newValue);\n    }\n  }\n}\n\ncustomElements.define("ui-input-broken", UIInputBroken);\n```\n\nAs of today there are no great workarounds for associating elements across the Shadow DOM boundary. Either all the associated elements should exist in the light DOM or Shadow DOM.\n\nHowever, you _could_ extend the native element to allow an association.\n\n[scroll to top](#developer-quick-start-guide)\n\n## 2. Tests\n\n**The best tools only find 30% of known issues**, so they can\'t be relied upon. But they can be the first step towards accessibility.\n\nCalcite Components uses the [axe-core](https://github.com/dequelabs/axe-core) and [jest-axe](https://github.com/nickcolley/jest-axe) accessibility engines throughout its components. `axe-core` contains a number of best practices to help identify accessibility practices, such as ensuring every page has an h1 heading, and to help avoid "gotchas" in ARIA like where an ARIA attribute you used will get ignored. `axe-core` can mitigate over half of WCAG issues automatically. Additionally, it will return elements as "incomplete" where it\'s not certain, and manual review is needed.\n\nWhen a new component is added, breaking changes are introduced, and/or as new functionality is added, accessibility tests must take place. **All components should have automated tests pertaining to accessibility.**\n\n### Adding a test\n\nTo add a test, add the following to the `<component>.e2e.ts` file:\n\n```ts\n// Import the accessible test from commonTests\nimport { accessible } from "../../tests/commonTests";\n\n// describe function, identify the component\ndescribe("calcite-tree", () => {\n\n   // accessible() will test for a11y\n   it("is accessible", async () => accessible(`<calcite-tree></calcite-tree>`));\n\n   // Multiple a11y tests can be present in a component\n   it("is accessible: with nested children", async () =>\n    accessible(`\n        <calcite-tree lines>\n            <calcite-tree-item>\n            <a href="#">Child 2</a>\n            <calcite-tree slot="children">\n                <calcite-tree-item>\n                <a href="http://www.google.com">Grandchild 1</a>\n                </calcite-tree-item>\n            </calcite-tree>\n            </calcite-tree-item>\n        </calcite-tree>\n    `));\n```\n\nMultiple accessibility tests can be present in a component and be added to over time, which can be useful if the component contains many initiations. In the example above we\'re able to test `calcite-checkbox` with a `calcite-label` present and without. Note the tests will indicate which fails so we\'re able to mitigate if an error surfaces.\n\n#### Failed test example\n\nAn example of a failed test:\n\n```sh\nFAIL src/components/tree/tree.e2e.ts (23.34 s)\n  ● calcite-tree › is accessible: with nested children\n\n    expect(received).toHaveNoViolations(expected)\n\n    Expected the HTML found at $(\'calcite-tree[slot="children"]\') to have no violations:\n\n    <calcite-tree slot="children" aria-multiselectable="false" tabindex="-1" lines="" child="" scale="m" selection-mode="single" calcite-hydrated="">\n\n    Received:\n\n    "Elements must only use allowed ARIA attributes (aria-allowed-attr)"\n\n    Fix any of the following:\n      ARIA attribute is not allowed: aria-multiselectable="false"\n\n    You can find more information on this issue here:\n    https://dequeuniversity.com/rules/axe/4.4/aria-allowed-attr?application=axeAPI\n\n      54 |       getTag(componentTagOrHTML)\n      55 |     )\n    > 56 |   ).toHaveNoViolations();\n         |     ^\n      57 | }\n      58 |\n      59 | export async function renders(\n\n      at Object.accessible (src/tests/commonTests.ts:56:5)\n          at runMicrotasks (<anonymous>)\n```\n\n### How to test\n\n- `npm test` runs the current test suite\n- `npm run test:watch` will retest on file changes\n- [Learn more on testing](https://github.com/Esri/calcite-components/blob/master/CONTRIBUTING.md#running-the-tests) from our contributing docs\n\n[scroll to top](#developer-quick-start-guide)\n\n## 3. Storybook\n\nWe\'ve already added the a11y add on, [storybook-addon-a11y](https://storybook.js.org/addons/@storybook/addon-a11y) which uses `axe-core`, the same accessibility engine used for automated testing in CC. As new components and enhancements are added, **ensure stories are updated to test accessibility**. This includes as properties are added to components, to ensure we\'re upholding high standards to fit our audience\'s needs.\n\n[Learn more on writing stories](https://github.com/Esri/calcite-components/blob/master/CONTRIBUTING.md#writing-stories) from our contributing docs.\n\n### Adding a new story\n\nTo add a story, use the `<component>.stories.ts` file. For example:\n\n```ts\n// Accessible example\nexport const accessibleExample = (): string => html`<button>Accessible button</button>`;\n\n// Inaccessible example due to contrast issues\nexport const inaccessibleExample = (): string => html`\n  <button style="background-color:red;color:darkred">Inaccessible button</button>\n`;\n```\n\nEach story will showcase violations (if found), passes, and incomplete checks (requiring a manual check).\n\nFor instance, when the `inaccessibleExample` from above is depicted in a story Storybook\'s accessibility add-on will indicate contrast issues are present. Storybook will identify, but also recommend what is needed to pass the violation. In this example we must ensure there is sufficient contrast between the foreground and background colors to meet WCAG 2.0 AA contrast ratio thresholds of 4.5 to 1.\n\n![Storybook inaccessible example with accessibility contrast issue error depicted](https://user-images.githubusercontent.com/5023024/165529845-bbcbb139-f642-49d4-80a7-e8916e808278.png)\n\n[scroll to top](#developer-quick-start-guide)\n',mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Accessibility/Dev Quick Start",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/14-accessibilityroles.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Accessibility/Roles",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:'# Roles\n\n1. [Widget Roles](#1-widget-roles)\n2. [Abstract Roles](#2-abstract-roles)\n3. [Composite Roles](#3-composite-roles)\n   - i. [combobox](#i-combobox)\n   - ii. [grid](#ii-grid)\n   - iii. [listbox](#iii-listbox)\n   - iv. [menu](#iv-menu)\n   - v. [menubar](#v-menubar)\n   - vi. [radiogroup](#vi-radiogroup)\n   - vii. [tablist](#vii-tablist)\n   - viii. [tree](#viii-tree)\n   - ix. [treegrid](#ix-treegrid)\n\n## 1. Widget Roles\n\nStandalone user interface widgets or as part of larger, composite widgets.\n\n| Widget Role Name             | Description                                                                                                                                                                    | Resources                                                                                                                                                       |\n| ---------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| button                       | An `input` that allows for user-triggered actions when clicked or pressed. Reference related `link` widget role.                                                               | [W3C](https://www.w3.org/TR/wai-aria-1.1/#button), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role)                     |\n| checkbox                     | A checkable `input` that has three possible values: `true`, `false`, or `mixed`.                                                                                               | [W3C](https://www.w3.org/TR/wai-aria-1.1/#checkbox), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/checkbox_role)                 |\n| gridcell                     | A cell in a `grid` or `treegrid`.                                                                                                                                              | [W3C](https://www.w3.org/TR/wai-aria-1.1/#gridcell), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/gridcell_role)                 |\n| link                         | An interactive reference to an internal or external resource that, when activated, causes the user agent to navigate to that resource. Reference related `button` widget role. | [W3C](https://www.w3.org/TR/wai-aria-1.1/#link), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/link_role)                         |\n| menuitem                     | An option in a set of choices contained by a `menu` or `menubar`.                                                                                                              | [W3C](https://www.w3.org/TR/wai-aria-1.1/#menuitem), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menuitem_role)                 |\n| menuitemcheckbox             | A `menuitem` with a checkable state whose possible values are `true`, `false`, or `mixed`.                                                                                     | [W3C](https://www.w3.org/TR/wai-aria-1.1/#menuitemcheckbox), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menuitemcheckbox_role) |\n| menuitemradio                | A checkable `menuitem` in a set of elements with the same role, only one of which can be checked at a time.                                                                    | [W3C](https://www.w3.org/TR/wai-aria-1.1/#menuitemradio), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menuitemradio_role)       |\n| option                       | A selectable item in a `select` list.                                                                                                                                          | [W3C](https://www.w3.org/TR/wai-aria-1.1/#option), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/option_role)                     |\n| progressbar                  | An element that displays the progress status for tasks that take a long time.                                                                                                  | [W3C](https://www.w3.org/TR/wai-aria-1.1/#progressbar), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/progressbar_role)           |\n| radio                        | A checkable input in a group of elements with the same role, only one of which can be checked at a time.                                                                       | [W3C](https://www.w3.org/TR/wai-aria-1.1/#radio), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/radio_role)                       |\n| scrollbar                    | A graphical object that controls the scrolling of content within a viewing area, regardless of whether the content is fully displayed within the viewing area.                 | [W3C](https://www.w3.org/TR/wai-aria-1.1/#scrollbar), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/scrollbar_role)               |\n| searchbox                    | A type of textbox intended for specifying search criteria. See related `textbox` and `search`.                                                                                 | [W3C](https://www.w3.org/TR/wai-aria-1.1/#searchbox), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/searchbox_role)               |\n| separator (_when focusable_) | A divider that separates and distinguishes sections of content or groups of menuitems.                                                                                         | [W3C](https://www.w3.org/TR/wai-aria-1.1/#separator), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/separator_role)               |\n| slider                       | A user input where the user selects a value from within a given range.                                                                                                         | [W3C](https://www.w3.org/TR/wai-aria-1.1/#slider), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/slider_role)                     |\n| spinbutton                   | A form of `range` that expects the user to select from among discrete choices.                                                                                                 | [W3C](https://www.w3.org/TR/wai-aria-1.1/#spinbutton), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/spinbutton_role)             |\n| switch                       | A type of checkbox that represents on/off values, as opposed to checked/unchecked values. Reference related `checkbox` widget role.                                            | [W3C](https://www.w3.org/TR/wai-aria-1.1/#switch), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/switch_role)                     |\n| tab                          | A grouping label providing a mechanism for selecting the tab content that is to be rendered to the user.                                                                       | [W3C](https://www.w3.org/TR/wai-aria-1.1/#tab), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role)                           |\n| tabpanel                     | A container for the resources associated with a `tab`, where each `tab` is contained in a `tablist`.                                                                           | [W3C](https://www.w3.org/TR/wai-aria-1.1/#tabpanel), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tabpanel_role)                 |\n| textbox                      | A type of input that allows free-form text as its value.                                                                                                                       | [W3C](https://www.w3.org/TR/wai-aria-1.1/#textbox), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/textbox_role)                   |\n| treeitem                     | An option item of a `tree`. This is an element within a tree that may be expanded or collapsed if it contains a sub-level group of tree item elements.                         | [W3C](https://www.w3.org/TR/wai-aria-1.1/#treeitem), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/treeitem_role)                 |\n\n[scroll to top](#3-composite-roles)\n\n## 2. Abstract Roles\n\nDefining general role concepts, used for existence purposes only. **Authors must not use abstract roles in content.**\n\n| Abstract Role Name | Description                                                                                                                                                                                                                                                                                                                                       | Resources                                                                                                                                             |\n| ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------- |\n| command            | A form of widget that performs an action but does not receive input data.                                                                                                                                                                                                                                                                         | [W3C](https://www.w3.org/TR/wai-aria-1.1/#command), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/composite_role)       |\n| composite          | A widget that may contain navigable descendants or owned children.                                                                                                                                                                                                                                                                                | [W3C](https://www.w3.org/TR/wai-aria-1.1/#composite), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/composite_role)     |\n| input              | A generic type of widget that allows user input.                                                                                                                                                                                                                                                                                                  | [W3C](https://www.w3.org/TR/wai-aria-1.1/#input), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/input_role)             |\n| landmark           | A perceivable section containing content that is relevant to a specific, author-specified purpose and sufficiently important that users will likely want to be able to navigate to the section easily and to have it listed in a summary of the page. Such a page summary could be generated dynamically by a user agent or assistive technology. | [W3C](https://www.w3.org/TR/wai-aria-1.1/#landmark), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/landmark_role)       |\n| range              | An input representing a range of values that can be set by the user.                                                                                                                                                                                                                                                                              | [W3C](https://www.w3.org/TR/wai-aria-1.1/#range), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/range_role)             |\n| roletype           | The base role from which all other roles in this taxonomy inherit.                                                                                                                                                                                                                                                                                | [W3C](https://www.w3.org/TR/wai-aria-1.1/#roletype), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/roletype_role)       |\n| section            | A renderable structural containment unit in a document or application.                                                                                                                                                                                                                                                                            | [W3C](https://www.w3.org/TR/wai-aria-1.1/#section), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/section_role)         |\n| sectionhead        | A structure that labels or summarizes the topic of its related section.                                                                                                                                                                                                                                                                           | [W3C](https://www.w3.org/TR/wai-aria-1.1/#sectionhead), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/sectionhead_role) |\n| select             | A form widget that allows the user to make selections from a set of choices.                                                                                                                                                                                                                                                                      | [W3C](https://www.w3.org/TR/wai-aria-1.1/#select), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/select_role)           |\n| structure          | A document structural element.                                                                                                                                                                                                                                                                                                                    | [W3C](https://www.w3.org/TR/wai-aria-1.1/#structure), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/structure_role)     |\n| widget             | An interactive component of a graphical user interface (GUI).                                                                                                                                                                                                                                                                                     | [W3C](https://www.w3.org/TR/wai-aria-1.1/#widget), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/widget_role)           |\n| window             | A browser or application window.                                                                                                                                                                                                                                                                                                                  | [W3C](https://www.w3.org/TR/wai-aria-1.1/#window), [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/window_role)           |\n\n[scroll to top](#3-composite-roles)\n\n## 3. Composite Roles\n\n### i. combobox\n\nThe `combobox` role is for input that controls another element, such as a listbox or grid, that can dynamically pop up to help the user set the value of the input.\nThe popup can be a `listbox`, `grid`, `tree`, or `dialog`. Superclass role of `select`.\n\nLearn more about the combobox role on [W3C](https://www.w3.org/TR/wai-aria-1.1/#combobox) and [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/combobox_role).\n\n#### Combobox example\n\n<img src="https://user-images.githubusercontent.com/5023024/165993726-b047c80a-9a7c-443b-b1b0-7a9ddf6498b2.svg" alt="" />\n\n#### Combobox code\n\n```html\n\x3c!-- Combobox role example --\x3e\n<label for="season-input">Season</label>\n<input\n  id="season-input"\n  type="text"\n  role="combobox"\n  aria-autocomplete="list"\n  aria-expanded="false"\n  aria-controls="season-listbox"\n/>\n<ul id="season-listbox" role="listbox" aria-label="Seasons">\n  <li id="opt-winter" role="option">Winter</li>\n  <li id="opt-spring" role="option">Spring</li>\n  <li id="opt-summer" role="option">Summer</li>\n  <li id="opt-autumn" role="option">Autumn</li>\n</ul>\n```\n\n#### Keyboard functionality for Combobox\n\n| Key                      | Function                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| ------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `↓`                      | Moves focus to the next option, or to the first option if none was selected.                                                                                                                                                                                                                                                                                                                                                                    |\n| `Alt` + `↓` (_Optional_) | If the popup is available but not displayed, displays the popup without moving focus.                                                                                                                                                                                                                                                                                                                                                           |\n| `↑`                      | Moves focus to the previous option. Moving focus to the first option if focus was originally on the last option.                                                                                                                                                                                                                                                                                                                                |\n| `Alt` + `↑` (_Optional_) | If the popup has focus, returns focus to the combobox, otherwise it closes the popup.                                                                                                                                                                                                                                                                                                                                                           |\n| `Enter`                  | If the combobox is editable and an autocomplete suggestion is selected in the popup, accepts the suggestion either by placing the input cursor at the end of the accepted value in the combobox or by performing a default action on the value. For example, in a messaging application, the default action may be to add the accepted value to a list of message recipients and then clear the combobox so the user can add another recipient. |\n\n[scroll to top](#roles)\n\n### ii. grid\n\nThe `grid` role contains one or more rows of cells. The position of each cell is significant and can be focused using keyboard input.\n\nLearn more about the grid role on [W3C](https://www.w3.org/TR/wai-aria-1.1/#grid) and [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/grid_role).\n\n#### Grid Example\n\n<img src="https://user-images.githubusercontent.com/5023024/166739351-25082a7f-c7b9-47fe-91bb-353fb554a180.svg" alt="" />\n\n#### Grid Code\n\n```html\n\x3c!-- Grid role example\n     Code pen example: https://codepen.io/geospatialem/pen/OJzwWKm\n--\x3e\n<table role="grid" aria-labelledby="grid-header">\n  <caption id="grid-header">\n    WCAG Criterion and Versions\n  </caption>\n  <thead role="rowgroup">\n    <tr role="row">\n      <td></td>\n      <th role="columnheader" aria-label="Criterion">Criterion</th>\n      <th role="columnheader" aria-label="Version">Version</th>\n    </tr>\n  </thead>\n  <tbody role="rowgroup">\n    <tr role="row">\n      <th scope="row" role="rowheader" class="sr-only">Item 1</th>\n      \x3c!-- Note: for keyboard accessibility, all td elements, such as an input must contain a tabindex of 0 --\x3e\n      \x3c!-- example 1:\n           <input tabindex="0" type="checkbox" id="{{WCAG 2.0 1.4.1}}-select">\n           <label for="{{WCAG 2.0 1.4.1}}-select">{{WCAG 2.0 1.4.1}}</label>\n      --\x3e\n      \x3c!-- example 2:\n           <button tabindex="0">Success Criterion <span class="sr-only">{{WCAG 2.0 1.4.1}}</span></button>\n      --\x3e\n      <td role="gridcell" tabindex="-1">1.4.1</td>\n      <td role="gridcell" tabindex="-1">WCAG 2.0</td>\n    </tr>\n    <tr role="row">\n      <th scope="row" role="rowheader" class="sr-only">Item 2</th>\n      <td role="gridcell" tabindex="-1">1.4.10</td>\n      <td role="gridcell" tabindex="-1">WCAG 2.1</td>\n    </tr>\n    <tr role="row">\n      <th scope="row" role="rowheader" class="sr-only">Item 3</th>\n      <td role="gridcell" tabindex="-1">1.4.10</td>\n      <td role="gridcell" tabindex="-1">WCAG 2.1</td>\n    </tr>\n    \x3c!-- … Additional Rows … --\x3e\n  </tbody>\n</table>\n```\n\n#### Keyboard functionality for Grid\n\nWhen a keyboard user encounters a `grid`, they navigate the rows and columns using the `←`, `→`, `↑` and `↓` keys.\n\nTo activate the interactive component, they will use the `return` and `space` keys.\n\n| Key             | Function                                                                                                                                                                                                                              |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `→`             | Moves focus one cell to the right. If focus is on the right-most cell in the row, focus does not move.                                                                                                                                |\n| `←`             | Moves focus one cell to the left. If focus is on the left-most cell in the row, focus does not move.                                                                                                                                  |\n| `↓`             | Moves focus one cell down. If focus is on the bottom cell in the column, focus does not move.                                                                                                                                         |\n| `↑`             | Moves focus one cell up. If focus is on the top cell in the column, focus does not move.                                                                                                                                              |\n| `Page down`     | Moves focus down an author-determined number of rows, typically scrolling so the bottom row in the currently visible set of rows becomes one of the first visible rows. If focus is in the last row of the grid, focus does not move. |\n| `Page up`       | Moves focus up an author-determined number of rows, typically scrolling so the top row in the currently visible set of rows becomes one of the last visible rows. If focus is in the first row of the grid, focus does not move.      |\n| `Home`          | Moves focus to the first cell in the row that contains focus.                                                                                                                                                                         |\n| `End`           | Moves focus to the last cell in the row that contains focus.                                                                                                                                                                          |\n| `ctrl` + `Home` | Moves focus to the first cell in the first row.                                                                                                                                                                                       |\n| `ctrl` + `End`  | Moves focus to the last cell in the last row.                                                                                                                                                                                         |\n\n[scroll to top](#roles)\n\n### iii. listbox\n\nThe `listbox` role is used for lists from which a user may select one or more items which are static, unlike HTML `<select>` elements, may contain images.\n\nLearn more about the listbox role on [W3C](https://www.w3.org/TR/wai-aria-1.1/#listbox) and [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role).\n\n#### Listbox Example\n\n<img src="https://user-images.githubusercontent.com/5023024/166012949-d4e16d17-48c2-40a1-a856-35676eb9c884.svg" alt="" />\n\n#### Listbox Code\n\n```html\n\x3c!-- Listbox role example --\x3e\n<p id="listbox-label" role="label">Season</p>\n<input\n  type="text"\n  aria-labelledby="listbox-label"\n  role="combobox"\n  aria-expanded="true"\n  aria-autocomplete="list"\n  aria-owns="season-listbox"\n  aria-activedescendant="selected-option"\n/>\n<ul role="listbox" id="season-listbox">\n  <li role="option">Winter</li>\n  <li role="option" id="selected-option">Spring</li>\n  <li role="option">Summer</li>\n  <li role="option">Autumn</li>\n</ul>\n```\n\n#### Keyboard functionality for Listbox\n\n_Single selection_:\n\nIf none of the options are selected before the `listbox` receives focus, the first option receives focus. Optionally, the first option may be automatically selected. If an option is selected before the `listbox` receives focus, focus is set on the selected option.\n\n| Key                 | Function                                                                                                                                                                                    |\n| ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `↓`                 | Moves focus to the next option. Optionally, in a single-select listbox, selection may also move with focus.                                                                                 |\n| `↑`                 | Moves focus to the previous option. Optionally, in a single-select listbox, selection may also move with focus.                                                                             |\n| `Home` (_Optional_) | Moves focus to first option. Optionally, in a single-select listbox, selection may also move with focus. Supporting this key is strongly recommended for lists with more than five options. |\n| `End` (_Optional_)  | Moves focus to last option. Optionally, in a single-select listbox, selection may also move with focus. Supporting this key is strongly recommended for lists with more than five options.  |\n\n_Multiple selection_:\n\nIf none of the options are selected before the `listbox` receives focus, focus is set on the first option and there is no automatic change in the selected state. If one or more options are selected before the `listbox` receives focus, focus is set on the first option in the list that is selected.\n\nRecommended selection model, holding modifier keys, such as `Shift` or `ctrl`, is not necessary:\n\n| Key                                    | Function                                                                                                        |\n| -------------------------------------- | --------------------------------------------------------------------------------------------------------------- |\n| `space`                                | Changes the selection state of the focused option.                                                              |\n| `Shift` + `↓` (_Optional_)             | Moves focus to and toggles the selected state of the next option.                                               |\n| `Shift` + `↑` (_Optional_)             | Moves focus to and toggles the selected state of the previous option.                                           |\n| `Shift` + `space` (_Optional_)         | Selects contiguous items from the most recently selected item to the focused item.                              |\n| `ctrl` + `Shift` + `Home` (_Optional_) | Selects the focused option and all options up to the first option. Optionally, moves focus to the first option. |\n| `ctrl` + `Shift` + `End` (_Optional_)  | Selects the focused option and all options down to the last option. Optionally, moves focus to the last option. |\n| `ctrl` + `A` (_Optional_)              | Selects all options in the list. Optionally, if all options are selected, it may also unselect all options.     |\n\n[scroll to top](#roles)\n\n### iv. menu\n\nThe `menu` role offers a list of choices to the user, often a list of common actions or functions that the user can invoke. Appropriate when a list of items is presented in a manner similar to a menu on a desktop application.\n\nFor keyboard accessibility, authors **should** manage focus of descendants for all instances of this role. Elements within the role menu have an implicit `aria-orientation` value of `vertical`.\n\nLearn more about the menu role on [W3C](https://www.w3.org/TR/wai-aria-1.1/#menu) and [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menu_role).\n\n#### Menu Example\n\n<img src="https://user-images.githubusercontent.com/5023024/166055572-44d789c3-b0eb-40d0-9986-e82f6d1fd701.svg" alt="" />\n\n#### Menu Code\n\n```html\n\x3c!-- Menu role example --\x3e\n<div class="dropdown">\n  <button type="button" id="dropdown-menu">\n    Actions\n    <span class="caret"></span>\n  </button>\n  \x3c!-- Selection mode: Single --\x3e\n  <ul role="menu">\n    Create\n    <li><a role="menuitemradio" class="dropdown-item">Event</a></li>\n    <li><a role="menuitemradio" class="dropdown-item" aria-checked="true">Survey</a></li>\n    <li><a role="menuitemradio" class="dropdown-item">Poll</a></li>\n  </ul>\n  <ul class="dropdown-separator" role="separator"></ul>\n  \x3c!-- Selection mode: Multi --\x3e\n  <ul role="menu">\n    Save\n    <li><a role="menuitemcheckbox" class="dropdown-item">Save</a></li>\n    <li><a role="menuitemcheckbox" class="dropdown-item">Duplicate</a></li>\n  </ul>\n</div>\n```\n\n#### Keyboard functionality for Menu\n\n| Key                   | Function                                                                                                                                                   |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `space` <br/> `enter` | Activates the menu item, which is equivalent to activating the link element from which the menu item is made.                                              |\n| `Esc`                 | - Closes the menu. <br/> - Sets focus to the menu.                                                                                                         |\n| `↑`                   | - Moves focus to the previous menu item. <br/> - Focus is on the first menu item, moves focus to the last menu item.                                       |\n| `↓`                   | - Moves focus to the next menu item. <br/> - If focus is on the last menu item, moves focus to the first menu item.                                        |\n| `Home`                | Moves focus to the first menu item.                                                                                                                        |\n| `End`                 | Moves focus to the last menu item.                                                                                                                         |\n| `A-Z` <br/> `a-z`     | - Moves focus to the next menu item with a label that starts with the typed character if such an menu item exists. <br/> - Otherwise, focus does not move. |\n\n[scroll to top](#roles)\n\n### v. menubar\n\nThe `menubar` role is a presentation of a menu that usually remains visible and usually is presented horizontally. Superclass role of `menu`, and related to `toolbar`.\n\nLearn more about the menubar role on [W3C](https://www.w3.org/TR/wai-aria-1.1/#menubar) and [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menubar_role).\n\n#### Menubar Example\n\n<img src="https://user-images.githubusercontent.com/5023024/166061531-f27ffc8b-14fd-45e2-bc14-04609987e420.svg" alt="" />\n\n#### Menubar Code\n\n```html\n\x3c!-- Menubar role example --\x3e\n<nav aria-label="Menubar example">\n  <ul class="menubar-navigation" role="menubar" aria-label="Menubar example">\n    <li role="none">\n      <a role="menuitem" aria-haspopup="true" aria-expanded="true">\n        Create\n        <span class="caret"></span>\n      </a>\n      \x3c!-- Selection mode: Single --\x3e\n      <ul role="menu" aria-label="Create">\n        <li role="none">\n          <a role="menuitemradio" aria-checked="false">Event</a>\n        </li>\n        <li role="none">\n          <a role="menuitemradio" aria-checked="true">Survey</a>\n        </li>\n        <li role="none">\n          <a role="menuitemradio" aria-checked="false">Poll</a>\n        </li>\n      </ul>\n    </li>\n    <li role="none">\n      <a role="menuitem" aria-haspopup="true" aria-expanded="false">\n        Save\n        <span class="caret"></span>\n      </a>\n      <ul role="menu" aria-label="Save">\n        <li role="none">\n          <a role="menuitem">Save As...</a>\n        </li>\n      </ul>\n    </li>\n  </ul>\n</nav>\n```\n\n#### Keyboard functionality for Menubar\n\n| Key                   | Function                                                                                                                                                                                                                      |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `space` <br/> `enter` | - If the item is a parent menu item, opens submenu and moves focus to first item in the submenu. <br/> - Otherwise, activates the menu item, which loads new content and places focus on the heading that titles the content. |\n| `→`                   | - Moves focus to the next item in the menubar. <br/> - If focus is on the last item, moves focus to the first item.                                                                                                           |\n| `←`                   | - Moves focus to the previous item in the menubar. <br/> - If focus is on the first item, moves focus to the last item.                                                                                                       |\n| `↓`                   | Opens submenu and moves focus to first item in the submenu.                                                                                                                                                                   |\n| `↑`                   | Opens submenu and moves focus to last item in the submenu.                                                                                                                                                                    |\n| `Home`                | Moves focus to first item in the menubar.                                                                                                                                                                                     |\n| `End`                 | Moves focus to last item in the menubar.                                                                                                                                                                                      |\n| `A-Z` <br/> `a-z`     | - Moves focus to next item in the menubar having a name that starts with the typed character. <br/> - If none of the items have a name starting with the typed character, focus does not move.                                |\n\n[scroll to top](#roles)\n\n### vi. radiogroup\n\nThe `radiogroup` role is a group of radio buttons.\n\n**Note**: Some situations can be written using semantic HTML, which requires no CSS or JavaScript. Below are two examples, one with the `radiogroup` role, and the other with semantic HTML.\n\nLearn more about the radiogroup role on [W3C](https://www.w3.org/TR/wai-aria-1.1/#radiogroup) and [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/radiogroup_role).\n\n#### Radiogroup Example\n\n<img src="https://user-images.githubusercontent.com/5023024/166739360-091a7211-e230-46b5-9bdf-01f44d108599.svg" alt="" />\n\n#### a. Radiogroup Code\n\n```html\n\x3c!-- Radiogroup role example --\x3e\n<span id="segmented-control-label">What is the study of physical features on Earth?</span>\n<ul\n  id="segmented-control"\n  class="radiogroup"\n  role="radiogroup"\n  aria-labelledby="segmented-control-label"\n  aria-activedescendant="radio-geography"\n  tabindex="0"\n>\n  <li id="radio-maps" role="radio" aria-checked="false">Maps</li>\n  <li id="radio-layer" role="radio" aria-checked="false">Layer</li>\n  <li id="radio-data" role="radio" aria-checked="false">Data</li>\n  <li id="radio-geography" role="radio" aria-checked="true">Geography</li>\n</ul>\n```\n\n#### b. Radiogroup Code in Semantic HTML\n\n```html\n<fieldset>\n  <legend>What is the study of physical features on Earth?</legend>\n  <p>\n    <input name="radioOption" type="radio" id="Maps" />\n    <label for="Maps">Maps</label>\n  </p>\n  <p>\n    <input name="radioOption" type="radio" id="Layer" />\n    <label for="Layer">Layer</label>\n  </p>\n  <p>\n    <input name="radioOption" type="radio" id="Data" />\n    <label for="Data">Data</label>\n  </p>\n  <p>\n    <input name="radioOption" type="radio" id="Geography" checked />\n    <label for="Geography">Geography</label>\n  </p>\n</fieldset>\n```\n\n#### Keyboard functionality for Radiogroup\n\n| Key             | Function                            |\n| --------------- | ----------------------------------- |\n| `tab`           | Moves keyboard focus to radiogroup. |\n| `←` `→` `↑` `↓` | Moves up and down radio options.    |\n\n[scroll to top](#roles)\n\n### vii. tablist\n\nThe `tablist` role identifies the element that serves as the container for a set of `tabs`. The tab content are referred to as `tabpanel` elements.\n\nEach `tab` in a `tablist` serves as a label for one `tabpanel` and can be activated to display that panel. The `tablist` is the containing element for the set of tab elements contained.\n\nLearn more about the tablist role on [W3C](https://www.w3.org/TR/wai-aria-1.1/#tablist) and [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role).\n\n#### Tablist Example\n\n<img src="https://user-images.githubusercontent.com/5023024/166065017-5d961407-f1cc-48f0-90ba-42b03941c586.svg" alt="" />\n\n#### Tablist Code\n\n```html\n\x3c!-- Tablist role example --\x3e\n\x3c!-- tablist > tab roles --\x3e\n<ul role="tablist">\n  <li role="tab" aria-selected="false" aria-setsize="3" aria-posinset="2" tabindex="0">Maps</li>\n  <li class="active" role="tab" aria-selected="true" aria-setsize="3" aria-posinset="1" tabindex="0">Layers</li>\n  <li role="tab" aria-selected="false" aria-setsize="3" aria-posinset="3" tabindex="0">Data</li>\n</ul>\n\x3c!-- Tabpanel roles --\x3e\n<div class="panels">\n  <article role="tabpanel" aria-hidden="true">..Maps panel content..</article>\n  <article class="active-panel" role="tabpanel" aria-hidden="false">..Layers panel content..</article>\n  <article role="tabpanel" aria-hidden="true">..Data panel content..</article>\n</div>\n```\n\n#### Keyboard functionality for Tablist\n\nIf the `tablist` is horizontal, it does not listen for `↓` or `↑` so those keys can provide their normal browser scrolling functions even when focus is inside the `tablist`.\n\n| Key                   | Function|\n| --------------------- ||\n| `tab`                 | Moves keyboard focus in the tablist|\n| `←`                   | moves focus to the previous tab. If focus is on the first tab, moves focus to the last tab. Optionally, activates the newly focused tab|\n| `→`                   | Moves focus to the next tab. If focus is on the last tab element, moves focus to the first tab. Optionally, activates the newly focused tab.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| `↑`                   | Moves focus to the previous tab. If focus is on the first tab, moves focus to the last tab. Optionally, activates the newly focused tab|\n| `↓`                   | Moves focus to the next tab. If focus is on the last tab element, moves focus to the first tab. Optionally, activates the newly focused tab|\n| `space` <br/> `Enter` | Activates the tab if it was not activated automatically on focus|\n| `Home` (_optional_)   | Moves focus to the first tab. Optionally, activates the newly focused tab|\n| `End` (_optional_)    | Moves focus to the last tab. Optionally, activates the newly focused tab|\n| `Shift` + `F10`       | If the tab has an associated popup menu, opens the menu|\n| `Delete` (_optional_) | If deletion is allowed, deletes (closes) the current tab element and its associated tab panel, sets focus on the tab following the tab that was closed, and optionally activates the newly focused tab. If there is not a tab that followed the tab that was deleted, e.g., the deleted tab was the right-most tab in a left-to-right horizontal tab list, sets focus on and optionally activates the tab that preceded the deleted tab. If the application allows all tabs to be deleted, and the user deletes the last remaining tab in the tab list, the application moves focus to another element that provides a logical work flow. As an alternative to Delete, or in addition to supporting Delete, the delete function is available in a context menu. |\n\n[scroll to top](#roles)\n\n### viii. tree\n\nA `tree` is a widget that allows the user to select one or more items from a hierarchically organized collection. Any item in the hierarchy may have child tree items, `treeitem`. Tree items can be expanded or collapsed, showing and hiding their children.\n\nLearn more about the tree role on [W3C](https://www.w3.org/TR/wai-aria-1.1/#tree) and [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tree_role).\n\n#### Tree Example\n\n<img src="https://user-images.githubusercontent.com/5023024/166065082-975ba9a2-2951-4bf5-854d-240dbd9d0fe6.svg" alt="" />\n\n#### Tree Code\n\n```html\n\x3c!-- Tree role example --\x3e\n<nav aria-label="Tree role example">\n  <ul class="treeview-navigation" role="tree" aria-label="Tree role example">\n    \x3c!-- Maps tree item --\x3e\n    <li role="none">\n      <a role="treeitem">\n        <span class="label">Maps</span>\n      </a>\n    </li>\n    \x3c!-- Layers tree item (parent) --\x3e\n    <li role="none">\n      <a role="treeitem" aria-expanded="true" aria-owns="id-layers-subtree">\n        <span class="label">\n          <span class="caret"></span>\n          Layers\n        </span>\n      </a>\n      \x3c!-- Subtree items (children) --\x3e\n      <ul id="id-layers-subtree" role="group" aria-label="layers">\n        <li role="none">\n          <a role="treeitem">\n            <span class="label">Feature layers</span>\n          </a>\n        </li>\n        \x3c!-- Tile layers subtree item (child), selected via aria-current --\x3e\n        <li role="none">\n          <a role="treeitem" aria-current>\n            <span class="label">Tile layers</span>\n          </a>\n        </li>\n\n        <li role="none">\n          <a role="treeitem">\n            <span class="label">Map image layers</span>\n          </a>\n        </li>\n\n        <li role="none">\n          <a role="treeitem">\n            <span class="label">Scene layers</span>\n          </a>\n        </li>\n      </ul>\n      \x3c!-- end Layers subtree --\x3e\n    </li>\n    \x3c!-- end Layers tree --\x3e\n\n    <li role="none">\n      <a role="treeitem">\n        <span class="label">Scenes</span>\n      </a>\n    </li>\n\n    <li role="none">\n      <a role="treeitem">\n        <span class="label">Apps</span>\n      </a>\n    </li>\n\n    <li role="none">\n      <a role="treeitem">\n        <span class="label">Tools</span>\n      </a>\n    </li>\n  </ul>\n</nav>\n```\n\n#### Keyboard functionality for Tree\n\nFor a vertically oriented `tree`, which is the default orientation:\n\n| Key                | Function                                                                                                                                                                                                                                       |\n| ------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `→`                | - When focus is on a closed node, opens the node; focus does not move. <br/> - When focus is on a open node, moves focus to the first child node.<br/> - When focus is on an end node (a tree item with no children), does nothing.            |\n| `←`                | - When focus is on an open node, closes the node. <br/> - When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.<br/> - When focus is on a closed `tree`, does nothing.               |\n| `↓`                | Moves focus to the next node that is focusable without opening or closing a node.                                                                                                                                                              |\n| `↑`                | Moves focus to the previous node that is focusable without opening or closing a node.                                                                                                                                                          |\n| `Home`             | Moves focus to the first node in the tree without opening or closing a node.                                                                                                                                                                   |\n| `End`              | Moves focus to the first node in the tree without opening or closing a node.                                                                                                                                                                   |\n| `Enter`            | Performs the default action of the currently focused node. For parent nodes, it opens or closes the node. In single-select trees, if the node has no children, selects the current node if not already selected (which is the default action). |\n| Type a character\\* | - Focus moves to the next node with a name that starts with the typed character. <br/> - If multiple characters are typed in rapid succession, focus moves to the next node with a name that starts with the string of characters typed.       |\n| `*` (_optional_)   | Expands all siblings that are at the same level as the current node.                                                                                                                                                                           |\n\n`*` Type-ahead is recommended for all trees, especially for trees with more than 7 root nodes.\n\n[scroll to top](#roles)\n\n### ix. treegrid\n\nThe `treegrid` role identifies an element as being grid whose rows can be expanded and collapsed in the same manner as for a tree.\n\nIt is important for all cells to be able to receive or contain keyboard focus because screen readers are generally in application reading mode, rather than their document reading mode, when users are interacting with the grid. While in application mode, a screen reader user hears only focusable elements and content that labels focusable elements. If content can\'t receive focus, screen reader users may unknowingly overlook elements contained in the `treegrid`.\n\nLearn more about the treegrid role on [W3C](https://www.w3.org/TR/wai-aria-1.1/#treegrid) and [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/treegrid_role).\n\n#### Treegrid Example\n\n<img src="https://user-images.githubusercontent.com/5023024/166065105-033dce9e-52e0-4a69-b879-849edd1ec711.svg" alt="" />\n\n##### Treegrid Code\n\n```html\n\x3c!-- Treegrid role example --\x3e\n<table id="treegrid" role="treegrid" aria-label="Project hours">\n  <colgroup>\n    <col id="treegrid-column1" />\n    <col id="treegrid-column2" />\n  </colgroup>\n  <thead>\n    <tr>\n      <th scope="col">Project Name</th>\n      <th scope="col">Hours Done</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr role="row" aria-level="1" aria-posinset="1" aria-setsize="1" aria-expanded="true">\n      <td role="gridcell">All Projects</td>\n      <td role="gridcell">360</td>\n    </tr>\n    <tr role="row" aria-level="2" aria-posinset="1" aria-setsize="3" aria-expanded="false">\n      <td role="gridcell">Year 2010</td>\n      <td role="gridcell">56</td>\n    </tr>\n    <tr role="row" aria-level="2" aria-posinset="1" aria-setsize="3" aria-expanded="true">\n      <td role="gridcell">Year 2011</td>\n      <td role="gridcell">188</td>\n    </tr>\n    <tr role="row" aria-level="3" aria-posinset="1" aria-setsize="3" aria-expanded="false">\n      <td role="gridcell">Q1</td>\n      <td role="gridcell">30</td>\n    </tr>\n    <tr role="row" aria-level="3" aria-posinset="1" aria-setsize="3" aria-expanded="true">\n      <td role="gridcell">Q2</td>\n      <td role="gridcell">95</td>\n    </tr>\n    <tr role="row" aria-level="4" aria-posinset="1" aria-setsize="3">\n      <td role="gridcell">Website Re-brand</td>\n      <td role="gridcell">95</td>\n    </tr>\n    <tr role="row" aria-level="3" aria-posinset="1" aria-setsize="3" aria-expanded="false">\n      <td role="gridcell">Q3</td>\n      <td role="gridcell">42</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### Keyboard functionality for Treegrid\n\nRecommended selection model, holding modifier keys, such as `Shift` or `ctrl`, is not necessary:\n\n| Key                          | Function|\n| ---------------------------- ||\n| `Enter`                      | If cell-only focus is enabled and focus is on the first cell with the `aria-expanded` property, opens or closes the child rows. Otherwise, performs the default action for the cell.                                                                                                                                                                                                                                                                                                                                                                    |\n| `tab`                        | If the row containing focus contains focusable elements such as an `<input>`, `<button>` or `<a>`, ,moves the focus to the next input in the row. If focus is on the last focusable element in the row, moves focus out of the treegrid widget to the next focusable element.                                                                                                                                                                                                                                                                           |\n| `→`                          | If focus is on a collapsed row, expand the row. If focus is on an expanded row or is on a row that does not have child rows, moves focus to the first cell in the row. If focus is on the right-most cell in a row, focus does not move. If focus is on any other cell, moves focus one cell to the right.                                                                                                                                                                                                                                              |\n| `←`                          | If focus is on an expanded row, collapses the row. If focus is on a collapsed row or on a row that does not have child rows, focus does not move. If focus is on the first cell in a row and row focus is supported, moves focus to the row. If focus is on the first cell in a row and row focus is not supported, focus does not move. If focus is on any other cell, moves focus one cell to the left.                                                                                                                                               |\n| `↓`                          | If focus is on a row, moves focus one row down. If focus is on the last row, focus does not move. If focus is on a cell, moves focus one cell down. If focus is on the bottom cell in the column, focus does not move.                                                                                                                                                                                                                                                                                                                                  |\n| `↑`                          | If focus is on a row, moves focus one row up. If focus is on the first row, focus does not move. If focus is on a cell, moves focus one cell up. If focus is on the top cell in the column, focus does not move.                                                                                                                                                                                                                                                                                                                                        |\n| `Page Down`                  | If focus is on a row or cell, moves focus down a predetermined number of rows or cells. Usually, it moves down the equivalent of the height of the treegrid, scrolling so the bottom row in the currently visible set of rows becomes one of the first visible rows. If focus is in the last row , focus does not move.                                                                                                                                                                                                                                 |\n| `Page Up`                    | If focus is on a row or cell, moves focus up an predetermined number of rows. Usually, it moves up the equivalent of the height of the treegrid, scrolling so the top row in the currently visible set of rows becomes one of the last visible rows. If focus is in the first row, focus does not move.                                                                                                                                                                                                                                                 |\n| `Home` /<br> `Ctrl` + `Home` | If focus is on a row, moves focus to the first row. If focus is in the first row, focus does not move. If focus is on a cell, moves focus to the first cell in the row. If focus is in the first cell of the row, focus does not move.                                                                                                                                                                                                                                                                                                                  |\n| `End` /<br> `Ctrl` + `End`   | If focus is on a row, moves focus to the last row. If focus is in the last row, focus does not move. If focus is on a cell, moves focus to the last cell in the row. If focus is in the last cell of the row, focus does not move. If not all rows are present in the DOM, this can be used to focus on the last row present in the DOM, or on the last row available if the entire database were present in the DOM. <br/><br/> If a treegrid supports selection of cells, rows, or columns, the following keys are commonly used for these functions. |\n| `Ctrl` + `space`             | If focus is on a row, selects all cells. If focus is on a cell, selects the column that contains the focus.                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| `Shift` + `space`            | If focus is on a row, select the row. If focus is on a cell, select the row that contains the focus. If the treegrid includes a column with checkboxes for selecting rows, this key can also be used as a shortcut for checking the box when focus is not on the checkbox.                                                                                                                                                                                                                                                                              |\n| `Ctrl` + `A`                 | Selects all cells|\n| `Shift` + `→`                | If focus is on a cell, extends selection one cell to the right.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| `Shift` + `←`                | If focus is on a cell, extends selection one cell to the left.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| `Shift` + `↓`                | If focus is on a row, extends selection to all the cells in the next row. If focus is on a cell, extends selection one cell down.                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| `Shift` + `↑`                | If focus is on a row, extends selection to all the cells in the previous row. If focus is on a cell, extends selection one cell up.                                                                                                                                                                                                                                                                                                                                                                                                                     |\n\nIf navigation functions can dynamically add more rows or columns to the DOM, key events that move focus to the beginning or end of the grid, such as `ctrl` + `End`, may move focus to the last row in the DOM rather than the last available row in the back-end data.\n\nWhile navigation keys, such as arrow keys, are moving focus from cell to cell, they are not available to do something like operate a `combobox` or move an editing caret inside of a cell.\n\n[scroll to top](#roles)\n',mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Accessibility/Roles",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/15-internationalization.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(dist_esm.c,{title:"Overview/Internationalization",mdxType:"Meta"}),Object(esm.b)(dist_esm.b,{markdown:"# Internationalization (i18n)\n\nTypically, components allow users to supply text values via slots and attributes, but there are cases where components need to take additional steps to support internationalization.\n\n## Formatting\n\nFormatting of values, such as numbers and dates, for display should use the [`Intl` APIs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl).\n\n### Styling/Layout\n\nTo add right-to-left (RTL) support to your components you should use [CSS Logical properties](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties) within CSS. If you need to know direction in JavaScript, use the internal `getElementDir` helper in the dom utility.\n\nSome CSS properties do not have logical equivalents. Such as...\n\n- box-shadow\n- text-shadow\n- transform\n- background-position\n\nFor these properties, you should use the internal `getElementDir` helper to apply the `CSS_UTILITY.rtl` class to your component.\n\n## Translation (t9n)\n\nPreviously, components provided Intl properties (`intl<Prop>`) to allow users to pass string translations. While this is still supported for backwards compatibility, our components also have translations built-in.\n\nThe following section covers how to add built-in translation support to components.\n\n### `T9nComponent` pattern\n\nThis pattern enables components to support built-in translations. In order to support this, a component must:\n\n1. Add the following translation bundles as component assets under a `t9n` folder (please refer to <https://github.com/Esri/calcite-components/blob/master/conventions/README.md#assets> for additional info on assets)\n   1. `messages.json` – main bundle\n   2. `messages_en.json` – locale-specific bundle (kept in sync with main one via scripts)\n2. Implement the `T9nComponent` interface\n   1. The `onMessagesChange` method must be empty as it is wired up by the support utils.\n   2. The `onMessagesChange` method must also be configured with watchers for the messages properties as well as `intl` props.\n3. Use the `setUpMessages` util in the component's `componentWillLoad` lifecycle methods. This must be awaited on to have an initial set of strings available before rendering.\n4. Use the `connectMessages`/`disconnectMessages` utils in the component's `connectedCallback`/`disconnectedCallback` lifecycle methods. This will set up and tear down supporting methods on the component.\n5. Add an appropriate E2E test by using the `t9n` common test helper.\n6. Components such as `input-date-picker` are neither localized nor `t9n` need to forward `intl` props into supporting components.\n   1. Add the `messageOverrides` property.\n   2. Mark `intl` properties as optional, and add a deprecation notice pointing to `messageOverrides` as the new solution.\n   3. Parse the `messageOverrides` along with `intl` properties into supporting components in render method.\n7. Internal components which support public components requires `t9n` properties only to forward the messages.\n\n#### Notes\n\n- This pattern depends on `LocalizedComponent` being implemented.\n- `connectLocalized` (from `LocalizedComponent`) must be called before `connectMessages`.\n- Although `intl` properties are supported, message overrides have the higher precedence.\n- If a message string has a matching `intl` prop, its translation bundle message keys must match the same prop name without the `intl` prefix (e.g., `intlClose` -> `close`)\n- You can also look at the interface and util documentation for additional info.\n- The internal `messages` property should be used as the source of truth for translations in rendering.\n- List of supported locales can be found on our [Localization support page](https://developers.arcgis.com/calcite-design-system/localization/#locale-support).\n\n## Translated strings\n\n**Note ⚠️**: this pattern is deprecated and should no longer be followed for future components!\n\nIn the future it will likely become necessary to provide string translations for components. An example would be the `aria-label` for the `<calcite-modal>` close button. Initial research looks promising and we could likely implement one of these approaches and set a `lang` for each component.\n\n- <https://medium.com/stencil-tricks/implementing-internationalisation-i18n-with-stencil-5e6559554117> and <https://codesandbox.io/s/43pmx55vo9>\n- <https://github.com/ionic-team/ionic-stencil-conference-app/issues/69>\n\nUntil we implement a `lang` facility and set up translations for all components, we have been allowing a small number of strings to be passed in as properties. Properties that represent translated strings should have the syntax: `text-label-x`, where `x` is the name for the string. For example, when providing a string from \"Close\", use the property name `text-label-close`. In the component, these properties should default to their English equivalent (this is useful for non-localized apps):\n\n```tsx\n@Prop() textLabelClose: string = 'Close';\n```\n",mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Overview/Internationalization",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta},"./src/components/accordion/accordion.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"withActions",(function(){return withActions})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"transparentAppearance_TestOnly",(function(){return transparentAppearance_TestOnly})),__webpack_require__.d(__webpack_exports__,"withIconStartAndEnd_TestOnly",(function(){return withIconStartAndEnd_TestOnly})),__webpack_require__.d(__webpack_exports__,"longHeading_MediumIconForLargeAccordionItem_TestOnly",(function(){return longHeading_MediumIconForLargeAccordionItem_TestOnly}));var utils=__webpack_require__("./.storybook/utils.tsx"),placeholderImage=__webpack_require__("./.storybook/placeholderImage.ts"),resources=__webpack_require__("./.storybook/resources.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),formatting=__webpack_require__("./support/formatting.ts");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default=Object.assign({title:"Components/Accordion",parameters:{notes:{accordion:'# calcite-accordion\n\n`calcite-accordion` can be used to present content in collapsible sections. Configuration options exist for visual style (icon-position, scale, appearance), and selection functionality.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-accordion>\n  <calcite-accordion-item heading="Accordion Item">Accordion Section Content </calcite-accordion-item>\n  <calcite-accordion-item heading="Accordion Item 2" expanded>Accordion Section Content </calcite-accordion-item>\n  <calcite-accordion-item heading="Accordion Item 3">Accordion Section Content </calcite-accordion-item>\n</calcite-accordion>\n```\n\n\n\n## Properties\n\n| Property        | Attribute        | Description                                                                                                                                                              | Type                                         | Default      |\n| --------------- | ---------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------------------------------------------- | ------------ |\n| `appearance`    | `appearance`     | Specifies the appearance of the component.                                                                                                                               | `"solid" \\| "transparent"`                   | `"solid"`    |\n| `iconPosition`  | `icon-position`  | Specifies the placement of the icon in the header.                                                                                                                       | `"end" \\| "start"`                           | `"end"`      |\n| `iconType`      | `icon-type`      | Specifies the type of the icon in the header.                                                                                                                            | `"caret" \\| "chevron" \\| "plus-minus"`       | `"chevron"`  |\n| `scale`         | `scale`          | Specifies the size of the component.                                                                                                                                     | `"l" \\| "m" \\| "s"`                          | `"m"`        |\n| `selectionMode` | `selection-mode` | Specifies the selection mode - `"multiple"` (allow any number of open items), `"single"` (allow one open item), or `"single-persist"` (allow and require one open item). | `"multiple" \\| "single" \\| "single-persist"` | `"multiple"` |\n\n\n## Slots\n\n| Slot | Description                                                                                                               |\n| ---- | ------------------------------------------------------------------------------------------------------------------------- |\n|      | A slot for adding `calcite-accordion-item`s. `calcite-accordion` cannot be nested, however `calcite-accordion-item`s can. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',accordionItem:'# calcite-accordion-item\n\nindividual `calcite-accordion` item\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                                 | Type                         | Default     |\n| ------------- | --------------- | ----------------------------------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `description` | `description`   | Specifies a description for the component.                                                                  | `string`                     | `undefined` |\n| `expanded`    | `expanded`      | When `true`, the component is expanded.                                                                     | `boolean`                    | `false`     |\n| `heading`     | `heading`       | Specifies heading text for the component.                                                                   | `string`                     | `undefined` |\n| `iconEnd`     | `icon-end`      | Specifies an icon to display at the end of the component.                                                   | `string`                     | `undefined` |\n| `iconFlipRtl` | `icon-flip-rtl` | Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`"rtl"`). | `"both" \\| "end" \\| "start"` | `undefined` |\n| `iconStart`   | `icon-start`    | Specifies an icon to display at the start of the component.                                                 | `string`                     | `undefined` |\n\n\n## Slots\n\n| Slot              | Description                                                                                 |\n| ----------------- | ------------------------------------------------------------------------------------------- |\n|                   | A slot for adding custom content, including nested `calcite-accordion-item`s.               |\n| `"actions-end"`   | A slot for adding `calcite-action`s or content to the end side of the component\'s header.   |\n| `"actions-start"` | A slot for adding `calcite-action`s or content to the start side of the component\'s header. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-accordion-item --\x3e calcite-icon\n  style calcite-accordion-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'},backgrounds:{values:[{name:"transparent",value:"#0000ffff"}]}}},Object(helpers.c)());var createAccordionAttributes=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,group="accordion",scale=resources.a.scale;return Object(utils.b)([{name:"scale",commit:function(){return this.value=Object(dist.select)("scale",scale.values,scale.defaultValue,group),delete this.build,this}},{name:"appearance",commit:function(){return this.value=Object(dist.select)("appearance",["solid","transparent"],"solid",group),delete this.build,this}},{name:"selection-mode",commit:function(){return this.value=Object(dist.select)("selection-mode",["single","single-persist","multiple"],"multiple",group),delete this.build,this}}],exceptions)},createAccordionItemAttributes=function(props){var group=(null==props?void 0:props.group)||"";return[{name:"heading",value:Object(dist.text)("heading","Heading",group)},{name:"description",value:Object(dist.text)("description","Description for item",group)},{name:"icon-start",value:Object(dist.select)("icon-start",[""].concat(_toConsumableArray(helpers.b)),(null==props?void 0:props.iconStart)||"",group)},{name:"icon-end",value:Object(dist.select)("icon-end",[""].concat(_toConsumableArray(helpers.b)),(null==props?void 0:props.iconEnd)||"",group)}]},accordionItemContent=`Custom content here<br/><img src="${Object(placeholderImage.a)({width:200,height:133})}"><br/>More custom content here`,simple=function(){return Object(utils.a)("calcite-accordion",createAccordionAttributes(),formatting.a`
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-1"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-2"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-3"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-4"}).concat({name:"expanded",value:!0}),accordionItemContent)}
    `)},withActions=function(){return formatting.a`
  <calcite-accordion scale="s">
    <calcite-accordion-item scale="m" heading="Accordion Item 1">
      <calcite-action scale="s" icon="brush-tip" label="Paint" slot="actions-start"></calcite-action
      >${accordionItemContent}
      <calcite-action scale="s" icon="banana" label="Banana" slot="actions-end"></calcite-action>
      <calcite-action scale="s" icon="sound" label="Volume" slot="actions-end"></calcite-action>
    </calcite-accordion-item>
    <calcite-accordion-item scale="m" heading="Accordion Item 2" expanded>
      <calcite-action scale="s" icon="brush-tip" label="Paint" slot="actions-start"></calcite-action
      >${accordionItemContent}
      <calcite-action scale="s" icon="banana" label="Banana" slot="actions-start"></calcite-action>
      <calcite-action scale="s" icon="sound" label="Volume" slot="actions-end"></calcite-action>
    </calcite-accordion-item>
    <calcite-accordion-item scale="m" heading="Accordion Item 3">
      <calcite-action scale="s" icon="brush-tip" label="Paint" slot="actions-start"></calcite-action
      <calcite-action scale="s" icon="banana" label="Banana" slot="actions-end"></calcite-action>
      >${accordionItemContent}
      <calcite-action scale="s" icon="sound" label="Volume" slot="actions-end"></calcite-action>
    </calcite-accordion-item>
  </calcite-accordion>
`},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-accordion",createAccordionAttributes({exceptions:["class","dir"]}).concat({name:"class",value:"calcite-mode-dark"},{name:"dir",value:"rtl"}),formatting.a`
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({iconStart:"banana",group:"accordion-item-1"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({iconStart:"banana",group:"accordion-item-2"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({iconStart:"banana",group:"accordion-item-3"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({iconStart:"banana",group:"accordion-item-4"}).concat({name:"expanded",value:!0}),accordionItemContent)}
    `)};darkModeRTL_TestOnly.parameters={modes:utils.e};var transparentAppearance_TestOnly=function(){return Object(utils.a)("calcite-accordion",createAccordionAttributes({exceptions:["appearance"]}).concat({name:"appearance",value:"transparent"}),formatting.a`
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-1"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-2"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-3"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-4"}).concat({name:"expanded",value:!0}),accordionItemContent)}
    `)},withIconStartAndEnd_TestOnly=function(){return Object(utils.a)("calcite-accordion",createAccordionAttributes({exceptions:["appearance"]}).concat({name:"appearance",value:"transparent"}),formatting.a`
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-1",iconStart:"banana"}).concat({name:"expanded",value:!0}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-2",iconEnd:"cars"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-3",iconEnd:"plane",iconStart:"plane"}),accordionItemContent)}
      ${Object(utils.a)("calcite-accordion-item",createAccordionItemAttributes({group:"accordion-item-4",iconStart:"biking",iconEnd:"biking"}).concat({name:"expanded",value:!0}),accordionItemContent)}
    `)},accordionItemsIconHeaderUseCases=[{icon:"",heading:"Simple item with heading",description:""},{icon:"",heading:"Simple item with heading",description:"Simple item with description"},{icon:"embark",heading:"Embark_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_",description:"Extra long heading with underscores and icons m /scale l"},{icon:"car",heading:"Extra long description with underscores and icons m /scale l",description:"Car_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_Watercraft_title_is_super_long_what_do_we_do_now_"},{icon:"plane",heading:"Extra long description and icons m /scale l",description:"Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets. Planes, helicopters, and jets."}].map((function(useCase){return formatting.a`<calcite-accordion-item
        icon-start="${useCase.icon}"
        icon-end="${useCase.icon}"
        scale="l"
        heading="${useCase.heading}"
        description="${useCase.description}"
      ></calcite-accordion-item>`})).join(""),longHeading_MediumIconForLargeAccordionItem_TestOnly=function(){return formatting.a`
  <calcite-accordion scale="l" style="width: 600px"> ${accordionItemsIconHeaderUseCases} </calcite-accordion>
`};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-accordion",\n    createAccordionAttributes(),\n    html`\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-1" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-2" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-3" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-4" }).concat({\n          name: "expanded",\n          value: true\n        }),\n        accordionItemContent\n      )}\n    `\n  )'}},simple.parameters),withActions.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-accordion scale="s">\n    <calcite-accordion-item scale="m" heading="Accordion Item 1">\n      <calcite-action scale="s" icon="brush-tip" label="Paint" slot="actions-start"></calcite-action\n      >${accordionItemContent}\n      <calcite-action scale="s" icon="banana" label="Banana" slot="actions-end"></calcite-action>\n      <calcite-action scale="s" icon="sound" label="Volume" slot="actions-end"></calcite-action>\n    </calcite-accordion-item>\n    <calcite-accordion-item scale="m" heading="Accordion Item 2" expanded>\n      <calcite-action scale="s" icon="brush-tip" label="Paint" slot="actions-start"></calcite-action\n      >${accordionItemContent}\n      <calcite-action scale="s" icon="banana" label="Banana" slot="actions-start"></calcite-action>\n      <calcite-action scale="s" icon="sound" label="Volume" slot="actions-end"></calcite-action>\n    </calcite-accordion-item>\n    <calcite-accordion-item scale="m" heading="Accordion Item 3">\n      <calcite-action scale="s" icon="brush-tip" label="Paint" slot="actions-start"></calcite-action\n      <calcite-action scale="s" icon="banana" label="Banana" slot="actions-end"></calcite-action>\n      >${accordionItemContent}\n      <calcite-action scale="s" icon="sound" label="Volume" slot="actions-end"></calcite-action>\n    </calcite-accordion-item>\n  </calcite-accordion>\n`'}},withActions.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-accordion",\n    createAccordionAttributes({ exceptions: ["class", "dir"] }).concat(\n      {\n        name: "class",\n        value: "calcite-mode-dark"\n      },\n      {\n        name: "dir",\n        value: "rtl"\n      }\n    ),\n    html`\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ iconStart: "banana", group: "accordion-item-1" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ iconStart: "banana", group: "accordion-item-2" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ iconStart: "banana", group: "accordion-item-3" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ iconStart: "banana", group: "accordion-item-4" }).concat({\n          name: "expanded",\n          value: true\n        }),\n        accordionItemContent\n      )}\n    `\n  )'}},darkModeRTL_TestOnly.parameters),transparentAppearance_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-accordion",\n    createAccordionAttributes({ exceptions: ["appearance"] }).concat({\n      name: "appearance",\n      value: "transparent"\n    }),\n    html`\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-1" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-2" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-3" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-4" }).concat({\n          name: "expanded",\n          value: true\n        }),\n        accordionItemContent\n      )}\n    `\n  )'}},transparentAppearance_TestOnly.parameters),withIconStartAndEnd_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-accordion",\n    createAccordionAttributes({ exceptions: ["appearance"] }).concat({\n      name: "appearance",\n      value: "transparent"\n    }),\n    html`\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-1", iconStart: "banana" }).concat({\n          name: "expanded",\n          value: true\n        }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-2", iconEnd: "cars" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({ group: "accordion-item-3", iconEnd: "plane", iconStart: "plane" }),\n        accordionItemContent\n      )}\n      ${create(\n        "calcite-accordion-item",\n        createAccordionItemAttributes({\n          group: "accordion-item-4",\n          iconStart: "biking",\n          iconEnd: "biking"\n        }).concat({\n          name: "expanded",\n          value: true\n        }),\n        accordionItemContent\n      )}\n    `\n  )'}},withIconStartAndEnd_TestOnly.parameters),longHeading_MediumIconForLargeAccordionItem_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-accordion scale="l" style="width: 600px"> ${accordionItemsIconHeaderUseCases} </calcite-accordion>\n`'}},longHeading_MediumIconForLargeAccordionItem_TestOnly.parameters)},"./src/components/action-bar/action-bar.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"horizontal",(function(){return horizontal})),__webpack_require__.d(__webpack_exports__,"horizontalSmall",(function(){return horizontalSmall})),__webpack_require__.d(__webpack_exports__,"withDefinedWidths",(function(){return withDefinedWidths})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"withTooltip_NoTest",(function(){return withTooltip_NoTest})),__webpack_require__.d(__webpack_exports__,"hebrewLocale_TestOnly",(function(){return hebrewLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"norwegianLocale_TestOnly",(function(){return norwegianLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"FrenchLocale_TestOnly",(function(){return FrenchLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"hongKongLocale_TestOnly",(function(){return hongKongLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"ukranianLocale_TestOnly",(function(){return ukranianLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"bosnianLocale_TestOnly",(function(){return bosnianLocale_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),resources=__webpack_require__("./.storybook/resources.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Action Bar",parameters:{notes:'# calcite-action-bar\n\n## Description\n\nThe `calcite-action-bar` component is made up of multiple `calcite-action`s in the form of clickable icons. The action bar can be expanded to view actions with descriptive text or made smaller to view with just icons.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nRenders `calcite-action`s that stick to the top of the bar.\n\n```html\n<calcite-action-bar>\n  <calcite-action text="Add" icon="plus"></calcite-action>\n  <calcite-action text="Save" icon="save"></calcite-action>\n</calcite-action-bar>\n```\n\n\n### Bottom-actions\n\nThe bottom-actions slot renders `calcite-action`s that stick to the bottom of the bar above the expand/collapse icon.\n\n```html\n<calcite-action-bar>\n  <calcite-action text="Information" icon="information"></calcite-action>\n  <calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>\n```\n\n\n### Tooltip\n\nRenders with a tooltip on the expand action.\n\n```html\n<calcite-action-bar id="action-bar-test">\n  <calcite-tooltip slot="expand-tooltip">Expand</calcite-tooltip>\n  <calcite-action text="Add" icon="plus"></calcite-action>\n</calcite-action-bar>\n```\n\n\n### With-grouping\n\nRenders a group of `calcite-action`s contained in a `calcite-action-group`. Actions in a group are visually separated from other groups or actions in the bar.\n\n```html\n<calcite-action-bar>\n  <calcite-action-group>\n    <calcite-action text="Add" icon="plus"></calcite-action>\n    <calcite-action text="Save" icon="save"></calcite-action>\n  </calcite-action-group>\n\n  <calcite-action-group>\n    <calcite-action text="Layers" icon="layers"></calcite-action>\n    <calcite-action text="Basemaps" icon="layer-basemap"></calcite-action>\n  </calcite-action-group>\n</calcite-action-bar>\n```\n\n\n\n## Properties\n\n| Property                  | Attribute                   | Description                                                                     | Type                                      | Default      |\n| ------------------------- | --------------------------- | ------------------------------------------------------------------------------- | ----------------------------------------- | ------------ |\n| `expandDisabled`          | `expand-disabled`           | When `true`, the expand-toggling behavior is disabled.                          | `boolean`                                 | `false`      |\n| `expanded`                | `expanded`                  | When `true`, the component is expanded.                                         | `boolean`                                 | `false`      |\n| `layout`                  | `layout`                    | The layout direction of the actions.                                            | `"horizontal" \\| "vertical"`              | `"vertical"` |\n| `messageOverrides`        | --                          | Use this property to override individual strings used by the component.         | `{ expand?: string; collapse?: string; }` | `undefined`  |\n| `overflowActionsDisabled` | `overflow-actions-disabled` | Disables automatically overflowing `calcite-action`s that won\'t fit into menus. | `boolean`                                 | `false`      |\n| `position`                | `position`                  | Arranges the component depending on the element\'s `dir` property.               | `"end" \\| "start"`                        | `undefined`  |\n| `scale`                   | `scale`                     | Specifies the size of the expand `calcite-action`.                              | `"l" \\| "m" \\| "s"`                       | `undefined`  |\n\n\n## Events\n\n| Event                    | Description                                    | Type                |\n| ------------------------ | ---------------------------------------------- | ------------------- |\n| `calciteActionBarToggle` | Emits when the `expanded` property is toggled. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot               | Description                                                                                                            |\n| ------------------ | ---------------------------------------------------------------------------------------------------------------------- |\n|                    | A slot for adding `calcite-action`s that will appear at the top of the component.                                      |\n| `"bottom-actions"` | A slot for adding `calcite-action`s that will appear at the bottom of the component, above the collapse/expand button. |\n| `"expand-tooltip"` | A slot to set the `calcite-tooltip` for the expand toggle.                                                             |\n\n\n## CSS Custom Properties\n\n| Name                                      | Description                                                                            |\n| ----------------------------------------- | -------------------------------------------------------------------------------------- |\n| `--calcite-action-bar-expanded-max-width` | optionally specify the expanded max width of the action bar when in "vertical" layout. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-action-group](../action-group)\n- [calcite-action](../action)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-action-bar --\x3e calcite-action-group\n  calcite-action-bar --\x3e calcite-action\n  calcite-action-group --\x3e calcite-action-menu\n  calcite-action-group --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-popover\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  style calcite-action-bar fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,position=resources.a.position;return Object(utils.b)([{name:"expand-disabled",commit:function(){return this.value=Object(dist.boolean)("expandDisabled",!1),delete this.build,this}},{name:"expanded",commit:function(){return this.value=Object(dist.boolean)("expanded",!1),delete this.build,this}},{name:"position",commit:function(){return this.value=Object(dist.select)("position",position.values,position.defaultValue),delete this.build,this}}],exceptions)}),simple=function(){return Object(utils.a)("calcite-action-bar",createAttributes(),formatting.a`
      <calcite-action-group>
        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>
        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>
      </calcite-action-group>
      <calcite-action-group>
        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>
      </calcite-action-group>
    `)},horizontal=function(){return formatting.a`
  <div style="width: 500px;">
    <calcite-action-bar layout="horizontal" style="width:100%">
      <calcite-action-group layout="horizontal">
        <calcite-action text="Add" icon="plus"> </calcite-action>
        <calcite-action text="Save" icon="save"> </calcite-action>
        <calcite-action text="Layers" icon="layers"> </calcite-action>
      </calcite-action-group>
      <calcite-action-group layout="horizontal">
        <calcite-action text="Add" icon="plus"> </calcite-action>
        <calcite-action text="Save" active icon="save"> </calcite-action>
        <calcite-action text="Layers" icon="layers"> </calcite-action>
      </calcite-action-group>
      <calcite-action slot="bottom-actions" text="hello world" icon="layers"> </calcite-action>
    </calcite-action-bar>
  </div>
`},horizontalSmall=function(){return formatting.a`
  <div style="width: 250px;">
    <calcite-action-bar layout="horizontal" style="width:100%">
      <calcite-action-group layout="horizontal">
        <calcite-action text="Add" icon="plus"> </calcite-action>
        <calcite-action text="Save" icon="save"> </calcite-action>
        <calcite-action text="Layers" icon="layers"> </calcite-action>
      </calcite-action-group>
      <calcite-action-group layout="horizontal">
        <calcite-action text="Add" icon="plus"> </calcite-action>
        <calcite-action text="Save" active icon="save"> </calcite-action>
        <calcite-action text="Layers" icon="layers"> </calcite-action>
      </calcite-action-group>
      <calcite-action slot="bottom-actions" text="hello world" icon="layers"> </calcite-action>
    </calcite-action-bar>
  </div>
`},withDefinedWidths=function(){return formatting.a`
    <style>
      calcite-action-bar {
        --calcite-action-bar-expanded-max-width: 150px;
      }
    </style>
    <calcite-action-bar expanded>
      <calcite-action-group>
        <calcite-action text="Add to my custom action bar application" icon="plus"></calcite-action>
        <calcite-action text="Save to my custom action bar application" icon="save"></calcite-action>
      </calcite-action-group>
      <calcite-action-group>
        <calcite-action text="Layers in my custom action bar application" icon="layers"></calcite-action>
      </calcite-action-group>
    </calcite-action-bar>
  `},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-action-bar",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}]),formatting.a`
      <calcite-action-group>
        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>
        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>
      </calcite-action-group>
      <calcite-action-group>
        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>
      </calcite-action-group>
    `)};darkModeRTL_TestOnly.parameters={modes:utils.e};var withTooltip_NoTest=function(){return Object(utils.a)("calcite-action-bar",createAttributes(),formatting.a`
      <calcite-tooltip placement="bottom" slot="expand-tooltip">Expand</calcite-tooltip>
      <calcite-action text="Add" icon="plus"></calcite-action>
    `)};withTooltip_NoTest.parameters={chromatic:{disableSnapshot:!0}};var hebrewLocale_TestOnly=function(){return'<calcite-action-bar expanded lang="he">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>'},norwegianLocale_TestOnly=function(){return'<calcite-action-bar expanded lang="nb">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>'},FrenchLocale_TestOnly=function(){return'<calcite-action-bar expanded lang="fr">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>'},hongKongLocale_TestOnly=function(){return'<calcite-action-bar expanded lang="zh-HK">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>'},ukranianLocale_TestOnly=function(){return'<calcite-action-bar expanded lang="uk">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>'},bosnianLocale_TestOnly=function(){return'<calcite-action-bar expanded lang="bs">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>'};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-bar",\n    createAttributes(),\n    html`\n      <calcite-action-group>\n        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>\n        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>\n      </calcite-action-group>\n    `\n  )'}},simple.parameters),horizontal.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 500px;">\n    <calcite-action-bar layout="horizontal" style="width:100%">\n      <calcite-action-group layout="horizontal">\n        <calcite-action text="Add" icon="plus"> </calcite-action>\n        <calcite-action text="Save" icon="save"> </calcite-action>\n        <calcite-action text="Layers" icon="layers"> </calcite-action>\n      </calcite-action-group>\n      <calcite-action-group layout="horizontal">\n        <calcite-action text="Add" icon="plus"> </calcite-action>\n        <calcite-action text="Save" active icon="save"> </calcite-action>\n        <calcite-action text="Layers" icon="layers"> </calcite-action>\n      </calcite-action-group>\n      <calcite-action slot="bottom-actions" text="hello world" icon="layers"> </calcite-action>\n    </calcite-action-bar>\n  </div>\n`'}},horizontal.parameters),horizontalSmall.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 250px;">\n    <calcite-action-bar layout="horizontal" style="width:100%">\n      <calcite-action-group layout="horizontal">\n        <calcite-action text="Add" icon="plus"> </calcite-action>\n        <calcite-action text="Save" icon="save"> </calcite-action>\n        <calcite-action text="Layers" icon="layers"> </calcite-action>\n      </calcite-action-group>\n      <calcite-action-group layout="horizontal">\n        <calcite-action text="Add" icon="plus"> </calcite-action>\n        <calcite-action text="Save" active icon="save"> </calcite-action>\n        <calcite-action text="Layers" icon="layers"> </calcite-action>\n      </calcite-action-group>\n      <calcite-action slot="bottom-actions" text="hello world" icon="layers"> </calcite-action>\n    </calcite-action-bar>\n  </div>\n`'}},horizontalSmall.parameters),withDefinedWidths.parameters=Object.assign({storySource:{source:'(): string =>\n  html`\n    <style>\n      calcite-action-bar {\n        --calcite-action-bar-expanded-max-width: 150px;\n      }\n    </style>\n    <calcite-action-bar expanded>\n      <calcite-action-group>\n        <calcite-action text="Add to my custom action bar application" icon="plus"></calcite-action>\n        <calcite-action text="Save to my custom action bar application" icon="save"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Layers in my custom action bar application" icon="layers"></calcite-action>\n      </calcite-action-group>\n    </calcite-action-bar>\n  `'}},withDefinedWidths.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-bar",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-mode-dark"\n      }\n    ]),\n    html`\n      <calcite-action-group>\n        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>\n        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>\n      </calcite-action-group>\n    `\n  )'}},darkModeRTL_TestOnly.parameters),withTooltip_NoTest.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-bar",\n    createAttributes(),\n    html`\n      <calcite-tooltip placement="bottom" slot="expand-tooltip">Expand</calcite-tooltip>\n      <calcite-action text="Add" icon="plus"></calcite-action>\n    `\n  )'}},withTooltip_NoTest.parameters),hebrewLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => `<calcite-action-bar expanded lang="he">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>`'}},hebrewLocale_TestOnly.parameters),norwegianLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => `<calcite-action-bar expanded lang="nb">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>`'}},norwegianLocale_TestOnly.parameters),FrenchLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => `<calcite-action-bar expanded lang="fr">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>`'}},FrenchLocale_TestOnly.parameters),hongKongLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => `<calcite-action-bar expanded lang="zh-HK">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>`'}},hongKongLocale_TestOnly.parameters),ukranianLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => `<calcite-action-bar expanded lang="uk">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>`'}},ukranianLocale_TestOnly.parameters),bosnianLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => `<calcite-action-bar expanded lang="bs">\n<calcite-action text="Information" icon="information"></calcite-action>\n<calcite-action text="Feedback" slot="bottom-actions" icon="mega-phone"></calcite-action>\n</calcite-action-bar>`'}},bosnianLocale_TestOnly.parameters)},"./src/components/action-group/action-group.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"gridCenteringOfActionsInAGroup",(function(){return gridCenteringOfActionsInAGroup})),__webpack_require__.d(__webpack_exports__,"arabicLocale_TestOnly",(function(){return arabicLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"germanLocale_TestOnly",(function(){return germanLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"norwegianLocale_TestOnly",(function(){return norwegianLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"ChineseLocale_TestOnly",(function(){return ChineseLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"GreekLocale_TestOnly",(function(){return GreekLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"TurkishLocale_TestOnly",(function(){return TurkishLocale_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),formatting=__webpack_require__("./support/formatting.ts"),gridCenteringOfActionsInAGroup=(__webpack_exports__.default=Object.assign({title:"Components/Action Group",parameters:{notes:'# calcite-action-group\n\nThe `calcite-action-group` is a wrapper for multiple `calcite-action`s and housed in `calcite-action-bar` and `calcite-action-pad`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute   | Description                                                             | Type                                   | Default      |\n| ------------------ | ----------- | ----------------------------------------------------------------------- | -------------------------------------- | ------------ |\n| `columns`          | `columns`   | Indicates number of columns.                                            | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`           | `undefined`  |\n| `expanded`         | `expanded`  | When `true`, the component is expanded.                                 | `boolean`                              | `false`      |\n| `layout`           | `layout`    | Indicates the layout of the component.                                  | `"grid" \\| "horizontal" \\| "vertical"` | `"vertical"` |\n| `menuOpen`         | `menu-open` | When `true`, the `calcite-action-menu` is open.                         | `boolean`                              | `false`      |\n| `messageOverrides` | --          | Use this property to override individual strings used by the component. | `{ more?: string; }`                   | `undefined`  |\n| `scale`            | `scale`     | Specifies the size of the `calcite-action-menu`.                        | `"l" \\| "m" \\| "s"`                    | `undefined`  |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot             | Description                                                                            |\n| ---------------- | -------------------------------------------------------------------------------------- |\n|                  | A slot for adding a group of `calcite-action`s.                                        |\n| `"menu-actions"` | A slot for adding an overflow menu with `calcite-action`s inside a `calcite-dropdown`. |\n| `"menu-tooltip"` | A slot for adding a `calcite-tooltip` for the menu.                                    |\n\n\n## CSS Custom Properties\n\n| Name                             | Description                                                                  |\n| -------------------------------- | ---------------------------------------------------------------------------- |\n| `--calcite-action-group-columns` | Sets number of grid-template-columns when the `layout` property is `"grid"`. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-action-bar](../action-bar)\n - [calcite-action-pad](../action-pad)\n\n### Depends on\n\n- [calcite-action-menu](../action-menu)\n- [calcite-action](../action)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-action-group --\x3e calcite-action-menu\n  calcite-action-group --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-popover\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  calcite-action-bar --\x3e calcite-action-group\n  calcite-action-pad --\x3e calcite-action-group\n  style calcite-action-group fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width:400px">
    <calcite-action-group layout="${Object(dist.select)("layout",["horizontal","vertical","grid"],"grid")}">
      <calcite-action
        alignment="${Object(dist.select)("alignment",["start","center","end"],"center")}"
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        appearance="${Object(dist.select)("appearance",["solid","transparent","outline"],"solid")}"
        icon="${Object(dist.select)("icon",helpers.b,"polygon")}"
        ${Object(dist.text)("text","polygon")}
      >
      </calcite-action>
      <calcite-action
        alignment="${Object(dist.select)("alignment",["start","center","end"],"center")}"
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        appearance="${Object(dist.select)("appearance",["solid","transparent","outline"],"solid")}"
        icon="${Object(dist.select)("icon",helpers.b,"rectangle")}"
        ${Object(dist.text)("text","rectangle")}
      >
      </calcite-action>
      <calcite-action
        alignment="${Object(dist.select)("alignment",["start","center","end"],"center")}"
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        appearance="${Object(dist.select)("appearance",["solid","transparent","outline"],"solid")}"
        icon="${Object(dist.select)("icon",helpers.b,"trash")}"
        ${Object(dist.text)("text","trash")}
      >
      </calcite-action>
    </calcite-action-group>
  </div>
`}),arabicLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-group expanded lang="ar">
    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>
  </calcite-action-group>
</div>`},germanLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-group expanded lang="de">
    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>
  </calcite-action-group>
</div>`},norwegianLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-group expanded lang="no">
    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>
  </calcite-action-group>
</div>`},ChineseLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-group expanded lang="zh-CN">
    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>
  </calcite-action-group>
</div>`},GreekLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-group expanded lang="el">
    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>
  </calcite-action-group>
</div>`},TurkishLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-group expanded lang="tr">
    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>
  </calcite-action-group>
</div>`};gridCenteringOfActionsInAGroup.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px">\n    <calcite-action-group layout="${select("layout", ["horizontal", "vertical", "grid"], "grid")}">\n      <calcite-action\n        alignment="${select("alignment", ["start", "center", "end"], "center")}"\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        appearance="${select("appearance", ["solid", "transparent", "outline"], "solid")}"\n        icon="${select("icon", iconNames, "polygon")}"\n        ${text("text", "polygon")}\n      >\n      </calcite-action>\n      <calcite-action\n        alignment="${select("alignment", ["start", "center", "end"], "center")}"\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        appearance="${select("appearance", ["solid", "transparent", "outline"], "solid")}"\n        icon="${select("icon", iconNames, "rectangle")}"\n        ${text("text", "rectangle")}\n      >\n      </calcite-action>\n      <calcite-action\n        alignment="${select("alignment", ["start", "center", "end"], "center")}"\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        appearance="${select("appearance", ["solid", "transparent", "outline"], "solid")}"\n        icon="${select("icon", iconNames, "trash")}"\n        ${text("text", "trash")}\n      >\n      </calcite-action>\n    </calcite-action-group>\n  </div>\n`'}},gridCenteringOfActionsInAGroup.parameters),arabicLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-group expanded lang="ar">\n    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>\n  </calcite-action-group>\n</div>`'}},arabicLocale_TestOnly.parameters),germanLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-group expanded lang="de">\n    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>\n  </calcite-action-group>\n</div>`'}},germanLocale_TestOnly.parameters),norwegianLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-group expanded lang="no">\n    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>\n  </calcite-action-group>\n</div>`'}},norwegianLocale_TestOnly.parameters),ChineseLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-group expanded lang="zh-CN">\n    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>\n  </calcite-action-group>\n</div>`'}},ChineseLocale_TestOnly.parameters),GreekLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-group expanded lang="el">\n    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>\n  </calcite-action-group>\n</div>`'}},GreekLocale_TestOnly.parameters),TurkishLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-group expanded lang="tr">\n    <calcite-dropdown slot="menu-actions"> </calcite-dropdown>\n  </calcite-action-group>\n</div>`'}},TurkishLocale_TestOnly.parameters)},"./src/components/action-menu/action-menu.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"open",(function(){return action_menu_stories_open}));var helpers=__webpack_require__("./.storybook/helpers.ts"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Action Menu",parameters:{notes:'# calcite-action-menu\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property             | Attribute             | Description                                                                                                                                                                                                                                                                                                                                                                  | Type                                                                                                                                                                                                                                                                                                              | Default      |\n| -------------------- | --------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------ |\n| `expanded`           | `expanded`            | When `true`, the component is expanded.                                                                                                                                                                                                                                                                                                                                      | `boolean`                                                                                                                                                                                                                                                                                                         | `false`      |\n| `flipPlacements`     | --                    | Defines the available placements that can be used when a flip occurs.                                                                                                                                                                                                                                                                                                        | `Placement[]`                                                                                                                                                                                                                                                                                                     | `undefined`  |\n| `label` _(required)_ | `label`               | Specifies the text string for the component.                                                                                                                                                                                                                                                                                                                                 | `string`                                                                                                                                                                                                                                                                                                          | `undefined`  |\n| `open`               | `open`                | When `true`, the component is open.                                                                                                                                                                                                                                                                                                                                          | `boolean`                                                                                                                                                                                                                                                                                                         | `false`      |\n| `overlayPositioning` | `overlay-positioning` | Determines the type of positioning to use for the overlaid content.  Using `"absolute"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container\'s layout. `"fixed"` should be used to escape an overflowing parent container, or when the reference element\'s `position` CSS property is `"fixed"`. | `"absolute" \\| "fixed"`                                                                                                                                                                                                                                                                                           | `"absolute"` |\n| `placement`          | `placement`           | Determines where the component will be positioned relative to the `referenceElement`.                                                                                                                                                                                                                                                                                        | `"auto" \\| "top" \\| "right" \\| "bottom" \\| "left" \\| "top-start" \\| "top-end" \\| "right-start" \\| "right-end" \\| "bottom-start" \\| "bottom-end" \\| "left-start" \\| "left-end" \\| "auto-start" \\| "auto-end" \\| "leading-start" \\| "leading" \\| "leading-end" \\| "trailing-end" \\| "trailing" \\| "trailing-start"` | `"auto"`     |\n| `scale`              | `scale`               | Specifies the size of the component\'s trigger `calcite-action`.                                                                                                                                                                                                                                                                                                              | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                                                                                               | `undefined`  |\n\n\n## Events\n\n| Event                   | Description                                | Type                |\n| ----------------------- | ------------------------------------------ | ------------------- |\n| `calciteActionMenuOpen` | Emits when the `open` property is toggled. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot        | Description                                                       |\n| ----------- | ----------------------------------------------------------------- |\n|             | A slot for adding `calcite-action`s.                              |\n| `"tooltip"` | A slot for adding an tooltip for the menu.                        |\n| `"trigger"` | A slot for adding a `calcite-action` to trigger opening the menu. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-action-group](../action-group)\n - [calcite-block](../block)\n - [calcite-panel](../panel)\n\n### Depends on\n\n- [calcite-action](../action)\n- [calcite-popover](../popover)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-popover\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  calcite-action-group --\x3e calcite-action-menu\n  calcite-block --\x3e calcite-action-menu\n  calcite-panel --\x3e calcite-action-menu\n  style calcite-action-menu fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
    <calcite-action-menu>
      <calcite-action slot="trigger" text="Add" icon="banana"></calcite-action>
      <calcite-action text="Plus" icon="plus" text-enabled></calcite-action>
      <calcite-action text="Minus" icon="minus" text-enabled></calcite-action>
      <calcite-action text="Table" icon="table" text-enabled></calcite-action>
    </calcite-action-menu>
  `}),action_menu_stories_open=function(){return formatting.a`
    <calcite-action-menu open>
      <calcite-action slot="trigger" text="Add" icon="banana"></calcite-action>
      <calcite-action text="Plus" icon="plus" text-enabled></calcite-action>
      <calcite-action text="Minus" icon="minus" text-enabled></calcite-action>
      <calcite-action text="Table" icon="table" text-enabled></calcite-action>
    </calcite-action-menu>
  `};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  html`\n    <calcite-action-menu>\n      <calcite-action slot="trigger" text="Add" icon="banana"></calcite-action>\n      <calcite-action text="Plus" icon="plus" text-enabled></calcite-action>\n      <calcite-action text="Minus" icon="minus" text-enabled></calcite-action>\n      <calcite-action text="Table" icon="table" text-enabled></calcite-action>\n    </calcite-action-menu>\n  `'}},simple.parameters),action_menu_stories_open.parameters=Object.assign({storySource:{source:'(): string =>\n  html`\n    <calcite-action-menu open>\n      <calcite-action slot="trigger" text="Add" icon="banana"></calcite-action>\n      <calcite-action text="Plus" icon="plus" text-enabled></calcite-action>\n      <calcite-action text="Minus" icon="minus" text-enabled></calcite-action>\n      <calcite-action text="Table" icon="table" text-enabled></calcite-action>\n    </calcite-action-menu>\n  `'}},action_menu_stories_open.parameters)},"./src/components/action-pad/action-pad.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"withDefinedWidths",(function(){return withDefinedWidths})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"withTooltip_NoTest",(function(){return withTooltip_NoTest})),__webpack_require__.d(__webpack_exports__,"hebrewLocale_TestOnly",(function(){return hebrewLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"norwegianLocale_TestOnly",(function(){return norwegianLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"spanishLocale_TestOnly",(function(){return spanishLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"taiwanLocale_TestOnly",(function(){return taiwanLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"russianLocale_TestOnly",(function(){return russianLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"romanianMoldovaLocale_TestOnly",(function(){return romanianMoldovaLocale_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),resources=__webpack_require__("./.storybook/resources.ts"),formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Action Pad",parameters:{notes:'# calcite-action-pad\n\nThe `calcite-action-pad` component is made up of `calcite-action`s in the form of clickable icons. This does not have an expandable option and is a smaller and simpler component than `calcite-action-bar`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nRenders a basic action pad with `calcite-action`s.\n\n```html\n<calcite-action-pad>\n  <calcite-action text="Undo" icon="undo"></calcite-action>\n  <calcite-action text="Redo" icon="redo"></calcite-action>\n</calcite-action-pad>\n```\n\n\n### Tooltip\n\nRenders an action pad with a tooltip on the expand action.\n\n```html\n<calcite-action-pad id="action-pad-test">\n  <calcite-action text="Add" icon="plus"></calcite-action>\n</calcite-action-pad>\n<calcite-tooltip id="tooltip">Expand</calcite-tooltip>\n<script>\n  var actionPad = document.getElementById("action-pad-test");\n  var tooltip = document.getElementById("tooltip");\n  actionPad.tooltipExpand = tooltip;\n<\/script>\n```\n\n\n### With-grouping\n\nRenders a group of `calcite-action`s contained in a `calcite-action-group`. Actions in a group are visually separated from other groups or actions in the pad.\n\n```html\n<calcite-action-pad>\n  <calcite-action-group>\n    <calcite-action text="Home" icon="home"></calcite-action>\n    <calcite-action text="Styles" icon="add-in-edit"></calcite-action>\n  </calcite-action-group>\n\n  <calcite-action text="Tips" icon="lightbulb"></calcite-action>\n</calcite-action-pad>\n```\n\n\n\n## Properties\n\n| Property           | Attribute         | Description                                                             | Type                                      | Default      |\n| ------------------ | ----------------- | ----------------------------------------------------------------------- | ----------------------------------------- | ------------ |\n| `expandDisabled`   | `expand-disabled` | When `true`, the expand-toggling behavior is disabled.                  | `boolean`                                 | `false`      |\n| `expanded`         | `expanded`        | When `true`, the component is expanded.                                 | `boolean`                                 | `false`      |\n| `layout`           | `layout`          | Indicates the layout of the component.                                  | `"grid" \\| "horizontal" \\| "vertical"`    | `"vertical"` |\n| `messageOverrides` | --                | Use this property to override individual strings used by the component. | `{ expand?: string; collapse?: string; }` | `undefined`  |\n| `position`         | `position`        | Arranges the component depending on the element\'s `dir` property.       | `"end" \\| "start"`                        | `undefined`  |\n| `scale`            | `scale`           | Specifies the size of the expand `calcite-action`.                      | `"l" \\| "m" \\| "s"`                       | `undefined`  |\n\n\n## Events\n\n| Event                    | Description                                    | Type                |\n| ------------------------ | ---------------------------------------------- | ------------------- |\n| `calciteActionPadToggle` | Emits when the `expanded` property is toggled. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot               | Description                                                |\n| ------------------ | ---------------------------------------------------------- |\n|                    | A slot for adding `calcite-action`s to the component.      |\n| `"expand-tooltip"` | A slot to set the `calcite-tooltip` for the expand toggle. |\n\n\n## CSS Custom Properties\n\n| Name                                      | Description                                                                            |\n| ----------------------------------------- | -------------------------------------------------------------------------------------- |\n| `--calcite-action-pad-expanded-max-width` | optionally specify the expanded max width of the action pad when in "vertical" layout. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-action-group](../action-group)\n- [calcite-action](../action)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-action-pad --\x3e calcite-action-group\n  calcite-action-pad --\x3e calcite-action\n  calcite-action-group --\x3e calcite-action-menu\n  calcite-action-group --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-popover\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  style calcite-action-pad fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',chromatic:{delay:5e3}}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,position=resources.a.position;return Object(utils.b)([{name:"expand-disabled",commit:function(){return this.value=Object(dist.boolean)("expandDisabled",!1),delete this.build,this}},{name:"expanded",commit:function(){return this.value=Object(dist.boolean)("expanded",!1),delete this.build,this}},{name:"position",commit:function(){return this.value=Object(dist.select)("position",position.values,position.defaultValue),delete this.build,this}}],exceptions)}),simple=function(){return Object(utils.a)("calcite-action-pad",createAttributes(),formatting.a`
      <calcite-action-group>
        <calcite-action text="Undo" label="Undo Action" icon="undo"></calcite-action>
        <calcite-action text="Redo" label="Redo Action" icon="redo"></calcite-action>
      </calcite-action-group>
      <calcite-action-group>
        <calcite-action text="Delete" label="Delete Item" icon="trash"></calcite-action>
      </calcite-action-group>
    `)},withDefinedWidths=function(){return formatting.a`
    <style>
      calcite-action-pad {
        --calcite-action-pad-expanded-max-width: 150px;
      }
    </style>
    <calcite-action-pad expanded>
      <calcite-action-group>
        <calcite-action text="Add to my custom action pad application" icon="plus"></calcite-action>
        <calcite-action text="Save to my custom action pad application" icon="save"></calcite-action>
      </calcite-action-group>
      <calcite-action-group>
        <calcite-action text="Layers in my custom action pad application" icon="layers"></calcite-action>
      </calcite-action-group>
    </calcite-action-pad>
  `},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-action-pad",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}]),formatting.a`
      <calcite-action-group>
        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>
        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>
      </calcite-action-group>
      <calcite-action-group>
        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>
      </calcite-action-group>
    `)};darkModeRTL_TestOnly.parameters={modes:utils.e};var withTooltip_NoTest=function(){return Object(utils.a)("calcite-action-pad",createAttributes(),formatting.a`
      <calcite-tooltip placement="bottom" slot="expand-tooltip">Expand</calcite-tooltip>
      <calcite-action text="Add" icon="plus"></calcite-action>
    `)};withTooltip_NoTest.parameters={chromatic:{disableSnapshot:!0}};var hebrewLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-pad expanded lang="he" layout="horizontal"> </calcite-action-pad>
</div>`},norwegianLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-pad expanded lang="nb" layout="horizontal"> </calcite-action-pad>
</div>`},spanishLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-pad expanded lang="es" layout="horizontal"> </calcite-action-pad>
</div>`},taiwanLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-pad expanded lang="zh-TW" layout="horizontal"> </calcite-action-pad>
</div>`},russianLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-pad expanded lang="ru" layout="horizontal"> </calcite-action-pad>
</div>`},romanianMoldovaLocale_TestOnly=function(){return formatting.a`<div style="width:400px">
  <calcite-action-pad expanded lang="ro-mo" layout="horizontal"> </calcite-action-pad>
</div>`};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-pad",\n    createAttributes(),\n    html`\n      <calcite-action-group>\n        <calcite-action text="Undo" label="Undo Action" icon="undo"></calcite-action>\n        <calcite-action text="Redo" label="Redo Action" icon="redo"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Delete" label="Delete Item" icon="trash"></calcite-action>\n      </calcite-action-group>\n    `\n  )'}},simple.parameters),withDefinedWidths.parameters=Object.assign({storySource:{source:'(): string =>\n  html`\n    <style>\n      calcite-action-pad {\n        --calcite-action-pad-expanded-max-width: 150px;\n      }\n    </style>\n    <calcite-action-pad expanded>\n      <calcite-action-group>\n        <calcite-action text="Add to my custom action pad application" icon="plus"></calcite-action>\n        <calcite-action text="Save to my custom action pad application" icon="save"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Layers in my custom action pad application" icon="layers"></calcite-action>\n      </calcite-action-group>\n    </calcite-action-pad>\n  `'}},withDefinedWidths.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-pad",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-mode-dark"\n      }\n    ]),\n    html`\n      <calcite-action-group>\n        <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>\n        <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>\n      </calcite-action-group>\n    `\n  )'}},darkModeRTL_TestOnly.parameters),withTooltip_NoTest.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-action-pad",\n    createAttributes(),\n    html`\n      <calcite-tooltip placement="bottom" slot="expand-tooltip">Expand</calcite-tooltip>\n      <calcite-action text="Add" icon="plus"></calcite-action>\n    `\n  )'}},withTooltip_NoTest.parameters),hebrewLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-pad expanded lang="he" layout="horizontal"> </calcite-action-pad>\n</div>`'}},hebrewLocale_TestOnly.parameters),norwegianLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-pad expanded lang="nb" layout="horizontal"> </calcite-action-pad>\n</div>`'}},norwegianLocale_TestOnly.parameters),spanishLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-pad expanded lang="es" layout="horizontal"> </calcite-action-pad>\n</div>`'}},spanishLocale_TestOnly.parameters),taiwanLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-pad expanded lang="zh-TW" layout="horizontal"> </calcite-action-pad>\n</div>`'}},taiwanLocale_TestOnly.parameters),russianLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-pad expanded lang="ru" layout="horizontal"> </calcite-action-pad>\n</div>`'}},russianLocale_TestOnly.parameters),romanianMoldovaLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width:400px">\n  <calcite-action-pad expanded lang="ro-mo" layout="horizontal"> </calcite-action-pad>\n</div>`'}},romanianMoldovaLocale_TestOnly.parameters)},"./src/components/action/action.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"disabledAndCompactAndTextOnly_TestOnly",(function(){return disabledAndCompactAndTextOnly_TestOnly})),__webpack_require__.d(__webpack_exports__,"activeAndAppearanceTransparent_TestOnly",(function(){return activeAndAppearanceTransparent_TestOnly})),__webpack_require__.d(__webpack_exports__,"alignmentEndAndSmallScaleAndIndicator_TestOnly",(function(){return alignmentEndAndSmallScaleAndIndicator_TestOnly})),__webpack_require__.d(__webpack_exports__,"alignmentStartAndLargeScaleAndTextOverflow_TestOnly",(function(){return alignmentStartAndLargeScaleAndTextOverflow_TestOnly})),__webpack_require__.d(__webpack_exports__,"indicatorTextEnabled_TestOnly",(function(){return indicatorTextEnabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"arabicLocale_TestOnly",(function(){return arabicLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),resources=__webpack_require__("./.storybook/resources.ts");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var alignment=resources.a.alignment,scale=resources.a.scale,createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Buttons/Action",parameters:{notes:'# calcite-action\n\nThe `calcite-action` component lives in either a `calcite-action-bar` or `calcite-action-pad`. Actions look like an icon with a text description option of the component that will be revealed when the icon/ text is clicked or selected.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Transparent-appearance\n\nRenders a `calcite-action` that is transparent.\n\n```html\n<calcite-action appearance="transparent" text="Layers" icon="layers"></calcite-action>\n```\n\n\n### With-text-displayed\n\nRenders a `calcite-action` that displays text alongside an icon.\n\n```html\n<calcite-action label="Performs my custom action" text="Perform Action!" text-enabled icon="save"></calcite-action>\n```\n\n\n### With-tooltip\n\nRenders a `calcite-action` that displays text alongside an icon. A `calcite-tooltip` will be displayed on hover or focus.\n\n```html\n<calcite-action label="Performs my custom action" text="Perform Action!" text-enabled icon="save"\n  ><calcite-tooltip slot="tooltip">Save me!</calcite-tooltip></calcite-action\n>\n```\n\n\n### Without-text-displayed\n\nRenders a `calcite-action` that displays only an icon.\n\n```html\n<calcite-action label="Performs my custom action" text="My Custom Action" icon="plus"></calcite-action>\n```\n\n\n\n## Properties\n\n| Property            | Attribute       | Description                                                                                                                             | Type                                        | Default     |\n| ------------------- | --------------- | --------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------- | ----------- |\n| `active`            | `active`        | When `true`, the component is highlighted.                                                                                              | `boolean`                                   | `false`     |\n| `alignment`         | `alignment`     | Specifies the horizontal alignment of button elements with text content.                                                                | `"center" \\| "end" \\| "start"`              | `undefined` |\n| `appearance`        | `appearance`    | Specifies the appearance of the component.                                                                                              | `"solid" \\| "transparent"`                  | `"solid"`   |\n| `compact`           | `compact`       | When `true`, the side padding of the component is reduced. Compact mode is used internally by components, e.g. `calcite-block-section`. | `boolean`                                   | `false`     |\n| `disabled`          | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                | `boolean`                                   | `false`     |\n| `icon`              | `icon`          | Specifies an icon to display.                                                                                                           | `string`                                    | `undefined` |\n| `iconFlipRtl`       | `icon-flip-rtl` | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).                                            | `boolean`                                   | `false`     |\n| `indicator`         | `indicator`     | When `true`, displays a visual indicator.                                                                                               | `boolean`                                   | `false`     |\n| `label`             | `label`         | Specifies the label of the component. If no label is provided, the label inherits what\'s provided for the `text` prop.                  | `string`                                    | `undefined` |\n| `loading`           | `loading`       | When `true`, a busy indicator is displayed.                                                                                             | `boolean`                                   | `false`     |\n| `messageOverrides`  | --              | Use this property to override individual strings used by the component.                                                                 | `{ loading?: string; indicator?: string; }` | `undefined` |\n| `scale`             | `scale`         | Specifies the size of the component.                                                                                                    | `"l" \\| "m" \\| "s"`                         | `"m"`       |\n| `text` _(required)_ | `text`          | Specifies text that accompanies the icon.                                                                                               | `string`                                    | `undefined` |\n| `textEnabled`       | `text-enabled`  | Indicates whether the text is displayed.                                                                                                | `boolean`                                   | `false`     |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                         |\n| ---- | ----------------------------------- |\n|      | A slot for adding a `calcite-icon`. |\n\n\n## CSS Custom Properties\n\n| Name                               | Description                                       |\n| ---------------------------------- | ------------------------------------------------- |\n| `--calcite-action-indicator-color` | Specifies the color of the component\'s indicator. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-action-bar](../action-bar)\n - [calcite-action-group](../action-group)\n - [calcite-action-menu](../action-menu)\n - [calcite-action-pad](../action-pad)\n - [calcite-flow-item](../flow-item)\n - [calcite-panel](../panel)\n - [calcite-pick-list-item](../pick-list-item)\n - [calcite-popover](../popover)\n - [calcite-tip](../tip)\n - [calcite-tip-manager](../tip-manager)\n\n### Depends on\n\n- [calcite-loader](../loader)\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-action-bar --\x3e calcite-action\n  calcite-action-group --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-pad --\x3e calcite-action\n  calcite-flow-item --\x3e calcite-action\n  calcite-panel --\x3e calcite-action\n  calcite-pick-list-item --\x3e calcite-action\n  calcite-popover --\x3e calcite-action\n  calcite-tip --\x3e calcite-action\n  calcite-tip-manager --\x3e calcite-action\n  style calcite-action fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"active",commit:function(){return this.value=Object(dist.boolean)("active",!1),delete this.build,this}},{name:"alignment",commit:function(){return this.value=Object(dist.select)("alignment",alignment.values,alignment.defaultValue),delete this.build,this}},{name:"appearance",commit:function(){return this.value=Object(dist.select)("appearance",["solid","transparent"],"solid"),delete this.build,this}},{name:"compact",commit:function(){return this.value=Object(dist.boolean)("compact",!1),delete this.build,this}},{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1),delete this.build,this}},{name:"icon",commit:function(){return this.value=Object(dist.select)("icon",[""].concat(_toConsumableArray(helpers.b)),"banana"),delete this.build,this}},{name:"indicator",commit:function(){return this.value=Object(dist.boolean)("indicator",!1),delete this.build,this}},{name:"label",commit:function(){return this.value=Object(dist.text)("label","Label"),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1),delete this.build,this}},{name:"scale",commit:function(){return this.value=Object(dist.select)("scale",scale.values,scale.defaultValue),delete this.build,this}},{name:"text",commit:function(){return this.value=Object(dist.text)("text","Text"),delete this.build,this}},{name:"text-enabled",commit:function(){return this.value=Object(dist.boolean)("textEnabled",!0),delete this.build,this}},{name:"style",commit:function(){return this.value=Object(dist.boolean)("textEnabled",!0),delete this.build,this}}],exceptions)}),simple=function(){return formatting.a`<div>
    ${Object(utils.a)("calcite-action",createAttributes({exceptions:["icon","text"]}).concat([{name:"icon",value:"banana"},{name:"text",value:""}]))}
  </div>`},disabledAndCompactAndTextOnly_TestOnly=function(){return formatting.a`<div>
    ${Object(utils.a)("calcite-action",createAttributes({exceptions:["compact","disabled"]}).concat([{name:"compact",value:!0},{name:"disabled",value:!0}]))}
  </div>`},activeAndAppearanceTransparent_TestOnly=function(){return formatting.a`<div>
    ${Object(utils.a)("calcite-action",createAttributes({exceptions:["icon","appearance","active"]}).concat([{name:"active",value:!0},{name:"icon",value:"banana"},{name:"appearance",value:"transparent"}]))}
  </div>`},alignmentEndAndSmallScaleAndIndicator_TestOnly=function(){return formatting.a`<div style="width: 300px">
    ${Object(utils.a)("calcite-action",createAttributes({exceptions:["icon","indicator","alignment","scale"]}).concat([{name:"icon",value:"banana"},{name:"alignment",value:"end"},{name:"indicator",value:!0},{name:"scale",value:"s"}]))}
  </div>`},alignmentStartAndLargeScaleAndTextOverflow_TestOnly=function(){return formatting.a`<div style="width: 150px">
    ${Object(utils.a)("calcite-action",createAttributes({exceptions:["icon","text","alignment","scale"]}).concat([{name:"icon",value:"banana"},{name:"text",value:"Blah blah blah blah blah blah blah blah blah blah"},{name:"alignment",value:"start"},{name:"scale",value:"l"}]))}
  </div>`},indicatorTextEnabled_TestOnly=function(){return formatting.a`
  <calcite-action indicator active text="click-me" text-enabled icon="gear"></calcite-action>
`},arabicLocale_TestOnly=function(){return formatting.a`
  <calcite-action
    dir="rtl"
    icon="banana"
    lang="ar"
    lang="ar-EG"
    text="لكن لا بد أن أوضح لك أن كل"
    text-enabled
  ></calcite-action>
`},darkModeRTL_TestOnly=function(){return formatting.a`<div>
    ${Object(utils.a)("calcite-action",createAttributes({exceptions:["icon","class","dir"]}).concat([{name:"icon",value:"banana"},{name:"class",value:"calcite-mode-dark"},{name:"dir",value:"rtl"}]))}
  </div>`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div>\n    ${create(\n      "calcite-action",\n      createAttributes({ exceptions: ["icon", "text"] }).concat([\n        {\n          name: "icon",\n          value: "banana"\n        },\n        {\n          name: "text",\n          value: ""\n        }\n      ])\n    )}\n  </div>`'}},simple.parameters),disabledAndCompactAndTextOnly_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div>\n    ${create(\n      "calcite-action",\n      createAttributes({ exceptions: ["compact", "disabled"] }).concat([\n        { name: "compact", value: true },\n        { name: "disabled", value: true }\n      ])\n    )}\n  </div>`'}},disabledAndCompactAndTextOnly_TestOnly.parameters),activeAndAppearanceTransparent_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div>\n    ${create(\n      "calcite-action",\n      createAttributes({ exceptions: ["icon", "appearance", "active"] }).concat([\n        { name: "active", value: true },\n        { name: "icon", value: "banana" },\n        { name: "appearance", value: "transparent" }\n      ])\n    )}\n  </div>`'}},activeAndAppearanceTransparent_TestOnly.parameters),alignmentEndAndSmallScaleAndIndicator_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 300px">\n    ${create(\n      "calcite-action",\n      createAttributes({ exceptions: ["icon", "indicator", "alignment", "scale"] }).concat([\n        { name: "icon", value: "banana" },\n        { name: "alignment", value: "end" },\n        { name: "indicator", value: true },\n        { name: "scale", value: "s" }\n      ])\n    )}\n  </div>`'}},alignmentEndAndSmallScaleAndIndicator_TestOnly.parameters),alignmentStartAndLargeScaleAndTextOverflow_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 150px">\n    ${create(\n      "calcite-action",\n      createAttributes({ exceptions: ["icon", "text", "alignment", "scale"] }).concat([\n        { name: "icon", value: "banana" },\n        { name: "text", value: "Blah blah blah blah blah blah blah blah blah blah" },\n        { name: "alignment", value: "start" },\n        { name: "scale", value: "l" }\n      ])\n    )}\n  </div>`'}},alignmentStartAndLargeScaleAndTextOverflow_TestOnly.parameters),indicatorTextEnabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-action indicator active text="click-me" text-enabled icon="gear"></calcite-action>\n`'}},indicatorTextEnabled_TestOnly.parameters),arabicLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-action\n    dir="rtl"\n    icon="banana"\n    lang="ar"\n    lang="ar-EG"\n    text="لكن لا بد أن أوضح لك أن كل"\n    text-enabled\n  ></calcite-action>\n`'}},arabicLocale_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div>\n    ${create(\n      "calcite-action",\n      createAttributes({ exceptions: ["icon", "class", "dir"] }).concat([\n        { name: "icon", value: "banana" },\n        { name: "class", value: "calcite-mode-dark" },\n        { name: "dir", value: "rtl" }\n      ])\n    )}\n  </div>`'}},darkModeRTL_TestOnly.parameters)},"./src/components/alert/alert.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"titleMessageLink",(function(){return titleMessageLink})),__webpack_require__.d(__webpack_exports__,"titleMessage",(function(){return titleMessage})),__webpack_require__.d(__webpack_exports__,"messageLink",(function(){return messageLink})),__webpack_require__.d(__webpack_exports__,"message",(function(){return message})),__webpack_require__.d(__webpack_exports__,"customIcon",(function(){return customIcon})),__webpack_require__.d(__webpack_exports__,"queue_NoTest",(function(){return queue_NoTest})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"actionsEndNoQueue_TestOnly",(function(){return actionsEndNoQueue_TestOnly})),__webpack_require__.d(__webpack_exports__,"actionsEndQueued_TestOnly",(function(){return actionsEndQueued_TestOnly})),__webpack_require__.d(__webpack_exports__,"autoClosableRetainsCloseButton_TestOnly",(function(){return autoClosableRetainsCloseButton_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),titleMessageLink=(__webpack_exports__.default=Object.assign({title:"Components/Alert",parameters:{notes:'# calcite-alert\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nA single instance of an alert. Multiple alerts will aggregate in a queue.\n\n```html\n<calcite-alert open>\n  <div slot="title">Title of alert</div>\n  <div slot="message">Message text of the alert</div>\n  <a slot="link" href="#">Retry</a>\n</calcite-alert>\n```\n\n\n\n## Properties\n\n| Property             | Attribute             | Description                                                                                                           | Type                                                                                                                                                                                                                                    | Default                            |\n| -------------------- | --------------------- | --------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------- |\n| `autoClose`          | `auto-close`          | When `true`, the component closes automatically (recommended for passive, non-blocking alerts).                       | `boolean`                                                                                                                                                                                                                               | `false`                            |\n| `autoCloseDuration`  | `auto-close-duration` | Specifies the duration before the component automatically closes (only use with `autoClose`).                         | `"fast" \\| "medium" \\| "slow"`                                                                                                                                                                                                          | `this.autoClose ? "medium" : null` |\n| `icon`               | `icon`                | When `true`, shows a default recommended icon. Alternatively, pass a Calcite UI Icon name to display a specific icon. | `boolean \\| string`                                                                                                                                                                                                                     | `undefined`                        |\n| `iconFlipRtl`        | `icon-flip-rtl`       | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).                          | `boolean`                                                                                                                                                                                                                               | `false`                            |\n| `kind`               | `kind`                | Specifies the kind of the component (will apply to top border and icon).                                              | `"brand" \\| "danger" \\| "info" \\| "success" \\| "warning"`                                                                                                                                                                               | `"brand"`                          |\n| `label` _(required)_ | `label`               | Specifies an accessible name for the component.                                                                       | `string`                                                                                                                                                                                                                                | `undefined`                        |\n| `messageOverrides`   | --                    | Use this property to override individual strings used by the component.                                               | `{ close?: string; }`                                                                                                                                                                                                                   | `undefined`                        |\n| `numberingSystem`    | `numbering-system`    | Specifies the Unicode numeral system used by the component for localization.                                          | `"arab" \\| "arabext" \\| "bali" \\| "beng" \\| "deva" \\| "fullwide" \\| "gujr" \\| "guru" \\| "hanidec" \\| "khmr" \\| "knda" \\| "laoo" \\| "latn" \\| "limb" \\| "mlym" \\| "mong" \\| "mymr" \\| "orya" \\| "tamldec" \\| "telu" \\| "thai" \\| "tibt"` | `undefined`                        |\n| `open`               | `open`                | When `true`, displays and positions the component.                                                                    | `boolean`                                                                                                                                                                                                                               | `false`                            |\n| `placement`          | `placement`           | Specifies the placement of the component                                                                              | `"bottom" \\| "bottom-end" \\| "bottom-start" \\| "top" \\| "top-end" \\| "top-start"`                                                                                                                                                       | `"bottom"`                         |\n| `scale`              | `scale`               | Specifies the size of the component.                                                                                  | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                     | `"m"`                              |\n\n\n## Events\n\n| Event                     | Description                                                                                              | Type                |\n| ------------------------- | -------------------------------------------------------------------------------------------------------- | ------------------- |\n| `calciteAlertBeforeClose` | Fires when the component is requested to be closed and before the closing transition begins.             | `CustomEvent<void>` |\n| `calciteAlertBeforeOpen`  | Fires when the component is added to the DOM but not rendered, and before the opening transition begins. | `CustomEvent<void>` |\n| `calciteAlertClose`       | Fires when the component is closed and animation is complete.                                            | `CustomEvent<void>` |\n| `calciteAlertOpen`        | Fires when the component is open and animation is complete.                                              | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s "close" button (the first focusable item).\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot            | Description                                                                                                        |\n| --------------- | ------------------------------------------------------------------------------------------------------------------ |\n| `"actions-end"` | A slot for adding `calcite-action`s to the end of the component. It is recommended to use two or fewer actions.    |\n| `"link"`        | A slot for adding a `calcite-action` to take from the component such as: "undo", "try again", "link to page", etc. |\n| `"message"`     | A slot for adding main text to the component.                                                                      |\n| `"title"`       | A slot for adding a title to the component.                                                                        |\n\n\n## CSS Custom Properties\n\n| Name                    | Description                           |\n| ----------------------- | ------------------------------------- |\n| `--calcite-alert-width` | Specifies the width of the component. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-chip](../chip)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-alert --\x3e calcite-icon\n  calcite-alert --\x3e calcite-chip\n  calcite-chip --\x3e calcite-icon\n  style calcite-alert fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',chromatic:{delay:500}}},Object(helpers.c)()),function(){return formatting.a`
<calcite-alert
${Object(helpers.a)("icon",!0)}
${Object(helpers.a)("auto-close",!1)}
auto-close-duration="${Object(dist.select)("auto-close-duration",["fast","medium","slow"],"medium")}"
placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
${Object(helpers.a)("open",!0)}
scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
kind="${Object(dist.select)("kind",["brand","info","danger","success","warning"],"brand")}">
<div slot="title">Here's a general bit of information</div></div>
<div slot="message">
  Some kind of contextually relevant content
</div>
<calcite-link slot="link" title="my action">Take action</calcite-link>
</calcite-alert>
`});titleMessageLink.storyName="Title, message, link";var titleMessage=function(){return formatting.a`
  <calcite-alert
    ${Object(helpers.a)("icon",!0)}
    ${Object(helpers.a)("auto-close",!1)}
    auto-close-duration="${Object(dist.select)("auto-close-duration",["fast","medium","slow"],"medium")}"
    placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
    ${Object(helpers.a)("open",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    kind="${Object(dist.select)("kind",["brand","info","danger","success","warning"],"danger")}"
  >
    <div slot="title">Something failed</div>
    <div slot="message">That thing you wanted to do didn't work as expected</div>
  </calcite-alert>
`};titleMessage.storyName="Title, message";var messageLink=function(){return formatting.a`
  <calcite-alert
    ${Object(helpers.a)("icon",!0)}
    ${Object(helpers.a)("auto-close",!1)}
    auto-close-duration="${Object(dist.select)("auto-close-duration",["fast","medium","slow"],"medium")}"
    placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
    ${Object(helpers.a)("open",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    kind="${Object(dist.select)("kind",["brand","info","danger","success","warning"],"success")}"
  >
    <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>
    <calcite-link slot="link" title="my action">View layer</calcite-link>
  </calcite-alert>
`};messageLink.storyName="Message, link";var message=function(){return formatting.a`
  <calcite-alert
    ${Object(helpers.a)("icon",!0)}
    ${Object(helpers.a)("auto-close",!1)}
    auto-close-duration="${Object(dist.select)("auto-close-duration",["fast","medium","slow"],"medium")}"
    placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
    ${Object(helpers.a)("open",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    kind="${Object(dist.select)("kind",["brand","info","danger","success","warning"],"warning")}"
  >
    <div slot="message">Network connection interruption detected</div>
  </calcite-alert>
`},customIcon=function(){return formatting.a`
  <calcite-alert
    icon="${Object(dist.select)("icon",helpers.b,helpers.b[0])}"
    ${Object(helpers.a)("auto-close",!1)}
    auto-close-duration="${Object(dist.select)("auto-close-duration",["fast","medium","slow"],"medium")}"
    placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
    ${Object(helpers.a)("open",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    kind="${Object(dist.select)("kind",["brand","info","danger","success","warning"],"success")}"
  >
    <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>
    <calcite-link slot="link" title="my action">View layer</calcite-link>
  </calcite-alert>
`},queue_NoTest=function(){return formatting.a`
  <div>
    <h5>Open or add to queue</h5>
    <calcite-button onclick='document.querySelector("#one").setAttribute("open", "")'>Open Alert 1</calcite-button>
    <calcite-button onclick='document.querySelector("#two").setAttribute("open", "")'>Open Alert 2</calcite-button>
    <calcite-button onclick='document.querySelector("[data-custom-id=my-id]").setAttribute("open", "")'
      >Open Alert 3</calcite-button
    >
    <br />
    <br />
    <h5>Close or remove from queue</h5>
    <calcite-button kind="danger" onclick='document.querySelector("#one").removeAttribute("open")'
      >Close Alert 1</calcite-button
    >
    <calcite-button kind="danger" onclick='document.querySelector("#two").removeAttribute("open")'
      >Close Alert 2</calcite-button
    >
    <calcite-button kind="danger" onclick='document.querySelector("[data-custom-id=my-id]").removeAttribute("open")'
      >Close Alert 3</calcite-button
    >
    <calcite-alert id="one" icon kind="${Object(dist.select)("kind",["brand","info","danger","success","warning"],"success")}">
      <div slot="title">Your great thing happened</div>
      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>
      <calcite-link slot="link" title="my action">View layer</calcite-link>
    </calcite-alert>
    <calcite-alert id="two" icon kind="${Object(dist.select)("kind-2",["brand","info","danger","success","warning"],"info")}">
      <div slot="title">Your great thing happened</div>
      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>
      <calcite-link slot="link" title="my action">View layer</calcite-link>
    </calcite-alert>
    <calcite-alert
      data-custom-id="my-id"
      icon
      kind="${Object(dist.select)("kind-3",["brand","info","danger","success","warning"],"danger")}"
    >
      <div slot="title">That didn't work out</div>
      <div slot="message">That thing you wanted to do didn't work</div>
      <calcite-link slot="link" title="my action">View layer</calcite-link>
    </calcite-alert>
  </div>
`};queue_NoTest.parameters={chromatic:{disableSnapshot:!0}};var darkModeRTL_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-alert
    class="calcite-mode-dark"
    ${Object(helpers.a)("icon",!0)}
    ${Object(helpers.a)("auto-close",!1)}
    auto-close-duration="${Object(dist.select)("auto-close-duration",["fast","medium","slow"],"medium")}"
    placement="${Object(dist.select)("placement",["bottom-start","bottom","bottom-end","top-start","top","top-end"],"bottom")}"
    ${Object(helpers.a)("open",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    kind="${Object(dist.select)("kind",["brand","info","danger","success","warning"],"danger")}"
  >
    <div slot="title">Something failed</div>
    <div slot="message">That thing you wanted to do didn't work as expected</div>
    <calcite-link slot="link" title="my action">My action</calcite-link>
  </calcite-alert>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var actionsEndNoQueue_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-alert label="this is a default danger with icon and link" scale="l" kind="danger" icon open>
    <div slot="title">Hello there!</div>
    <div slot="message">Do you really want to proceed?</div>
    <calcite-action scale="l" slot="actions-end" title="Tips" icon="lightbulb"></calcite-action>
    <calcite-action scale="l" slot="actions-end" title="Get info" icon="attachment"></calcite-action>
  </calcite-alert>
`},actionsEndQueued_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-alert id="one" label="One" scale="l" kind="danger" icon open>
    <div slot="title">Hello there, alert one!</div>
    <div slot="message">Do you really want to proceed?</div>
    <calcite-action scale="l" slot="actions-end" title="Tips" icon="lightbulb"></calcite-action>
    <calcite-action scale="l" slot="actions-end" title="Get info" icon="attachment"></calcite-action>
  </calcite-alert>
  <calcite-alert id="two" label="Two" scale="l" kind="danger" icon>
    <div slot="title">Hello there, alert two!</div>
    <div slot="message">Do you really want to proceed?</div>
    <calcite-action scale="l" slot="actions-end" title="Tips" icon="lightbulb"></calcite-action>
    <calcite-action scale="l" slot="actions-end" title="Get info" icon="attachment"></calcite-action>
  </calcite-alert>
  <script>
    setTimeout(() => {
      document.querySelector("#two").open = true;
    }, "1000");
  </script>
`},autoClosableRetainsCloseButton_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-alert auto-close auto-close-duration="medium" open scale="m" kind="info">
    <div slot="title">Here's a general bit of information</div>
    <div slot="message">Some kind of contextually relevant content</div>
    <calcite-link slot="link" title="my action" role="presentation"> Take action </calcite-link>
  </calcite-alert>
`};titleMessageLink.parameters=Object.assign({storySource:{source:'(): string => html`\n<calcite-alert\n${boolean("icon", true)}\n${boolean("auto-close", false)}\nauto-close-duration="${select("auto-close-duration", ["fast", "medium", "slow"], "medium")}"\nplacement="${select("placement", ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"], "bottom")}"\n${boolean("open", true)}\nscale="${select("scale", ["s", "m", "l"], "m")}"\nkind="${select("kind", ["brand", "info", "danger", "success", "warning"], "brand")}">\n<div slot="title">Here\'s a general bit of information</div></div>\n<div slot="message">\n  Some kind of contextually relevant content\n</div>\n<calcite-link slot="link" title="my action">Take action</calcite-link>\n</calcite-alert>\n`'}},titleMessageLink.parameters),titleMessage.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-alert\n    ${boolean("icon", true)}\n    ${boolean("auto-close", false)}\n    auto-close-duration="${select("auto-close-duration", ["fast", "medium", "slow"], "medium")}"\n    placement="${select(\n      "placement",\n      ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"],\n      "bottom"\n    )}"\n    ${boolean("open", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    kind="${select("kind", ["brand", "info", "danger", "success", "warning"], "danger")}"\n  >\n    <div slot="title">Something failed</div>\n    <div slot="message">That thing you wanted to do didn\'t work as expected</div>\n  </calcite-alert>\n`'}},titleMessage.parameters),messageLink.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-alert\n    ${boolean("icon", true)}\n    ${boolean("auto-close", false)}\n    auto-close-duration="${select("auto-close-duration", ["fast", "medium", "slow"], "medium")}"\n    placement="${select(\n      "placement",\n      ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"],\n      "bottom"\n    )}"\n    ${boolean("open", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    kind="${select("kind", ["brand", "info", "danger", "success", "warning"], "success")}"\n  >\n    <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>\n    <calcite-link slot="link" title="my action">View layer</calcite-link>\n  </calcite-alert>\n`'}},messageLink.parameters),message.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-alert\n    ${boolean("icon", true)}\n    ${boolean("auto-close", false)}\n    auto-close-duration="${select("auto-close-duration", ["fast", "medium", "slow"], "medium")}"\n    placement="${select(\n      "placement",\n      ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"],\n      "bottom"\n    )}"\n    ${boolean("open", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    kind="${select("kind", ["brand", "info", "danger", "success", "warning"], "warning")}"\n  >\n    <div slot="message">Network connection interruption detected</div>\n  </calcite-alert>\n`'}},message.parameters),customIcon.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-alert\n    icon="${select("icon", iconNames, iconNames[0])}"\n    ${boolean("auto-close", false)}\n    auto-close-duration="${select("auto-close-duration", ["fast", "medium", "slow"], "medium")}"\n    placement="${select(\n      "placement",\n      ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"],\n      "bottom"\n    )}"\n    ${boolean("open", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    kind="${select("kind", ["brand", "info", "danger", "success", "warning"], "success")}"\n  >\n    <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>\n    <calcite-link slot="link" title="my action">View layer</calcite-link>\n  </calcite-alert>\n`'}},customIcon.parameters),queue_NoTest.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div>\n    <h5>Open or add to queue</h5>\n    <calcite-button onclick=\'document.querySelector("#one").setAttribute("open", "")\'>Open Alert 1</calcite-button>\n    <calcite-button onclick=\'document.querySelector("#two").setAttribute("open", "")\'>Open Alert 2</calcite-button>\n    <calcite-button onclick=\'document.querySelector("[data-custom-id=my-id]").setAttribute("open", "")\'\n      >Open Alert 3</calcite-button\n    >\n    <br />\n    <br />\n    <h5>Close or remove from queue</h5>\n    <calcite-button kind="danger" onclick=\'document.querySelector("#one").removeAttribute("open")\'\n      >Close Alert 1</calcite-button\n    >\n    <calcite-button kind="danger" onclick=\'document.querySelector("#two").removeAttribute("open")\'\n      >Close Alert 2</calcite-button\n    >\n    <calcite-button kind="danger" onclick=\'document.querySelector("[data-custom-id=my-id]").removeAttribute("open")\'\n      >Close Alert 3</calcite-button\n    >\n    <calcite-alert id="one" icon kind="${select("kind", ["brand", "info", "danger", "success", "warning"], "success")}">\n      <div slot="title">Your great thing happened</div>\n      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>\n      <calcite-link slot="link" title="my action">View layer</calcite-link>\n    </calcite-alert>\n    <calcite-alert id="two" icon kind="${select("kind-2", ["brand", "info", "danger", "success", "warning"], "info")}">\n      <div slot="title">Your great thing happened</div>\n      <div slot="message">Successfully duplicated <strong>2019 Sales Demographics by County</strong> layer</div>\n      <calcite-link slot="link" title="my action">View layer</calcite-link>\n    </calcite-alert>\n    <calcite-alert\n      data-custom-id="my-id"\n      icon\n      kind="${select("kind-3", ["brand", "info", "danger", "success", "warning"], "danger")}"\n    >\n      <div slot="title">That didn\'t work out</div>\n      <div slot="message">That thing you wanted to do didn\'t work</div>\n      <calcite-link slot="link" title="my action">View layer</calcite-link>\n    </calcite-alert>\n  </div>\n`'}},queue_NoTest.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-alert\n    class="calcite-mode-dark"\n    ${boolean("icon", true)}\n    ${boolean("auto-close", false)}\n    auto-close-duration="${select("auto-close-duration", ["fast", "medium", "slow"], "medium")}"\n    placement="${select(\n      "placement",\n      ["bottom-start", "bottom", "bottom-end", "top-start", "top", "top-end"],\n      "bottom"\n    )}"\n    ${boolean("open", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    kind="${select("kind", ["brand", "info", "danger", "success", "warning"], "danger")}"\n  >\n    <div slot="title">Something failed</div>\n    <div slot="message">That thing you wanted to do didn\'t work as expected</div>\n    <calcite-link slot="link" title="my action">My action</calcite-link>\n  </calcite-alert>\n`'}},darkModeRTL_TestOnly.parameters),actionsEndNoQueue_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-alert label="this is a default danger with icon and link" scale="l" kind="danger" icon open>\n    <div slot="title">Hello there!</div>\n    <div slot="message">Do you really want to proceed?</div>\n    <calcite-action scale="l" slot="actions-end" title="Tips" icon="lightbulb"></calcite-action>\n    <calcite-action scale="l" slot="actions-end" title="Get info" icon="attachment"></calcite-action>\n  </calcite-alert>\n`'}},actionsEndNoQueue_TestOnly.parameters),actionsEndQueued_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-alert id="one" label="One" scale="l" kind="danger" icon open>\n    <div slot="title">Hello there, alert one!</div>\n    <div slot="message">Do you really want to proceed?</div>\n    <calcite-action scale="l" slot="actions-end" title="Tips" icon="lightbulb"></calcite-action>\n    <calcite-action scale="l" slot="actions-end" title="Get info" icon="attachment"></calcite-action>\n  </calcite-alert>\n  <calcite-alert id="two" label="Two" scale="l" kind="danger" icon>\n    <div slot="title">Hello there, alert two!</div>\n    <div slot="message">Do you really want to proceed?</div>\n    <calcite-action scale="l" slot="actions-end" title="Tips" icon="lightbulb"></calcite-action>\n    <calcite-action scale="l" slot="actions-end" title="Get info" icon="attachment"></calcite-action>\n  </calcite-alert>\n  <script>\n    setTimeout(() => {\n      document.querySelector("#two").open = true;\n    }, "1000");\n  <\/script>\n`'}},actionsEndQueued_TestOnly.parameters),autoClosableRetainsCloseButton_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-alert auto-close auto-close-duration="medium" open scale="m" kind="info">\n    <div slot="title">Here\'s a general bit of information</div>\n    <div slot="message">Some kind of contextually relevant content</div>\n    <calcite-link slot="link" title="my action" role="presentation"> Take action </calcite-link>\n  </calcite-alert>\n`'}},autoClosableRetainsCloseButton_TestOnly.parameters)},"./src/components/avatar/avatar.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"missingThumbnail",(function(){return missingThumbnail})),__webpack_require__.d(__webpack_exports__,"contrast",(function(){return contrast}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),placeholderImage=__webpack_require__("./.storybook/placeholderImage.ts"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Avatar",parameters:{notes:'# calcite-avatar\n\nThe avatar component provides a unique (but consistent) visual for a user. It\'s built\nto work with users returned from the ArcGIS REST API.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nThe JSON sample user below is returned from a [search for users](https://developers.arcgis.com/rest/users-groups-and-items/user-search.htm). You can create an avatar for Ron by passing these properties directly to the avatar component.\n\nWhen no thumbnail is provided, the avatar component will construct a useful placeholder, leveraging the user\'s information to construct a unique background-color with initials.\n\n**Note:** if your user is private, remember to append a token to the end of the thumbnail using the form `thumbnail.jpg?token=YOUR_LOGGED_IN_USER_TOKEN`.\n\n```json\n{\n  "username": "ron_swanson_pawnee",\n  "id": "a81470986eaeee1833b74b7d8abcd5b2",\n  "fullName": "Ron Swanson",\n  "firstName": "Ron",\n  "lastName": "Swanson",\n  "thumbnail": "mySelf.jpg",\n  ...\n}\n```\n\n```html\n<calcite-avatar\n  username="ron_swanson_pawnee"\n  user-id="a81470986eaeee1833b74b7d8abcd5b2"\n  full-name="Ron Swanson"\n  thumbnail="mySelf.jpg"\n>\n</calcite-avatar>\n```\n\n\n\n## Properties\n\n| Property    | Attribute   | Description                                                                       | Type                | Default     |\n| ----------- | ----------- | --------------------------------------------------------------------------------- | ------------------- | ----------- |\n| `fullName`  | `full-name` | Specifies the full name of the user.                                              | `string`            | `undefined` |\n| `scale`     | `scale`     | Specifies the size of the component.                                              | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `thumbnail` | `thumbnail` | Specifies the `src` to an image (remember to add a token if the user is private). | `string`            | `undefined` |\n| `userId`    | `user-id`   | Specifies the unique id of the user.                                              | `string`            | `undefined` |\n| `username`  | `username`  | Specifies the username of the user.                                               | `string`            | `undefined` |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-avatar --\x3e calcite-icon\n  style calcite-avatar fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-avatar
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    full-name="${Object(dist.text)("full-name","John Doe")}"
    username="${Object(dist.text)("username","jdoe")}"
    user-id="${Object(dist.text)("user-id","9a7c50e6b3ce4b859f7b31e302437164")}"
    thumbnail="${Object(dist.text)("thumbnail",Object(placeholderImage.a)({width:120,height:120}))}"
  >
  </calcite-avatar>
`}),missingThumbnail=function(){return formatting.a`
  <calcite-avatar
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    full-name="${Object(dist.text)("full-name","John Doe")}"
    username="${Object(dist.text)("username","jdoe")}"
    user-id="${Object(dist.text)("user-id","9a7c50e6b3ce4b859f7b31e302437164")}"
  >
  </calcite-avatar>
`},users=[{id:"52e44e112b1f429182515dba79b71eb8",name:"au"},{id:"1c863a764d6de370e220e7d3aeddd8a9",name:"bv"},{id:"a81470986eaeee1833b74b7d8abcd5b2",name:"cw"},{id:"9a7c50e6b3ce4b859f7b31e302437164",name:"dx"},{id:"7938de70b5d04956b098eedce1e3ba47",name:"exy"},{id:"98f64d6d4e124c6290d092a7998e96cb",name:"fz"},{id:"c977c075f3ad4dc2a840f3d2fff3d978",name:"ga"},{id:"25684463a00c449585dbb32a065f6b74",name:"hb"},{id:"770b011f40ba22321f686b04b803d325",name:"ic"},{id:"eea642e2a6f5a0b6c2e302cc664905c3",name:"jd"},{id:"19813ce4b4704b6e9fe2e79c34909ae4",name:"ke"},{id:"ad61de73b6d79446416bde1a18da87a7",name:"lf"},{id:"8a6fda51f21d40d588d07f1cf52b4890",name:"mg"},{id:"bd353ce54a5b40e7b3544d0cb454d465",name:"nh"},{id:"dfb1d98e54a244dca345dd85062e227c",name:"oi"},{id:"bcce092ebb474a369c9730f52106700c",name:"pj"},{id:"8542b186e5a64a90910486de32bced72",name:"qk"},{id:"8587853c1f544de6ae4133224db29736",name:"rl"},{id:"9de33a713bd84690bbc618e98ecf7567",name:"sm"},{id:"e85f7f72aa51b34f81660a0f4c6a4d80",name:"tn"}],contrastLight=users.map((function(user){return formatting.a`<calcite-avatar user-id="${user.id}" username="${user.name}"></calcite-avatar>`})).join(""),contrastDarkRTL=users.map((function(user){return formatting.a`<calcite-avatar
        dir="rtl"
        class="calcite-mode-dark"
        user-id="${user.id}"
        username="${user.name}"
      ></calcite-avatar>`})).join(""),contrast=function(){return formatting.a`
  <div>
    <style>
      .container {
        display: flex;
        width: 35%;
        justify-content: space-between;
        align-items: center;
        padding: 25px 0;
      }
      .use-case {
        flex: 1 0 21%;
        margin: 0 15px;
      }
    </style>
    <div class="container">
      <div class="use-case">${contrastLight}</div>
      <div class="use-case">${contrastDarkRTL}</div>
    </div>
  </div>
`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-avatar\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    full-name="${text("full-name", "John Doe")}"\n    username="${text("username", "jdoe")}"\n    user-id="${text("user-id", "9a7c50e6b3ce4b859f7b31e302437164")}"\n    thumbnail="${text("thumbnail", placeholderImage({ width: 120, height: 120 }))}"\n  >\n  </calcite-avatar>\n`'}},simple.parameters),missingThumbnail.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-avatar\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    full-name="${text("full-name", "John Doe")}"\n    username="${text("username", "jdoe")}"\n    user-id="${text("user-id", "9a7c50e6b3ce4b859f7b31e302437164")}"\n  >\n  </calcite-avatar>\n`'}},missingThumbnail.parameters),contrast.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div>\n    <style>\n      .container {\n        display: flex;\n        width: 35%;\n        justify-content: space-between;\n        align-items: center;\n        padding: 25px 0;\n      }\n      .use-case {\n        flex: 1 0 21%;\n        margin: 0 15px;\n      }\n    </style>\n    <div class="container">\n      <div class="use-case">${contrastLight}</div>\n      <div class="use-case">${contrastDarkRTL}</div>\n    </div>\n  </div>\n`'}},contrast.parameters)},"./src/components/block/block.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"withHeaderControl",(function(){return withHeaderControl})),__webpack_require__.d(__webpack_exports__,"withIconAndHeader",(function(){return withIconAndHeader})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"paddingDisabled_TestOnly",(function(){return paddingDisabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"contentCanTakeFullHeight_TestOnly",(function(){return contentCanTakeFullHeight_TestOnly})),__webpack_require__.d(__webpack_exports__,"contentSpacing_TestOnly",(function(){return contentSpacing_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),placeholderImage=__webpack_require__("./.storybook/placeholderImage.ts"),formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),createBlockAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Block",parameters:{notes:{block:'# calcite-block\n\nThe `calcite-block` component is intended for displaying a heading and content. Content can also include stacked, collapsible `calcite-block-section`s typically housed in a panel.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Always-open\n\nRenders a header and content that remains open - no collapsible option.\n\n```html\n<calcite-block heading="When your son becomes a priest, do you call him..." open>\n  <div>Father or Son?</div>\n</calcite-block>\n```\n\n\n### Basic\n\nRenders a basic, non-collapsible block.\n\n```html\n<calcite-block heading="Fruit" description="It\'s nature\'s candy"> </calcite-block>\n```\n\n\n### Collapsible\n\nRenders a header with a clickable icon to toggle the block open and closed.\n\n```html\n<calcite-block heading="Domestic pets" open collapsible>\n  <calcite-block-section text="puppers rool, kittehs drule"> </calcite-block-section>\n</calcite-block>\n```\n\n\n### Header-with-control\n\nRenders a header and control with a slot for adding a single HTML element (in the header).\n\n```html\n<calcite-block heading="This header" description="it has an input">\n  <calcite-action icon="pencil" text="edit" slot="control"></calcite-action>\n</calcite-block>\n```\n\n\n### Header-with-icon\n\nRenders a header and icon with the icon.\n\n```html\n<calcite-block heading="Icon\'t believe it!">\n  <div slot="icon">🤯</div>\n</calcite-block>\n```\n\n\n\n## Properties\n\n| Property               | Attribute       | Description                                                                              | Type                                                                          | Default     |\n| ---------------------- | --------------- | ---------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- | ----------- |\n| `collapsible`          | `collapsible`   | When `true`, the component is collapsible.                                               | `boolean`                                                                     | `false`     |\n| `description`          | `description`   | A description for the component, which displays below the heading.                       | `string`                                                                      | `undefined` |\n| `disabled`             | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity. | `boolean`                                                                     | `false`     |\n| `dragHandle`           | `drag-handle`   | When `true`, displays a drag handle in the header.                                       | `boolean`                                                                     | `false`     |\n| `heading` _(required)_ | `heading`       | The component header text.                                                               | `string`                                                                      | `undefined` |\n| `headingLevel`         | `heading-level` | Specifies the number at which section headings should start.                             | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`                                                  | `undefined` |\n| `loading`              | `loading`       | When `true`, a busy indicator is displayed.                                              | `boolean`                                                                     | `false`     |\n| `messageOverrides`     | --              | Use this property to override individual strings used by the component.                  | `{ collapse?: string; expand?: string; loading?: string; options?: string; }` | `undefined` |\n| `open`                 | `open`          | When `true`, expands the component and its contents.                                     | `boolean`                                                                     | `false`     |\n| `status`               | `status`        | Displays a status-related indicator icon.                                                | `"idle" \\| "invalid" \\| "valid"`                                              | `undefined` |\n\n\n## Events\n\n| Event                | Description                                   | Type                |\n| -------------------- | --------------------------------------------- | ------------------- |\n| `calciteBlockToggle` | Emits when the component\'s header is clicked. | `CustomEvent<void>` |\n\n\n## Slots\n\n| Slot                    | Description                                                                       |\n| ----------------------- | --------------------------------------------------------------------------------- |\n|                         | A slot for adding custom content.                                                 |\n| `"control"`             | A slot for adding a single HTML input element in a header.                        |\n| `"header-menu-actions"` | A slot for adding an overflow menu with `calcite-action`s inside a dropdown menu. |\n| `"icon"`                | A slot for adding a leading header icon with `calcite-icon`.                      |\n\n\n## CSS Custom Properties\n\n| Name                      | Description                                        |\n| ------------------------- | -------------------------------------------------- |\n| `--calcite-block-padding` | Specifies the padding of the block `default` slot. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-scrim](../scrim)\n- [calcite-icon](../icon)\n- [calcite-handle](../handle)\n- [calcite-loader](../loader)\n- [calcite-action-menu](../action-menu)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-block --\x3e calcite-scrim\n  calcite-block --\x3e calcite-icon\n  calcite-block --\x3e calcite-handle\n  calcite-block --\x3e calcite-loader\n  calcite-block --\x3e calcite-action-menu\n  calcite-scrim --\x3e calcite-loader\n  calcite-handle --\x3e calcite-icon\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-popover\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  style calcite-block fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',section:'# calcite-block-section\n\nThe `calcite-block-section` component is a child element of `calcite-block`. Sections can have their own header and content and can be toggled open or closed.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute        | Description                                                                                                 | Type                                      | Default     |\n| ------------------ | ---------------- | ----------------------------------------------------------------------------------------------------------- | ----------------------------------------- | ----------- |\n| `messageOverrides` | --               | Use this property to override individual strings used by the component.                                     | `{ collapse?: string; expand?: string; }` | `undefined` |\n| `open`             | `open`           | When `true`, expands the component and its contents.                                                        | `boolean`                                 | `false`     |\n| `status`           | `status`         | Displays a status-related indicator icon.                                                                   | `"idle" \\| "invalid" \\| "valid"`          | `undefined` |\n| `text`             | `text`           | The component header text.                                                                                  | `string`                                  | `undefined` |\n| `toggleDisplay`    | `toggle-display` | Specifies the component\'s toggle display -  `"button"` (selectable header), or  `"switch"` (toggle switch). | `"button" \\| "switch"`                    | `"button"`  |\n\n\n## Events\n\n| Event                       | Description                             | Type                |\n| --------------------------- | --------------------------------------- | ------------------- |\n| `calciteBlockSectionToggle` | Emits when the header has been clicked. | `CustomEvent<void>` |\n\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding custom content. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-switch](../switch)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-block-section --\x3e calcite-icon\n  calcite-block-section --\x3e calcite-switch\n  style calcite-block-section fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,group="block";return Object(utils.b)([{name:"heading",commit:function(){return this.value=Object(dist.text)("heading","Heading",group),delete this.build,this}},{name:"description",commit:function(){return this.value=Object(dist.text)("description","description",group),delete this.build,this}},{name:"open",commit:function(){return this.value=Object(dist.boolean)("open",!0,group),delete this.build,this}},{name:"collapsible",commit:function(){return this.value=Object(dist.boolean)("collapsible",!0,group),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1,group),delete this.build,this}},{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1,group),delete this.build,this}},{name:"heading-level",commit:function(){return this.value=Object(dist.number)("heading-level",2,{min:1,max:6,step:1},group),delete this.build,this}}],exceptions)}),createSectionAttributes=function(){var group="section (animals)",toggleDisplayOptions=["button","switch"];return[{name:"text",value:Object(dist.text)("text","Animals",group)},{name:"open",value:Object(dist.boolean)("open",!0,group)},{name:"toggle-display",value:Object(dist.select)("toggleDisplay",toggleDisplayOptions,toggleDisplayOptions[0],group)}]},simple=function(){return Object(utils.a)("calcite-block",createBlockAttributes(),formatting.a`
      ${Object(utils.a)("calcite-block-section",createSectionAttributes(),`<img alt="demo" src="${Object(placeholderImage.a)({width:320,height:240})}" />`)}

      <calcite-block-section text="Nature" open>
        <img alt="demo" src="${Object(placeholderImage.a)({width:320,height:240})}" />
      </calcite-block-section>
    `)},withHeaderControl=function(){return Object(utils.a)("calcite-block",createBlockAttributes({exceptions:["open","collapsible"]}),'<label slot="control">test <input placeholder="I\'m a header control"/></label>')},withIconAndHeader=function(){return Object(utils.a)("calcite-block",createBlockAttributes({exceptions:["open","collapsible"]}),'<div slot="icon">✅</div>')},disabled_TestOnly=function(){return formatting.a`<calcite-block
  heading="heading"
  description="description"
  open
  collapsible
  disabled
>
  <calcite-block-section text="Nature" open>
    <img alt="demo" src="${Object(placeholderImage.a)({width:320,height:240})}" />
  </calcite-block-section>
</calcite-block>`},paddingDisabled_TestOnly=function(){return formatting.a` <calcite-panel heading="Properties">
  <calcite-block
    heading="Example block heading"
    description="example summary heading"
    collapsible
    open
    style="--calcite-block-padding: 0;"
  >
    <div>calcite components ninja</div>
  </calcite-block>
</calcite-panel>`},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-block",createBlockAttributes({exceptions:["dir"]}).concat({name:"class",value:"calcite-mode-dark"},{name:"dir",value:"rtl"}),formatting.a`
      ${Object(utils.a)("calcite-block-section",createSectionAttributes(),`<img alt="demo" src="${Object(placeholderImage.a)({width:320,height:240})}" />`)}

      <calcite-block-section text="Nature" open>
        <img alt="demo" src="${Object(placeholderImage.a)({width:320,height:240})}" />
      </calcite-block-section>
    `)},contentCanTakeFullHeight_TestOnly=function(){return formatting.a`<calcite-block open heading="Heading" description="description" style="height: 250px">
    <div style="background: red; height: 100%;">should take full width of the content area</div>
  </calcite-block>`},contentSpacing_TestOnly=function(){return formatting.a`
    <calcite-block heading="Block heading" open>
      <div>Some text that has padding built in</div>
    </calcite-block>
  `};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-block",\n    createBlockAttributes(),\n    html`\n      ${create(\n        "calcite-block-section",\n        createSectionAttributes(),\n        `<img alt="demo" src="${placeholderImage({ width: 320, height: 240 })}" />`\n      )}\n\n      <calcite-block-section text="Nature" open>\n        <img alt="demo" src="${placeholderImage({ width: 320, height: 240 })}" />\n      </calcite-block-section>\n    `\n  )'}},simple.parameters),withHeaderControl.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-block",\n    createBlockAttributes({ exceptions: ["open", "collapsible"] }),\n    `<label slot="control">test <input placeholder="I\'m a header control"/></label>`\n  )'}},withHeaderControl.parameters),withIconAndHeader.parameters=Object.assign({storySource:{source:'(): string =>\n  create("calcite-block", createBlockAttributes({ exceptions: ["open", "collapsible"] }), `<div slot="icon">✅</div>`)'}},withIconAndHeader.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-block\n  heading="heading"\n  description="description"\n  open\n  collapsible\n  disabled\n>\n  <calcite-block-section text="Nature" open>\n    <img alt="demo" src="${placeholderImage({ width: 320, height: 240 })}" />\n  </calcite-block-section>\n</calcite-block>`'}},disabled_TestOnly.parameters),paddingDisabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-panel heading="Properties">\n  <calcite-block\n    heading="Example block heading"\n    description="example summary heading"\n    collapsible\n    open\n    style="--calcite-block-padding: 0;"\n  >\n    <div>calcite components ninja</div>\n  </calcite-block>\n</calcite-panel>`'}},paddingDisabled_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-block",\n    createBlockAttributes({ exceptions: ["dir"] }).concat(\n      {\n        name: "class",\n        value: "calcite-mode-dark"\n      },\n      { name: "dir", value: "rtl" }\n    ),\n    html`\n      ${create(\n        "calcite-block-section",\n        createSectionAttributes(),\n        `<img alt="demo" src="${placeholderImage({ width: 320, height: 240 })}" />`\n      )}\n\n      <calcite-block-section text="Nature" open>\n        <img alt="demo" src="${placeholderImage({ width: 320, height: 240 })}" />\n      </calcite-block-section>\n    `\n  )'}},darkModeRTL_TestOnly.parameters),contentCanTakeFullHeight_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-block open heading="Heading" description="description" style="height: 250px">\n    <div style="background: red; height: 100%;">should take full width of the content area</div>\n  </calcite-block>`'}},contentCanTakeFullHeight_TestOnly.parameters),contentSpacing_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`\n    <calcite-block heading="Block heading" open>\n      <div>Some text that has padding built in</div>\n    </calcite-block>\n  `'}},contentSpacing_TestOnly.parameters)},"./src/components/button/button.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"withIconStart",(function(){return withIconStart})),__webpack_require__.d(__webpack_exports__,"withIconEnd",(function(){return withIconEnd})),__webpack_require__.d(__webpack_exports__,"withIconStartAndIconEnd",(function(){return withIconStartAndIconEnd})),__webpack_require__.d(__webpack_exports__,"setWidthContainer",(function(){return setWidthContainer})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"withIconStartEmpty_TestOnly",(function(){return withIconStartEmpty_TestOnly})),__webpack_require__.d(__webpack_exports__,"withIconEndEmpty_TestOnly",(function(){return withIconEndEmpty_TestOnly})),__webpack_require__.d(__webpack_exports__,"sideBySide_TestOnly",(function(){return sideBySide_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"outlineNeutralBorderColor_TestOnly",(function(){return outlineNeutralBorderColor_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Buttons/Button",parameters:{notes:'# calcite-button\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-button icon-start="plus">Go!</calcite-button>\n```\n\n\n### Focusing\n\nYou can programmatically focus a `calcite-button` with the `setFocus()` method:\n\n```html\n<div onclick="document.querySelector(\'#my-button\').setFocus()">Focus!</div>\n```\n\n\n### Internals\n\nAny additional attributes set on `<calcite-button>` are passed to the internal `<a>` or `<button>` tag. For example, the first button below sets `target="_blank` On the internal `<a>`. The second button sets `type="submit"` on the internal `<button>`.\n\n- ```html\n  <calcite-button href="https://github.com/esri/calcite-components" target="_blank">\n    Calcite Components on GitHub\n  </calcite-button>\n\n  <calcite-button type="submit">Submit</calcite-button>\n  ```\n\n\n### With-icons\n\n```html\n<calcite-button appearance="solid" icon-start="arrow-left">Back</calcite-button>\n<calcite-button icon-end="map" kind="danger">Delete Map Options</calcite-button>\n<calcite-button icon-end="plus" appearance="outline-fill" kind="inverse">Add to favorites</calcite-button>\n```\n\n\n### With-loader-disabled\n\n```html\n<calcite-button loading kind="neutral">Fetching data...</calcite-button>\n<calcite-button disabled>Can\'t touch this</calcite-button>\n```\n\n\n### Within-form\n\n```html\n<form name="sign-up">\n  <calcite-label>\n    First name\n    <calcite-input name="first-name" required value="Jane"></calcite-input>\n  </calcite-label>\n  <calcite-button type="reset">I should reset the form (type reset)</calcite-button>\n  <calcite-button type="button">I should not submit the form (type button)</calcite-button>\n  <calcite-button>Submit</calcite-button>\n</form>\n```\n\n\n\n## Properties\n\n| Property           | Attribute       | Description                                                                                                                                                | Type                                                                                                        | Default     |\n| ------------------ | --------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------- | ----------- |\n| `alignment`        | `alignment`     | Specifies the alignment of the component\'s elements.                                                                                                       | `"center" \\| "end" \\| "icon-end-space-between" \\| "icon-start-space-between" \\| "space-between" \\| "start"` | `"center"`  |\n| `appearance`       | `appearance`    | Specifies the appearance style of the component.                                                                                                           | `"outline" \\| "outline-fill" \\| "solid" \\| "transparent"`                                                   | `"solid"`   |\n| `disabled`         | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                   | `boolean`                                                                                                   | `false`     |\n| `form`             | `form`          | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any. | `string`                                                                                                    | `undefined` |\n| `href`             | `href`          | Specifies the URL of the linked resource, which can be set as an absolute or relative path.                                                                | `string`                                                                                                    | `undefined` |\n| `iconEnd`          | `icon-end`      | Specifies an icon to display at the end of the component.                                                                                                  | `string`                                                                                                    | `undefined` |\n| `iconFlipRtl`      | `icon-flip-rtl` | Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`"rtl"`).                                                | `"both" \\| "end" \\| "start"`                                                                                | `undefined` |\n| `iconStart`        | `icon-start`    | Specifies an icon to display at the start of the component.                                                                                                | `string`                                                                                                    | `undefined` |\n| `kind`             | `kind`          | Specifies the kind of the component (will apply to border and background if applicable).                                                                   | `"brand" \\| "danger" \\| "inverse" \\| "neutral"`                                                             | `"brand"`   |\n| `label`            | `label`         | Accessible name for the component.                                                                                                                         | `string`                                                                                                    | `undefined` |\n| `loading`          | `loading`       | When `true`, a busy indicator is displayed and interaction is disabled.                                                                                    | `boolean`                                                                                                   | `false`     |\n| `messageOverrides` | --              | Use this property to override individual strings used by the component.                                                                                    | `{ loading?: string; }`                                                                                     | `undefined` |\n| `name`             | `name`          | Specifies the name of the component on form submission.                                                                                                    | `string`                                                                                                    | `undefined` |\n| `rel`              | `rel`           | Defines the relationship between the `href` value and the current document.                                                                                | `string`                                                                                                    | `undefined` |\n| `round`            | `round`         | When `true`, adds a round style to the component.                                                                                                          | `boolean`                                                                                                   | `false`     |\n| `scale`            | `scale`         | Specifies the size of the component.                                                                                                                       | `"l" \\| "m" \\| "s"`                                                                                         | `"m"`       |\n| `splitChild`       | `split-child`   | Specifies if the component is a child of a `calcite-split-button`.                                                                                         | `"primary" \\| "secondary" \\| boolean`                                                                       | `false`     |\n| `target`           | `target`        | Specifies where to open the linked document defined in the `href` property.                                                                                | `string`                                                                                                    | `undefined` |\n| `type`             | `type`          | Specifies the default behavior of the button.                                                                                                              | `string`                                                                                                    | `"button"`  |\n| `width`            | `width`         | Specifies the width of the component.                                                                                                                      | `"auto" \\| "full" \\| "half"`                                                                                | `"auto"`    |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description             |\n| ---- | ----------------------- |\n|      | A slot for adding text. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-color-picker](../color-picker)\n - [calcite-fab](../fab)\n - [calcite-inline-editable](../inline-editable)\n - [calcite-split-button](../split-button)\n\n### Depends on\n\n- [calcite-loader](../loader)\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-button --\x3e calcite-loader\n  calcite-button --\x3e calcite-icon\n  calcite-color-picker --\x3e calcite-button\n  calcite-fab --\x3e calcite-button\n  calcite-inline-editable --\x3e calcite-button\n  calcite-split-button --\x3e calcite-button\n  style calcite-button fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-button
    appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill","transparent"],"solid")}"
    kind="${Object(dist.select)("kind",["brand","danger","inverse","neutral"],"brand")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("round",!1)}
    href="${Object(dist.text)("href","")}"
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("disabled",!1)}
    width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
  >
    ${Object(dist.text)("text","button text here")}
  </calcite-button>
`}),withIconStart=function(){return formatting.a`
  <calcite-button
    alignment="${Object(dist.select)("alignment",["start","end","center","space-between","icon-start-space-between","icon-end-space-between"],"center")}"
    appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill","transparent"],"solid")}"
    kind="${Object(dist.select)("kind",["brand","danger","inverse","neutral"],"brand")}"
    icon-start="${Object(dist.select)("icon-start",helpers.b,helpers.b[0])}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("round",!1)}
    href="${Object(dist.text)("href","")}"
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    ${Object(dist.text)("text","button text here")}
  </calcite-button>
`};withIconStart.storyName="With icon-start";var withIconEnd=function(){return formatting.a`
  <calcite-button
    alignment="${Object(dist.select)("alignment",["start","end","center","space-between","icon-start-space-between","icon-end-space-between"],"center")}"
    appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill","transparent"],"solid")}"
    icon-end="${Object(dist.select)("icon-end",helpers.b,helpers.b[0])}"
    kind="${Object(dist.select)("kind",["brand","danger","inverse","neutral"],"brand")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("round",!1)}
    href="${Object(dist.text)("href","")}"
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("disabled",!1)}
    width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
  >
    ${Object(dist.text)("text","button text here")}
  </calcite-button>
`};withIconEnd.storyName="With icon-end";var withIconStartAndIconEnd=function(){return formatting.a`
  <calcite-button
    alignment="${Object(dist.select)("alignment",["start","end","center","space-between","icon-start-space-between","icon-end-space-between"],"center")}"
    appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill","transparent"],"solid")}"
    kind="${Object(dist.select)("kind",["brand","danger","inverse","neutral"],"brand")}"
    icon-start="${Object(dist.select)("icon-start",helpers.b,helpers.b[0])}"
    icon-end="${Object(dist.select)("icon-end",helpers.b,helpers.b[0])}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("round",!1)}
    href="${Object(dist.text)("href","")}"
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("disabled",!1)}
    width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
  >
    ${Object(dist.text)("text","button text here")}
  </calcite-button>
`};withIconStartAndIconEnd.storyName="With icon-start and icon-end";var setWidthContainer=function(){return formatting.a`
  <div style="width: 480px; max-width: 100%; background-color: #fff">
    <calcite-button
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      icon-start="${Object(dist.select)("icon-start",helpers.b,helpers.b[0])}"
    >
      ${Object(dist.text)("text","button text here")}
    </calcite-button>
  </div>
`},disabled_TestOnly=function(){return formatting.a`<calcite-button disabled>disabled</calcite-button>`},withIconStartEmpty_TestOnly=function(){return formatting.a` <calcite-button icon-start> Button </calcite-button>`};withIconStartEmpty_TestOnly.storyName="With icon-start set to empty";var withIconEndEmpty_TestOnly=function(){return formatting.a` <calcite-button icon-end> Button </calcite-button>`};withIconEndEmpty_TestOnly.storyName="With icon-end set to empty";var sideBySide_TestOnly=function(){return formatting.a`
  <div style="width: 300px; max-width: 100%; display: flex; flex-direction: row; background-color: #fff">
    <calcite-button
      width="half"
      appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill","transparent"],"outline-fill")}"
      kind="${Object(dist.select)("kind",["brand","danger","inverse","neutral"],"brand")}"
    >
      ${Object(dist.text)("text","Back")}
    </calcite-button>
    <calcite-button
      width="half"
      appearance="${Object(dist.select)("appearance-2",["solid","outline","outline-fill","transparent"],"solid")}"
      kind="${Object(dist.select)("kind-2",["brand","danger","inverse","neutral"],"brand")}"
      icon-start="${Object(dist.select)("icon-start",helpers.b,helpers.b[0])}"
    >
      ${Object(dist.text)("text-2","Some long string")}
    </calcite-button>
  </div>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-button
    class="calcite-mode-dark"
    dir="rtl"
    appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill","transparent"],"solid")}"
    kind="${Object(dist.select)("kind",["brand","danger","inverse","neutral"],"brand")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("round",!1)}
    href="${Object(dist.text)("href","")}"
    ${Object(helpers.a)("loading",!1)}
    ${Object(helpers.a)("disabled",!1)}
    icon-start="${Object(dist.select)("icon-start",helpers.b,helpers.b[0])}"
    icon-end="${Object(dist.select)("icon-end",helpers.b,helpers.b[0])}"
  >
    ${Object(dist.text)("text","button text here")}
  </calcite-button>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var outlineNeutralBorderColor_TestOnly=function(){return formatting.a`<calcite-button appearance="outline" kind="neutral">Test</calcite-button>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-button\n    appearance="${select("appearance", ["solid", "outline", "outline-fill", "transparent"], "solid")}"\n    kind="${select("kind", ["brand", "danger", "inverse", "neutral"], "brand")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("round", false)}\n    href="${text("href", "")}"\n    ${boolean("loading", false)}\n    ${boolean("disabled", false)}\n    width="${select("width", ["auto", "half", "full"], "auto")}"\n  >\n    ${text("text", "button text here")}\n  </calcite-button>\n`'}},simple.parameters),withIconStart.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-button\n    alignment="${select(\n      "alignment",\n      ["start", "end", "center", "space-between", "icon-start-space-between", "icon-end-space-between"],\n      "center"\n    )}"\n    appearance="${select("appearance", ["solid", "outline", "outline-fill", "transparent"], "solid")}"\n    kind="${select("kind", ["brand", "danger", "inverse", "neutral"], "brand")}"\n    icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("round", false)}\n    href="${text("href", "")}"\n    ${boolean("loading", false)}\n    ${boolean("disabled", false)}\n  >\n    ${text("text", "button text here")}\n  </calcite-button>\n`'}},withIconStart.parameters),withIconEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-button\n    alignment="${select(\n      "alignment",\n      ["start", "end", "center", "space-between", "icon-start-space-between", "icon-end-space-between"],\n      "center"\n    )}"\n    appearance="${select("appearance", ["solid", "outline", "outline-fill", "transparent"], "solid")}"\n    icon-end="${select("icon-end", iconNames, iconNames[0])}"\n    kind="${select("kind", ["brand", "danger", "inverse", "neutral"], "brand")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("round", false)}\n    href="${text("href", "")}"\n    ${boolean("loading", false)}\n    ${boolean("disabled", false)}\n    width="${select("width", ["auto", "half", "full"], "auto")}"\n  >\n    ${text("text", "button text here")}\n  </calcite-button>\n`'}},withIconEnd.parameters),withIconStartAndIconEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-button\n    alignment="${select(\n      "alignment",\n      ["start", "end", "center", "space-between", "icon-start-space-between", "icon-end-space-between"],\n      "center"\n    )}"\n    appearance="${select("appearance", ["solid", "outline", "outline-fill", "transparent"], "solid")}"\n    kind="${select("kind", ["brand", "danger", "inverse", "neutral"], "brand")}"\n    icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    icon-end="${select("icon-end", iconNames, iconNames[0])}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("round", false)}\n    href="${text("href", "")}"\n    ${boolean("loading", false)}\n    ${boolean("disabled", false)}\n    width="${select("width", ["auto", "half", "full"], "auto")}"\n  >\n    ${text("text", "button text here")}\n  </calcite-button>\n`'}},withIconStartAndIconEnd.parameters),setWidthContainer.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 480px; max-width: 100%; background-color: #fff">\n    <calcite-button\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    >\n      ${text("text", "button text here")}\n    </calcite-button>\n  </div>\n`'}},setWidthContainer.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:"(): string => html`<calcite-button disabled>disabled</calcite-button>`"}},disabled_TestOnly.parameters),withIconStartEmpty_TestOnly.parameters=Object.assign({storySource:{source:"(): string => html` <calcite-button icon-start> Button </calcite-button>`"}},withIconStartEmpty_TestOnly.parameters),withIconEndEmpty_TestOnly.parameters=Object.assign({storySource:{source:"(): string => html` <calcite-button icon-end> Button </calcite-button>`"}},withIconEndEmpty_TestOnly.parameters),sideBySide_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 300px; max-width: 100%; display: flex; flex-direction: row; background-color: #fff">\n    <calcite-button\n      width="half"\n      appearance="${select("appearance", ["solid", "outline", "outline-fill", "transparent"], "outline-fill")}"\n      kind="${select("kind", ["brand", "danger", "inverse", "neutral"], "brand")}"\n    >\n      ${text("text", "Back")}\n    </calcite-button>\n    <calcite-button\n      width="half"\n      appearance="${select("appearance-2", ["solid", "outline", "outline-fill", "transparent"], "solid")}"\n      kind="${select("kind-2", ["brand", "danger", "inverse", "neutral"], "brand")}"\n      icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    >\n      ${text("text-2", "Some long string")}\n    </calcite-button>\n  </div>\n`'}},sideBySide_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-button\n    class="calcite-mode-dark"\n    dir="rtl"\n    appearance="${select("appearance", ["solid", "outline", "outline-fill", "transparent"], "solid")}"\n    kind="${select("kind", ["brand", "danger", "inverse", "neutral"], "brand")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("round", false)}\n    href="${text("href", "")}"\n    ${boolean("loading", false)}\n    ${boolean("disabled", false)}\n    icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    icon-end="${select("icon-end", iconNames, iconNames[0])}"\n  >\n    ${text("text", "button text here")}\n  </calcite-button>\n`'}},darkModeRTL_TestOnly.parameters),outlineNeutralBorderColor_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-button appearance="outline" kind="neutral">Test</calcite-button>`'}},outlineNeutralBorderColor_TestOnly.parameters)},"./src/components/card/card.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"simpleWithFooterLinks",(function(){return simpleWithFooterLinks})),__webpack_require__.d(__webpack_exports__,"simpleWithFooterButton",(function(){return simpleWithFooterButton})),__webpack_require__.d(__webpack_exports__,"simpleWithFooterTextButtonTooltip_NoTest",(function(){return simpleWithFooterTextButtonTooltip_NoTest})),__webpack_require__.d(__webpack_exports__,"thumbnail",(function(){return thumbnail})),__webpack_require__.d(__webpack_exports__,"thumbnailRounded",(function(){return thumbnailRounded})),__webpack_require__.d(__webpack_exports__,"headerDoesNotOverlapWithCheckbox_TestOnly",(function(){return headerDoesNotOverlapWithCheckbox_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),placeholderImage=__webpack_require__("./.storybook/placeholderImage.ts"),formatting=__webpack_require__("./support/formatting.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),helpers=__webpack_require__("./.storybook/helpers.ts"),resources=__webpack_require__("./.storybook/resources.ts"),createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Card",parameters:{notes:'# calcite-card\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<div style="width:260px">\n  <calcite-card>\n    <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>\n    <span slot="subtitle">\n      A great example of a study description that might wrap to a line or two, but isn\'t overly verbose.\n    </span>\n  </calcite-card>\n</div>\n```\n\n\n\n## Properties\n\n| Property            | Attribute            | Description                                                             | Type                                                             | Default         |\n| ------------------- | -------------------- | ----------------------------------------------------------------------- | ---------------------------------------------------------------- | --------------- |\n| `loading`           | `loading`            | When `true`, a busy indicator is displayed.                             | `boolean`                                                        | `false`         |\n| `messageOverrides`  | --                   | Use this property to override individual strings used by the component. | `{ select?: string; deselect?: string; loading?: string; }`      | `undefined`     |\n| `selectable`        | `selectable`         | When `true`, the component is selectable.                               | `boolean`                                                        | `false`         |\n| `selected`          | `selected`           | When `true`, the component is selected.                                 | `boolean`                                                        | `false`         |\n| `thumbnailPosition` | `thumbnail-position` | Sets the placement of the thumbnail defined in the `thumbnail` slot.    | `"block-end" \\| "block-start" \\| "inline-end" \\| "inline-start"` | `"block-start"` |\n\n\n## Events\n\n| Event               | Description                                                      | Type                |\n| ------------------- | ---------------------------------------------------------------- | ------------------- |\n| `calciteCardSelect` | Fires when `selectable` is `true` and the component is selected. | `CustomEvent<void>` |\n\n\n## Slots\n\n| Slot             | Description                                      |\n| ---------------- | ------------------------------------------------ |\n|                  | A slot for adding subheader/description content. |\n| `"footer-end"`   | A slot for adding a trailing footer.             |\n| `"footer-start"` | A slot for adding a leading footer.              |\n| `"subtitle"`     | A slot for adding a subtitle or short summary.   |\n| `"thumbnail"`    | A slot for adding a thumbnail to the component.  |\n| `"title"`        | A slot for adding a title.                       |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-loader](../loader)\n- [calcite-label](../label)\n- [calcite-checkbox](../checkbox)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-card --\x3e calcite-loader\n  calcite-card --\x3e calcite-label\n  calcite-card --\x3e calcite-checkbox\n  style calcite-card fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,logicalFlowPosition=resources.a.logicalFlowPosition;return Object(utils.b)([{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1),delete this.build,this}},{name:"selected",commit:function(){return this.value=Object(dist.boolean)("selected",!1),delete this.build,this}},{name:"selectable",commit:function(){return this.value=Object(dist.boolean)("selectable",!1),delete this.build,this}},{name:"thumbnail-position",commit:function(){return this.value=Object(dist.select)("thumbnail-position",logicalFlowPosition.values,logicalFlowPosition.defaultValue),delete this.build,this}}],exceptions)}),titleHtml=formatting.a`
  <h3 slot="title">ArcGIS Online: Gallery and Organization pages</h3>
  <span slot="subtitle">
    A great example of a study description that might wrap to a line or two, but isn't overly verbose.
  </span>
`,footerButtonHtml=formatting.a` <calcite-button slot="footer-start" width="full">Go</calcite-button> `,footerStartTextHtml=formatting.a`<span slot="footer-start">Nov 25, 2018</span>`,footerLinksHtml=formatting.a`
  <calcite-link class="calcite-mode-dark" slot="footer-start">Lead footer</calcite-link>
  <calcite-link class="calcite-mode-dark" slot="footer-end">Trail footer</calcite-link>
`,thumbnailHtml=formatting.a`<img
  alt="thumbnail"
  slot="thumbnail"
  src="${Object(placeholderImage.a)({width:380,height:180})}"
  style="width: 380px;"
/> `,footerEndButtonsHtml=formatting.a`
  <div slot="footer-end">
    <calcite-button id="card-icon-test-6" scale="s" appearance="transparent" kind="neutral" icon-start="circle">
    </calcite-button>
    <calcite-button id="card-icon-test-7" scale="s" appearance="transparent" kind="neutral" icon-start="circle">
    </calcite-button>
  </div>
`,tooltipHtml=formatting.a`
  <calcite-tooltip placement="top-start" reference-element="card-icon-test-6">Configure</calcite-tooltip>
  <calcite-tooltip placement="bottom-start" reference-element="card-icon-test-7">Delete</calcite-tooltip>
`,simple=function(){return formatting.a` <div style="width: 260px">
  ${Object(utils.a)("calcite-card",createAttributes(),titleHtml)}
</div>`},simpleWithFooterLinks=function(){return formatting.a`
  <div style="width:260px">${Object(utils.a)("calcite-card",createAttributes(),formatting.a`${titleHtml}${footerLinksHtml}`)}</div>
`},simpleWithFooterButton=function(){return formatting.a`
  <div style="width:260px">${Object(utils.a)("calcite-card",createAttributes(),formatting.a`${titleHtml}${footerButtonHtml}`)}</div>
`},simpleWithFooterTextButtonTooltip_NoTest=function(){return formatting.a`
  <div style="width:260px">
    ${Object(utils.a)("calcite-card",createAttributes(),formatting.a`${titleHtml}${footerStartTextHtml}${footerEndButtonsHtml}`)}
  </div>
  ${tooltipHtml}
`};simpleWithFooterTextButtonTooltip_NoTest.parameters={chromatic:{disableSnapshot:!0}};var thumbnail=function(){return formatting.a`
  <div style="width:260px">
    ${Object(utils.a)("calcite-card",createAttributes(),formatting.a`
        ${thumbnailHtml}
        <h3 slot="title">Portland Businesses</h3>
        <span slot="subtitle"
          >by
          <calcite-link href="">example_user</calcite-link>
        </span>
        <div>
          Created: Apr 22, 2019
          <br />
          Updated: Dec 9, 2019
          <br />
          View Count: 0
        </div>
        <calcite-button
          slot="footer-start"
          kind="neutral"
          scale="s"
          id="card-icon-test-1"
          icon-start="circle"
        ></calcite-button>
        <div slot="footer-end">
          <calcite-button scale="s" kind="neutral" id="card-icon-test-2" icon-start="circle"></calcite-button>
          <calcite-button scale="s" kind="neutral" id="card-icon-test-3" icon-start="circle"></calcite-button>
          <calcite-dropdown type="hover">
            <calcite-button
              id="card-icon-test-5"
              slot="trigger"
              scale="s"
              kind="neutral"
              icon-start="circle"
            ></calcite-button>
            <calcite-dropdown-group selection-mode="none">
              <calcite-dropdown-item>View details</calcite-dropdown-item>
              <calcite-dropdown-item>Duplicate</calcite-dropdown-item>
              <calcite-dropdown-item>Delete</calcite-dropdown-item>
            </calcite-dropdown-group>
          </calcite-dropdown>
        </div>
      `)}
    <calcite-tooltip placement="bottom-start" reference-element="card-icon-test-1"
      >My great tooltip example
    </calcite-tooltip>
    <calcite-tooltip placement="bottom-start" reference-element="card-icon-test-2">Sharing level: 2 </calcite-tooltip>
    <calcite-tooltip placement="top-end" reference-element="card-icon-test-3">More... </calcite-tooltip>
    <calcite-tooltip placement="top-start" reference-element="card-icon-test-5">More options </calcite-tooltip>
  </div>
`},thumbnailRounded=function(){return formatting.a`
  <div id="card-container" style="width:260px;">
    <style>
      calcite-card {
        --calcite-border-radius-base: 12px;
      }
    </style>
    <calcite-card>
      ${thumbnailHtml}
      <h3 slot="title">Portland Businesses</h3>
      <span slot="subtitle"
        >by
        <calcite-link href="">example_user</calcite-link>
      </span>
      <div>
        Created: Apr 22, 2019
        <br />
        Updated: Dec 9, 2019
        <br />
        View Count: 0
      </div>
      <calcite-button
        slot="footer-start"
        kind="neutral"
        scale="s"
        id="card-icon-test-1"
        icon-start="circle"
      ></calcite-button>
    </calcite-card>
  </div>
`},headerDoesNotOverlapWithCheckbox_TestOnly=function(){return formatting.a`
  <calcite-card selectable style="width:260px">
    <h3 slot="title">Pokem ipsum dolor sit amet Skitty Hoothoot</h3>
    <span slot="subtitle"
      >Pika-pi Soul Badge Zoroark Starly Spoink Diglett Rotom. Water Kyogre Hitmontop Rampardos</span
    >
    <p>
      Team Rocket Whimsicott Snover Duskull Servine Kakuna Bellsprout. Scratch Shelgon Oddish Hitmonchan Quagsire Earth
      Badge Leaf Green. Pika-pi Bonsly Rare Candy Seadra blast off at the speed of light Shellos Kirlia. Celadon City
      Seviper Omanyte Espeon Body Slam Victini Darumaka. Normal Krookodile Junichi Masuda Machoke Body Slam Zigzagoon to
      protect the world from devastation.
    </p>
  </calcite-card>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <div dir="rtl" style="width:260px;">
    <calcite-card>${thumbnailHtml}${titleHtml}${footerStartTextHtml}${footerEndButtonsHtml}</calcite-card>
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => html` <div style="width: 260px">\n  ${create("calcite-card", createAttributes(), titleHtml)}\n</div>`'}},simple.parameters),simpleWithFooterLinks.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">${create("calcite-card", createAttributes(), html`${titleHtml}${footerLinksHtml}`)}</div>\n`'}},simpleWithFooterLinks.parameters),simpleWithFooterButton.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">${create("calcite-card", createAttributes(), html`${titleHtml}${footerButtonHtml}`)}</div>\n`'}},simpleWithFooterButton.parameters),simpleWithFooterTextButtonTooltip_NoTest.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    ${create("calcite-card", createAttributes(), html`${titleHtml}${footerStartTextHtml}${footerEndButtonsHtml}`)}\n  </div>\n  ${tooltipHtml}\n`'}},simpleWithFooterTextButtonTooltip_NoTest.parameters),thumbnail.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:260px">\n    ${create(\n      "calcite-card",\n      createAttributes(),\n      html`\n        ${thumbnailHtml}\n        <h3 slot="title">Portland Businesses</h3>\n        <span slot="subtitle"\n          >by\n          <calcite-link href="">example_user</calcite-link>\n        </span>\n        <div>\n          Created: Apr 22, 2019\n          <br />\n          Updated: Dec 9, 2019\n          <br />\n          View Count: 0\n        </div>\n        <calcite-button\n          slot="footer-start"\n          kind="neutral"\n          scale="s"\n          id="card-icon-test-1"\n          icon-start="circle"\n        ></calcite-button>\n        <div slot="footer-end">\n          <calcite-button scale="s" kind="neutral" id="card-icon-test-2" icon-start="circle"></calcite-button>\n          <calcite-button scale="s" kind="neutral" id="card-icon-test-3" icon-start="circle"></calcite-button>\n          <calcite-dropdown type="hover">\n            <calcite-button\n              id="card-icon-test-5"\n              slot="trigger"\n              scale="s"\n              kind="neutral"\n              icon-start="circle"\n            ></calcite-button>\n            <calcite-dropdown-group selection-mode="none">\n              <calcite-dropdown-item>View details</calcite-dropdown-item>\n              <calcite-dropdown-item>Duplicate</calcite-dropdown-item>\n              <calcite-dropdown-item>Delete</calcite-dropdown-item>\n            </calcite-dropdown-group>\n          </calcite-dropdown>\n        </div>\n      `\n    )}\n    <calcite-tooltip placement="bottom-start" reference-element="card-icon-test-1"\n      >My great tooltip example\n    </calcite-tooltip>\n    <calcite-tooltip placement="bottom-start" reference-element="card-icon-test-2">Sharing level: 2 </calcite-tooltip>\n    <calcite-tooltip placement="top-end" reference-element="card-icon-test-3">More... </calcite-tooltip>\n    <calcite-tooltip placement="top-start" reference-element="card-icon-test-5">More options </calcite-tooltip>\n  </div>\n`'}},thumbnail.parameters),thumbnailRounded.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div id="card-container" style="width:260px;">\n    <style>\n      calcite-card {\n        --calcite-border-radius-base: 12px;\n      }\n    </style>\n    <calcite-card>\n      ${thumbnailHtml}\n      <h3 slot="title">Portland Businesses</h3>\n      <span slot="subtitle"\n        >by\n        <calcite-link href="">example_user</calcite-link>\n      </span>\n      <div>\n        Created: Apr 22, 2019\n        <br />\n        Updated: Dec 9, 2019\n        <br />\n        View Count: 0\n      </div>\n      <calcite-button\n        slot="footer-start"\n        kind="neutral"\n        scale="s"\n        id="card-icon-test-1"\n        icon-start="circle"\n      ></calcite-button>\n    </calcite-card>\n  </div>\n`'}},thumbnailRounded.parameters),headerDoesNotOverlapWithCheckbox_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-card selectable style="width:260px">\n    <h3 slot="title">Pokem ipsum dolor sit amet Skitty Hoothoot</h3>\n    <span slot="subtitle"\n      >Pika-pi Soul Badge Zoroark Starly Spoink Diglett Rotom. Water Kyogre Hitmontop Rampardos</span\n    >\n    <p>\n      Team Rocket Whimsicott Snover Duskull Servine Kakuna Bellsprout. Scratch Shelgon Oddish Hitmonchan Quagsire Earth\n      Badge Leaf Green. Pika-pi Bonsly Rare Candy Seadra blast off at the speed of light Shellos Kirlia. Celadon City\n      Seviper Omanyte Espeon Body Slam Victini Darumaka. Normal Krookodile Junichi Masuda Machoke Body Slam Zigzagoon to\n      protect the world from devastation.\n    </p>\n  </calcite-card>\n`'}},headerDoesNotOverlapWithCheckbox_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div dir="rtl" style="width:260px;">\n    <calcite-card>${thumbnailHtml}${titleHtml}${footerStartTextHtml}${footerEndButtonsHtml}</calcite-card>\n  </div>\n`'}},darkModeRTL_TestOnly.parameters)},"./src/components/checkbox/checkbox.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Checkbox",parameters:{notes:'# calcite-checkbox\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-checkbox id="first-name" name="first-name"></calcite-checkbox>\n```\n\n\n### Checked-with-calcite-label\n\n```html\n<calcite-label layout="inline" for="checked-item">\n  To do\n  <calcite-checkbox checked id="checked-item" name="checked-item"></calcite-checkbox>\n</calcite-label>\n```\n\n\n### Hovered-with-calcite-label\n\n```html\n<calcite-label layout="inline" for="hovered-item">\n  <calcite-checkbox hovered id="hovered-item" name="hovered-item"></calcite-checkbox>\n  To do\n</calcite-label>\n```\n\n\n### Indeterminate-with-native-label\n\n```html\n<label for="checked-indeterminate">\n  Status\n  <calcite-checkbox checked indeterminate id="checked-indeterminate" name="checked-indeterminate"></calcite-checkbox>\n</label>\n```\n\n\n\n## Properties\n\n| Property        | Attribute       | Description                                                                                                                                                              | Type                | Default     |\n| --------------- | --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------- | ----------- |\n| `checked`       | `checked`       | When `true`, the component is checked.                                                                                                                                   | `boolean`           | `false`     |\n| `disabled`      | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                 | `boolean`           | `false`     |\n| `form`          | `form`          | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any.               | `string`            | `undefined` |\n| `guid`          | `guid`          | The `id` attribute of the component. When omitted, a globally unique identifier is used.                                                                                 | `string`            | `undefined` |\n| `indeterminate` | `indeterminate` | When `true`, the component is initially indeterminate, which is independent from its `checked` value.  The state is visual only, and can look different across browsers. | `boolean`           | `false`     |\n| `name`          | `name`          | Specifies the name of the component on form submission.                                                                                                                  | `any`               | `undefined` |\n| `scale`         | `scale`         | Specifies the size of the component.                                                                                                                                     | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `value`         | `value`         | The component\'s value.                                                                                                                                                   | `any`               | `undefined` |\n\n\n## Events\n\n| Event                   | Description                                          | Type                |\n| ----------------------- | ---------------------------------------------------- | ------------------- |\n| `calciteCheckboxChange` | Emits when the component\'s `checked` status changes. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## CSS Custom Properties\n\n| Name                      | Description                                 |\n| ------------------------- | ------------------------------------------- |\n| `--calcite-checkbox-size` | Specifies the component\'s height and width. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-card](../card)\n - [calcite-tree-item](../tree-item)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-card --\x3e calcite-checkbox\n  calcite-tree-item --\x3e calcite-checkbox\n  style calcite-checkbox fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-label layout="inline">
    <calcite-checkbox
      ${Object(helpers.a)("checked",!0)}
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("indeterminate",!1)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ></calcite-checkbox>
    ${Object(dist.text)("label","Checkbox")}
  </calcite-label>
`}),disabled_TestOnly=function(){return formatting.a`<calcite-checkbox checked disabled></calcite-checkbox>`},darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-label dir="rtl" layout="inline" class="calcite-mode-dark">
    <calcite-checkbox
      ${Object(helpers.a)("checked",!0)}
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("indeterminate",!1)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ></calcite-checkbox>
    ${Object(dist.text)("label","Checkbox")}
  </calcite-label>
`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label layout="inline">\n    <calcite-checkbox\n      ${boolean("checked", true)}\n      ${boolean("disabled", false)}\n      ${boolean("indeterminate", false)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n    ></calcite-checkbox>\n    ${text("label", "Checkbox")}\n  </calcite-label>\n`'}},simple.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:"(): string => html`<calcite-checkbox checked disabled></calcite-checkbox>`"}},disabled_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label dir="rtl" layout="inline" class="calcite-mode-dark">\n    <calcite-checkbox\n      ${boolean("checked", true)}\n      ${boolean("disabled", false)}\n      ${boolean("indeterminate", false)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n    ></calcite-checkbox>\n    ${text("label", "Checkbox")}\n  </calcite-label>\n`'}},darkModeRTL_TestOnly.parameters)},"./src/components/chip/chip.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"withIcon",(function(){return withIcon})),__webpack_require__.d(__webpack_exports__,"withImage",(function(){return withImage})),__webpack_require__.d(__webpack_exports__,"withAvatar",(function(){return withAvatar})),__webpack_require__.d(__webpack_exports__,"overriddenIconColor",(function(){return overriddenIconColor})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),placeholderImage=__webpack_require__("./.storybook/placeholderImage.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Chip",parameters:{notes:'# calcite-chip\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-chip value="Global" closable icon="globe" appearance="outline" kind="brand">Global</calcite-chip>\n```\n\n\n\n## Properties\n\n| Property             | Attribute       | Description                                                                                  | Type                                     | Default     |\n| -------------------- | --------------- | -------------------------------------------------------------------------------------------- | ---------------------------------------- | ----------- |\n| `appearance`         | `appearance`    | Specifies the appearance style of the component.                                             | `"outline" \\| "outline-fill" \\| "solid"` | `"solid"`   |\n| `closable`           | `closable`      | When `true`, a close button is added to the component.                                       | `boolean`                                | `false`     |\n| `closed`             | `closed`        | When `true`, hides the component.                                                            | `boolean`                                | `false`     |\n| `icon`               | `icon`          | Specifies an icon to display.                                                                | `string`                                 | `undefined` |\n| `iconFlipRtl`        | `icon-flip-rtl` | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`). | `boolean`                                | `false`     |\n| `kind`               | `kind`          | Specifies the kind of the component (will apply to border and background if applicable).     | `"brand" \\| "inverse" \\| "neutral"`      | `"neutral"` |\n| `messageOverrides`   | --              | Use this property to override individual strings used by the component.                      | `{ dismissLabel?: string; }`             | `undefined` |\n| `scale`              | `scale`         | Specifies the size of the component.                                                         | `"l" \\| "m" \\| "s"`                      | `"m"`       |\n| `value` _(required)_ | `value`         | The component\'s value.                                                                       | `any`                                    | `undefined` |\n\n\n## Events\n\n| Event              | Description                             | Type                |\n| ------------------ | --------------------------------------- | ------------------- |\n| `calciteChipClose` | Fires when the close button is clicked. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nWhen `closable` is `true`, sets focus on the component\'s "close" button (the first focusable item).\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot      | Description                 |\n| --------- | --------------------------- |\n|           | A slot for adding text.     |\n| `"image"` | A slot for adding an image. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-alert](../alert)\n - [calcite-combobox](../combobox)\n - [calcite-rating](../rating)\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-chip --\x3e calcite-icon\n  calcite-alert --\x3e calcite-chip\n  calcite-combobox --\x3e calcite-chip\n  calcite-rating --\x3e calcite-chip\n  style calcite-chip fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div style="background-color:white;padding:100px">
    <calcite-chip
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      appearance="${Object(dist.select)("appearance",["outline","outline-fill","solid"],"solid")}"
      kind="${Object(dist.select)("kind",["brand","inverse","neutral"],"neutral")}"
      ${Object(helpers.a)("closable",!1)}
      >My great chip</calcite-chip
    >
  </div>
`}),withIcon=function(){return formatting.a`
  <div style="background-color:white;padding:100px">
    <calcite-chip
      icon="${Object(dist.select)("icon",helpers.b,helpers.b[0])}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      appearance="${Object(dist.select)("appearance",["outline","outline-fill","solid"],"solid")}"
      kind="${Object(dist.select)("kind",["brand","inverse","neutral"],"neutral")}"
      ${Object(helpers.a)("closable",!1)}
    >
      My great chip</calcite-chip
    >
  </div>
`},withImage=function(){return formatting.a`
  <div style="background-color:white;padding:100px">
    <calcite-chip
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      appearance="${Object(dist.select)("appearance",["outline","outline-fill","solid"],"solid")}"
      kind="${Object(dist.select)("kind",["brand","inverse","neutral"],"neutral")}"
      ${Object(helpers.a)("closable",!1)}
    >
      <img alt="" slot="image" src="${Object(placeholderImage.a)({width:50,height:50})}" />
      My great chip</calcite-chip
    >
  </div>
`},withAvatar=function(){var scale=Object(dist.select)("scale",["s","m","l"],"m");return formatting.a`
    <div style="background-color:white;padding:100px">
      <calcite-chip
        scale="${scale}"
        appearance="${Object(dist.select)("appearance",["outline","outline-fill","solid"],"solid")}"
        kind="${Object(dist.select)("kind",["brand","inverse","neutral"],"neutral")}"
        ${Object(helpers.a)("closable",!1)}
      >
        <calcite-avatar
          slot="image"
          scale="${scale}"
          user-id="25684463a00c449585dbb32a065f6b74"
          full-name="user name"
        ></calcite-avatar>
        User Name
      </calcite-chip>
    </div>
  `},overriddenIconColor=function(){return formatting.a`<calcite-chip icon="banana" style="--calcite-ui-icon-color: #ac9f42" closable>Banana</calcite-chip>`},darkModeRTL_TestOnly=function(){return formatting.a`
  <div style="background-color:#2b2b2b;padding:100px" dir="rtl">
    <calcite-chip
      class="calcite-mode-dark"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      appearance="${Object(dist.select)("appearance",["outline","outline-fill","solid"],"solid")}"
      kind="${Object(dist.select)("kind",["brand","inverse","neutral"],"neutral")}"
      ${Object(helpers.a)("closable",!1)}
      >My great chip</calcite-chip
    >
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="background-color:white;padding:100px">\n    <calcite-chip\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      appearance="${select("appearance", ["outline", "outline-fill", "solid"], "solid")}"\n      kind="${select("kind", ["brand", "inverse", "neutral"], "neutral")}"\n      ${boolean("closable", false)}\n      >My great chip</calcite-chip\n    >\n  </div>\n`'}},simple.parameters),withIcon.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="background-color:white;padding:100px">\n    <calcite-chip\n      icon="${select("icon", iconNames, iconNames[0])}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      appearance="${select("appearance", ["outline", "outline-fill", "solid"], "solid")}"\n      kind="${select("kind", ["brand", "inverse", "neutral"], "neutral")}"\n      ${boolean("closable", false)}\n    >\n      My great chip</calcite-chip\n    >\n  </div>\n`'}},withIcon.parameters),withImage.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="background-color:white;padding:100px">\n    <calcite-chip\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      appearance="${select("appearance", ["outline", "outline-fill", "solid"], "solid")}"\n      kind="${select("kind", ["brand", "inverse", "neutral"], "neutral")}"\n      ${boolean("closable", false)}\n    >\n      <img alt="" slot="image" src="${placeholderImage({ width: 50, height: 50 })}" />\n      My great chip</calcite-chip\n    >\n  </div>\n`'}},withImage.parameters),withAvatar.parameters=Object.assign({storySource:{source:'(): string => {\n  const scale = select("scale", ["s", "m", "l"], "m");\n\n  return html`\n    <div style="background-color:white;padding:100px">\n      <calcite-chip\n        scale="${scale}"\n        appearance="${select("appearance", ["outline", "outline-fill", "solid"], "solid")}"\n        kind="${select("kind", ["brand", "inverse", "neutral"], "neutral")}"\n        ${boolean("closable", false)}\n      >\n        <calcite-avatar\n          slot="image"\n          scale="${scale}"\n          user-id="25684463a00c449585dbb32a065f6b74"\n          full-name="user name"\n        ></calcite-avatar>\n        User Name\n      </calcite-chip>\n    </div>\n  `;\n}'}},withAvatar.parameters),overriddenIconColor.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-chip icon="banana" style="--calcite-ui-icon-color: #ac9f42" closable>Banana</calcite-chip>`'}},overriddenIconColor.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="background-color:#2b2b2b;padding:100px" dir="rtl">\n    <calcite-chip\n      class="calcite-mode-dark"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      appearance="${select("appearance", ["outline", "outline-fill", "solid"], "solid")}"\n      kind="${select("kind", ["brand", "inverse", "neutral"], "neutral")}"\n      ${boolean("closable", false)}\n      >My great chip</calcite-chip\n    >\n  </div>\n`'}},darkModeRTL_TestOnly.parameters)},"./src/components/color-picker/color-picker.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"thumbsOnEdgeDoNotOverflowContainer_TestOnly",(function(){return thumbsOnEdgeDoNotOverflowContainer_TestOnly})),__webpack_require__.d(__webpack_exports__,"thumbsOnEdgeDoNotSnapToFrontOfContainer_TestOnly",(function(){return thumbsOnEdgeDoNotSnapToFrontOfContainer_TestOnly})),__webpack_require__.d(__webpack_exports__,"ArabicLocale_TestOnly",(function(){return ArabicLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"NorwegianLocale_TestOnly",(function(){return NorwegianLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"SpanishLocale_TestOnly",(function(){return SpanishLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"JapaneseLocale_TestOnly",(function(){return JapaneseLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"RussianLocale_TestOnly",(function(){return RussianLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"ThaiLocale_TestOnly",(function(){return ThaiLocale_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),resources=__webpack_require__("./.storybook/resources.ts"),formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default=Object.assign({title:"Components/Controls/ColorPicker",parameters:{notes:'# calcite-color-picker\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-color-picker dir="ltr" scale="m" value="#b33f33"></calcite-color-picker>\n```\n\n\n\n## Properties\n\n| Property           | Attribute          | Description                                                                                                                                                                                                                                                                                                     | Type                                                                                                                                                                                                                                                                                                                  | Default         |\n| ------------------ | ------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------- |\n| `allowEmpty`       | `allow-empty`      | When `false`, an empty color (`null`) will be allowed as a `value`. Otherwise, a color value is enforced on the component.  When `true`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`. When `false`, an empty color (`null`) will be allowed as a `value`. | `boolean`                                                                                                                                                                                                                                                                                                             | `false`         |\n| `disabled`         | `disabled`         | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                                                                                                                                                        | `boolean`                                                                                                                                                                                                                                                                                                             | `false`         |\n| `format`           | `format`           | The format of `value`.  When `"auto"`, the format will be inferred from `value` when set.                                                                                                                                                                                                                       | `"auto" \\| "hex" \\| "hexa" \\| "hsl" \\| "hsl-css" \\| "hsla" \\| "hsla-css" \\| "hsv" \\| "hsva" \\| "rgb" \\| "rgb-css" \\| "rgba" \\| "rgba-css"`                                                                                                                                                                            | `defaultFormat` |\n| `hideChannels`     | `hide-channels`    | When `true`, hides the RGB/HSV channel inputs.                                                                                                                                                                                                                                                                  | `boolean`                                                                                                                                                                                                                                                                                                             | `false`         |\n| `hideHex`          | `hide-hex`         | When `true`, hides the Hex input.                                                                                                                                                                                                                                                                               | `boolean`                                                                                                                                                                                                                                                                                                             | `false`         |\n| `hideSaved`        | `hide-saved`       | When `true`, hides the saved colors section.                                                                                                                                                                                                                                                                    | `boolean`                                                                                                                                                                                                                                                                                                             | `false`         |\n| `messageOverrides` | --                 | Use this property to override individual strings used by the component.                                                                                                                                                                                                                                         | `{ b?: string; blue?: string; deleteColor?: string; g?: string; green?: string; h?: string; hsv?: string; hex?: string; hue?: string; noColor?: string; opacity?: string; r?: string; red?: string; rgb?: string; s?: string; saturation?: string; saveColor?: string; saved?: string; v?: string; value?: string; }` | `undefined`     |\n| `numberingSystem`  | `numbering-system` | Specifies the Unicode numeral system used by the component for localization.                                                                                                                                                                                                                                    | `"arab" \\| "arabext" \\| "bali" \\| "beng" \\| "deva" \\| "fullwide" \\| "gujr" \\| "guru" \\| "hanidec" \\| "khmr" \\| "knda" \\| "laoo" \\| "latn" \\| "limb" \\| "mlym" \\| "mong" \\| "mymr" \\| "orya" \\| "tamldec" \\| "telu" \\| "thai" \\| "tibt"`                                                                               | `undefined`     |\n| `scale`            | `scale`            | Specifies the size of the component.                                                                                                                                                                                                                                                                            | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                                                                                                   | `"m"`           |\n| `storageId`        | `storage-id`       | Specifies the storage ID for colors.                                                                                                                                                                                                                                                                            | `string`                                                                                                                                                                                                                                                                                                              | `undefined`     |\n| `value`            | `value`            | The component\'s value, where the value can be a CSS color string, or a RGB, HSL or HSV object.  The type will be preserved as the color is updated.                                                                                                                                                             | `HSL \\| HSL & ObjectWithAlpha \\| HSV \\| HSV & ObjectWithAlpha \\| RGB \\| RGB & ObjectWithAlpha \\| string`                                                                                                                                                                                                              | `defaultValue`  |\n\n\n## Events\n\n| Event                      | Description                                                                                                                                                                                                   | Type                |\n| -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- |\n| `calciteColorPickerChange` | Fires when the color value has changed.                                                                                                                                                                       | `CustomEvent<void>` |\n| `calciteColorPickerInput`  | Fires as the color value changes.  Similar to the `calciteColorPickerChange` event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-tab-title](../tab-title)\n- [calcite-tab](../tab)\n- [calcite-input](../input)\n- [calcite-color-picker-hex-input](../color-picker-hex-input)\n- [calcite-tabs](../tabs)\n- [calcite-tab-nav](../tab-nav)\n- [calcite-button](../button)\n- [calcite-color-picker-swatch](../color-picker-swatch)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-color-picker --\x3e calcite-tab-title\n  calcite-color-picker --\x3e calcite-tab\n  calcite-color-picker --\x3e calcite-input\n  calcite-color-picker --\x3e calcite-color-picker-hex-input\n  calcite-color-picker --\x3e calcite-tabs\n  calcite-color-picker --\x3e calcite-tab-nav\n  calcite-color-picker --\x3e calcite-button\n  calcite-color-picker --\x3e calcite-color-picker-swatch\n  calcite-tab-title --\x3e calcite-icon\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  calcite-color-picker-hex-input --\x3e calcite-input\n  calcite-color-picker-hex-input --\x3e calcite-color-picker-swatch\n  calcite-button --\x3e calcite-loader\n  calcite-button --\x3e calcite-icon\n  style calcite-color-picker fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)());var createColorAttributes=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,scale=resources.a.scale;return Object(utils.b)([{name:"hide-channels",commit:function(){return this.value=Object(dist.boolean)("hide-channels",!1),delete this.build,this}},{name:"hide-hex",commit:function(){return this.value=Object(dist.boolean)("hide-hex",!1),delete this.build,this}},{name:"hide-saved",commit:function(){return this.value=Object(dist.boolean)("hide-saved",!1),delete this.build,this}},{name:"scale",commit:function(){return this.value=Object(dist.select)("scale",scale.values,scale.defaultValue),delete this.build,this}}],exceptions)},simple=function(){return Object(utils.a)("calcite-color-picker",[{name:"allow-empty",value:Object(dist.boolean)("allow-empty",!1)}].concat(_toConsumableArray(createColorAttributes()),[{name:"value",value:Object(dist.text)("value","#b33f33")}]))},disabled_TestOnly=function(){return formatting.a`<calcite-color-picker disabled></calcite-color-picker>`},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-color-picker",[].concat(_toConsumableArray(createColorAttributes({exceptions:["dir"]}).concat({name:"dir",value:"rtl"})),[{name:"class",value:"calcite-mode-dark"},{name:"value",value:Object(dist.text)("value","#b33f33")}]))};darkModeRTL_TestOnly.parameters={modes:utils.e};var thumbsOnEdgeDoNotOverflowContainer_TestOnly=function(){return formatting.a`<div
  style="overflow: auto; width: 274px;"
>
  <calcite-color-picker value="#04006e"></calcite-color-picker>
</div>`},thumbsOnEdgeDoNotSnapToFrontOfContainer_TestOnly=function(){return formatting.a`<calcite-color-picker value="#824142"></calcite-color-picker>`},ArabicLocale_TestOnly=function(){return formatting.a` <calcite-color-picker lang="ar"></calcite-color-picker> `},NorwegianLocale_TestOnly=function(){return formatting.a` <calcite-color-picker lang="no"></calcite-color-picker> `},SpanishLocale_TestOnly=function(){return formatting.a` <calcite-color-picker lang="es"></calcite-color-picker> `},JapaneseLocale_TestOnly=function(){return formatting.a` <calcite-color-picker lang="ja"></calcite-color-picker> `},RussianLocale_TestOnly=function(){return formatting.a` <calcite-color-picker lang="ru"></calcite-color-picker> `},ThaiLocale_TestOnly=function(){return formatting.a` <calcite-color-picker lang="th"></calcite-color-picker> `};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  create("calcite-color-picker", [\n    {\n      name: "allow-empty",\n      value: boolean("allow-empty", false)\n    },\n    ...createColorAttributes(),\n    {\n      name: "value",\n      value: text("value", "#b33f33")\n    }\n  ])'}},simple.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:"(): string => html`<calcite-color-picker disabled></calcite-color-picker>`"}},disabled_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create("calcite-color-picker", [\n    ...createColorAttributes({ exceptions: ["dir"] }).concat({ name: "dir", value: "rtl" }),\n    { name: "class", value: "calcite-mode-dark" },\n    {\n      name: "value",\n      value: text("value", "#b33f33")\n    }\n  ])'}},darkModeRTL_TestOnly.parameters),thumbsOnEdgeDoNotOverflowContainer_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div\n  style="overflow: auto; width: 274px;"\n>\n  <calcite-color-picker value="#04006e"></calcite-color-picker>\n</div>`'}},thumbsOnEdgeDoNotOverflowContainer_TestOnly.parameters),thumbsOnEdgeDoNotSnapToFrontOfContainer_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-color-picker value="#824142"></calcite-color-picker>`'}},thumbsOnEdgeDoNotSnapToFrontOfContainer_TestOnly.parameters),ArabicLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-color-picker lang="ar"></calcite-color-picker> `'}},ArabicLocale_TestOnly.parameters),NorwegianLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-color-picker lang="no"></calcite-color-picker> `'}},NorwegianLocale_TestOnly.parameters),SpanishLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-color-picker lang="es"></calcite-color-picker> `'}},SpanishLocale_TestOnly.parameters),JapaneseLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-color-picker lang="ja"></calcite-color-picker> `'}},JapaneseLocale_TestOnly.parameters),RussianLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-color-picker lang="ru"></calcite-color-picker> `'}},RussianLocale_TestOnly.parameters),ThaiLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-color-picker lang="th"></calcite-color-picker> `'}},ThaiLocale_TestOnly.parameters)},"./src/components/combobox/combobox.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"single",(function(){return single})),__webpack_require__.d(__webpack_exports__,"multiple",(function(){return multiple})),__webpack_require__.d(__webpack_exports__,"nestedItems",(function(){return nestedItems})),__webpack_require__.d(__webpack_exports__,"longItems_TestOnly",(function(){return longItems_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"flipPlacements_TestOnly",(function(){return flipPlacements_TestOnly})),__webpack_require__.d(__webpack_exports__,"flipPositioning_TestOnly",(function(){return flipPositioning_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"singleLongLabel_TestOnly",(function(){return singleLongLabel_TestOnly})),__webpack_require__.d(__webpack_exports__,"withPlaceholderIcon_TestOnly",(function(){return withPlaceholderIcon_TestOnly})),__webpack_require__.d(__webpack_exports__,"withoutPlaceholderIcon_TestOnly",(function(){return withoutPlaceholderIcon_TestOnly})),__webpack_require__.d(__webpack_exports__,"scrollingWithoutMaxItems_TestOnly",(function(){return scrollingWithoutMaxItems_TestOnly})),__webpack_require__.d(__webpack_exports__,"optionListMinWidthMatchesInputWhenOverlayPositioningIsFixed_TestOnly",(function(){return optionListMinWidthMatchesInputWhenOverlayPositioningIsFixed_TestOnly})),__webpack_require__.d(__webpack_exports__,"mediumIconForLargeComoboboxItem_TestOnly",(function(){return mediumIconForLargeComoboboxItem_TestOnly})),__webpack_require__.d(__webpack_exports__,"withSelectorIndicatorAndIcons_TestOnly",(function(){return withSelectorIndicatorAndIcons_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Combobox",parameters:{notes:['# calcite-combobox\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Ancestors\n\n```html\n<calcite-combobox label="Ancestors selection-mode combobox" selection-mode="ancestors">\n  <calcite-combobox-item value="Trees" text-label="Trees">\n    <calcite-combobox-item\n      value="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n      text-label="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n      selected\n    ></calcite-combobox-item>\n    <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n    <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n  </calcite-combobox-item>\n</calcite-combobox>\n```\n\n\n### Multiple\n\n```html\n<calcite-combobox label="Mulit selection-mode combobox" selection-mode="multiple">\n  <calcite-combobox-item value="Trees" text-label="Trees">\n    <calcite-combobox-item\n      value="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n      text-label="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n      selected\n    ></calcite-combobox-item>\n    <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n    <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n  </calcite-combobox-item>\n</calcite-combobox>\n```\n\n\n### Single\n\n```html\n<calcite-combobox label="Single selection-mode combobox" selection-mode="single">\n  <calcite-combobox-item value="Trees" text-label="Trees">\n    <calcite-combobox-item\n      value="CommercialDamageAssessment - Damage to Commercial Buildings"\n      text-label="CommercialDamageAssessment - Damage to Commercial Buildings"\n      selected\n    ></calcite-combobox-item>\n    <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n    <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n  </calcite-combobox-item>\n  <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n</calcite-combobox>\n```\n\n\n\n## Properties\n\n| Property                 | Attribute                   | Description                                                                                                                                                                                                                                                                                                                                                                   | Type                                    | Default      |\n| ------------------------ | --------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------- | ------------ |\n| `allowCustomValues`      | `allow-custom-values`       | When `true`, allows entry of custom values, which are not in the original set of items.                                                                                                                                                                                                                                                                                       | `boolean`                               | `undefined`  |\n| `disabled`               | `disabled`                  | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                                                                                                                                                                                                                      | `boolean`                               | `false`      |\n| `filteredItems`          | --                          | Specifies the component\'s filtered items.                                                                                                                                                                                                                                                                                                                                     | `HTMLCalciteComboboxItemElement[]`      | `[]`         |\n| `flipPlacements`         | --                          | Defines the available placements that can be used when a flip occurs.                                                                                                                                                                                                                                                                                                         | `Placement[]`                           | `undefined`  |\n| `form`                   | `form`                      | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any.                                                                                                                                                                                                                    | `string`                                | `undefined`  |\n| `label` _(required)_     | `label`                     | Accessible name for the component.                                                                                                                                                                                                                                                                                                                                            | `string`                                | `undefined`  |\n| `maxItems`               | `max-items`                 | Specifies the maximum number of `calcite-combobox-item`s (including nested children) to display before displaying a scrollbar.                                                                                                                                                                                                                                                | `number`                                | `0`          |\n| `messageOverrides`       | --                          | Use this property to override individual strings used by the component.                                                                                                                                                                                                                                                                                                       | `{ removeTag?: string; }`               | `undefined`  |\n| `name`                   | `name`                      | Specifies the name of the component.  Required to pass the component\'s `value` on form submission.                                                                                                                                                                                                                                                                            | `string`                                | `undefined`  |\n| `open`                   | `open`                      | When `true`, displays and positions the component.                                                                                                                                                                                                                                                                                                                            | `boolean`                               | `false`      |\n| `overlayPositioning`     | `overlay-positioning`       | Determines the type of positioning to use for the overlaid content.  Using `"absolute"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container\'s layout.  `"fixed"` should be used to escape an overflowing parent container, or when the reference element\'s `position` CSS property is `"fixed"`. | `"absolute" \\| "fixed"`                 | `"absolute"` |\n| `placeholder`            | `placeholder`               | Specifies the placeholder text for the input.                                                                                                                                                                                                                                                                                                                                 | `string`                                | `undefined`  |\n| `placeholderIcon`        | `placeholder-icon`          | Specifies the placeholder icon for the input.                                                                                                                                                                                                                                                                                                                                 | `string`                                | `undefined`  |\n| `placeholderIconFlipRtl` | `placeholder-icon-flip-rtl` | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).                                                                                                                                                                                                                                                                                  | `boolean`                               | `false`      |\n| `scale`                  | `scale`                     | Specifies the size of the component.                                                                                                                                                                                                                                                                                                                                          | `"l" \\| "m" \\| "s"`                     | `"m"`        |\n| `selectedItems`          | --                          | Specifies the component\'s selected items.                                                                                                                                                                                                                                                                                                                                     | `HTMLCalciteComboboxItemElement[]`      | `[]`         |\n| `selectionMode`          | `selection-mode`            | specify the selection mode - multiple: allow any number of selected items (default) - single: only one selection) - ancestors: like multiple, but show ancestors of selected items as selected, only deepest children shown in chips                                                                                                                                          | `"ancestors" \\| "multiple" \\| "single"` | `"multiple"` |\n| `value`                  | `value`                     | The component\'s value(s) from the selected `calcite-combobox-item`(s).                                                                                                                                                                                                                                                                                                        | `string \\| string[]`                    | `null`       |\n\n\n## Events\n\n| Event                         | Description                                                                                              | Type                |\n| ----------------------------- | -------------------------------------------------------------------------------------------------------- | ------------------- |\n| `calciteComboboxBeforeClose`  | Fires when the component is requested to be closed, and before the closing transition begins.            | `CustomEvent<void>` |\n| `calciteComboboxBeforeOpen`   | Fires when the component is added to the DOM but not rendered, and before the opening transition begins. | `CustomEvent<void>` |\n| `calciteComboboxChange`       | Fires when the selected item(s) changes.                                                                 | `CustomEvent<void>` |\n| `calciteComboboxChipClose`    | Fires when a selected item in the component is closed via its `calcite-chip`.                            | `CustomEvent<void>` |\n| `calciteComboboxClose`        | Fires when the component is closed and animation is complete.                                            | `CustomEvent<void>` |\n| `calciteComboboxFilterChange` | Fires when text is added to filter the options list.                                                     | `CustomEvent<void>` |\n| `calciteComboboxOpen`         | Fires when the component is open and animation is complete.                                              | `CustomEvent<void>` |\n\n\n## Methods\n\n### `reposition(delayed?: boolean) => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                                 |\n| ---- | ------------------------------------------- |\n|      | A slot for adding `calcite-combobox-item`s. |\n\n\n## CSS Custom Properties\n\n| Name                              | Description                                    |\n| --------------------------------- | ---------------------------------------------- |\n| `--calcite-combobox-input-height` | Specifies the height of the component\'s input. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-chip](../chip)\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-combobox --\x3e calcite-chip\n  calcite-combobox --\x3e calcite-icon\n  calcite-chip --\x3e calcite-icon\n  style calcite-combobox fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',"# calcite-combobox-item\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                 | Attribute         | Description                                                                                  | Type                     | Default     |\n| ------------------------ | ----------------- | -------------------------------------------------------------------------------------------- | ------------------------ | ----------- |\n| `active`                 | `active`          | When `true`, the component is active.                                                        | `boolean`                | `false`     |\n| `ancestors`              | --                | Specifies the parent and grandparent items, which are set on `calcite-combobox`.             | `ComboboxChildElement[]` | `undefined` |\n| `disabled`               | `disabled`        | When `true`, interaction is prevented and the component is displayed with lower opacity.     | `boolean`                | `false`     |\n| `filterDisabled`         | `filter-disabled` | When `true`, omits the component from the `calcite-combobox` filtered search results.        | `boolean`                | `undefined` |\n| `guid`                   | `guid`            | The `id` attribute of the component. When omitted, a globally unique identifier is used.     | `string`                 | `guid()`    |\n| `icon`                   | `icon`            | Specifies an icon to display.                                                                | `string`                 | `undefined` |\n| `iconFlipRtl`            | `icon-flip-rtl`   | When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). | `boolean`                | `false`     |\n| `selected`               | `selected`        | When `true`, the component is selected.                                                      | `boolean`                | `false`     |\n| `textLabel` _(required)_ | `text-label`      | The component's text.                                                                        | `string`                 | `undefined` |\n| `value` _(required)_     | `value`           | The component's value.                                                                       | `any`                    | `undefined` |\n\n\n## Events\n\n| Event                       | Description                                             | Type                |\n| --------------------------- | ------------------------------------------------------- | ------------------- |\n| `calciteComboboxItemChange` | Emits whenever the component is selected or unselected. | `CustomEvent<void>` |\n\n\n## Slots\n\n| Slot | Description                                        |\n| ---- | -------------------------------------------------- |\n|      | A slot for adding nested `calcite-combobox-item`s. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-combobox-item --\x3e calcite-icon\n  style calcite-combobox-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"]}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width:400px;max-width:100%;background-color:white;padding:100px">
    <calcite-combobox
      label="demo combobox"
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      selection-mode="${Object(dist.select)("selection-mode",["multiple","single","ancestors"],"multiple")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("allow-custom-values",!1)}
      max-items="${Object(dist.number)("max-items",0)}"
    >
      <calcite-combobox-item value="Trees" text-label="Trees" selected>
        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>
        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>
        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers">
        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>
        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>
        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals">
        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>
        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>
        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`}),single=function(){return formatting.a`
  <div style="width:150px;max-width:100%;background-color:white;padding:100px">
    <calcite-combobox
      label="demo combobox"
      selection-mode="${Object(dist.select)("selection-mode",["multiple","single","ancestors"],"single")}"
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      max-items="${Object(dist.number)("max-items",0)}"
    >
      <calcite-combobox-item icon="altitude" value="altitude" text-label="Altitude" selected></calcite-combobox-item>
      <calcite-combobox-item icon="article" value="article" text-label="Article"></calcite-combobox-item>
      <calcite-combobox-item icon="attachment" value="attachment" text-label="Attachment"></calcite-combobox-item>
      <calcite-combobox-item icon="banana" value="banana" text-label="Banana"></calcite-combobox-item>
      <calcite-combobox-item icon="battery3" value="battery" text-label="Batterycharging"></calcite-combobox-item>
      <calcite-combobox-item icon="beaker" value="beaker" text-label="Beaker"></calcite-combobox-item>
      <calcite-combobox-item icon="bell" value="bell" text-label="Bell"></calcite-combobox-item>
      <calcite-combobox-item icon="bookmark" value="bookmark" text-label="Bookmark"></calcite-combobox-item>
      <calcite-combobox-item icon="brightness" value="brightness" text-label="Brightness"></calcite-combobox-item>
      <calcite-combobox-item icon="calendar" value="calendar" text-label="Calendar"></calcite-combobox-item>
      <calcite-combobox-item icon="camera" value="camera" text-label="Camera"></calcite-combobox-item>
      <calcite-combobox-item icon="car" value="car" text-label="Car"></calcite-combobox-item>
      <calcite-combobox-item icon="clock" value="clock" text-label="Clock"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`},multiple=function(){return formatting.a`
  <div style="width:400px;max-width:100%;background-color:white;padding:100px">
    <calcite-combobox
      label="demo combobox"
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      selection-mode="${Object(dist.select)("selection-mode",["multiple","single","ancestors"],"multiple")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("allow-custom-values",!1)}
      max-items="${Object(dist.number)("max-items",0)}"
    >
      <calcite-combobox-item value="Trees" text-label="Trees" selected></calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers" selected></calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals"></calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
      <calcite-combobox-item
        value="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"
        text-label="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"
        selected
      ></calcite-combobox-item>
    </calcite-combobox>
  </div>
`},nestedItems=function(){return formatting.a`
  <div style="width:400px;max-width:100%;background-color:white;padding:100px">
    <calcite-combobox
      open
      label="demo combobox"
      selection-mode="${Object(dist.select)("selection-mode",["multiple","single","ancestors"],"multiple")}"
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("allow-custom-values",!1)}
      max-items="${Object(dist.number)("max-items",0)}"
    >
      <calcite-combobox-item value="ITEM-0-0" text-label="Level 1">
        <calcite-combobox-item value="ITEM-0-1" text-label="Level 2"></calcite-combobox-item>
        <calcite-combobox-item value="ITEM-0-2" text-label="Level 2"></calcite-combobox-item>
        <calcite-combobox-item value="ITEM-0-3" text-label="Level 2"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="ITEM-1-0" text-label="Level 1">
        <calcite-combobox-item value="ITEM-1-1" text-label="Level 2">
          <calcite-combobox-item value="ITEM-1-1-0" text-label="Level 3"></calcite-combobox-item>
          <calcite-combobox-item value="ITEM-1-1-1" text-label="Level 3">
            <calcite-combobox-item value="ITEM-1-1-1-0" text-label="Level 4"></calcite-combobox-item>
            <calcite-combobox-item value="ITEM-1-1-1-1" text-label="Level 4"></calcite-combobox-item>
          </calcite-combobox-item>
        </calcite-combobox-item>
        <calcite-combobox-item value="ITEM-1-2" text-label="Level 2"></calcite-combobox-item>
        <calcite-combobox-item value="ITEM-1-3" text-label="Level 2"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="ITEM-2-0" text-label="Level 1">
        <calcite-combobox-item value="ITEM-2-1" text-label="Level 2"></calcite-combobox-item>
        <calcite-combobox-item value="ITEM-2-2" text-label="Level 2">
          <calcite-combobox-item value="ITEM-2-2-0" text-label="Level 3"></calcite-combobox-item>
        </calcite-combobox-item>
        <calcite-combobox-item value="ITEM-2-3" text-label="Level 2"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="ITEM-0-4" text-label="Level 1"></calcite-combobox-item>
      <calcite-combobox-item value="ITEM-0-5" text-label="Level 1"></calcite-combobox-item>
      <calcite-combobox-item value="ITEM-0-6" text-label="Level 1"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`},longItems_TestOnly=function(){return formatting.a`<style>
    calcite-combobox {
      width: 260px;
    }
    calcite-combobox-item {
      width: 260px;
    }
  </style>
  <calcite-combobox open>
    <calcite-combobox-item text-label="Layers">
      <calcite-combobox-item text-label="Enriched USA Census Tract Areas Aug29"></calcite-combobox-item>
      <calcite-combobox-item text-label="Viewer_Reservable_Equipments_Capacity_V2_WFL1"></calcite-combobox-item>
    </calcite-combobox-item>
  </calcite-combobox>`},disabled_TestOnly=function(){return formatting.a`<calcite-combobox disabled>
  <calcite-combobox-item value="Trees" text-label="Trees">
    <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>
    <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>
    <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>
  </calcite-combobox-item>
  <calcite-combobox-item value="Flowers" text-label="Flowers" disabled>
    <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>
    <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>
    <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>
  </calcite-combobox-item>
</calcite-combobox>`},flipPlacements_TestOnly=function(){return formatting.a`
  <style>
    .my-combobox {
      position: unset;
      margin-top: 50px;
    }
  </style>
  <div style="height: 100px; overflow:scroll;">
    <calcite-combobox class="my-combobox" placeholder="placeholder" open>
      <calcite-combobox-item value="Trees" text-label="Trees" aria-hidden="true">
        <calcite-combobox-item value="Pine" text-label="Pine" aria-hidden="true"></calcite-combobox-item>
        <calcite-combobox-item
          value="Sequoia"
          disabled=""
          text-label="Sequoia"
          aria-hidden="true"
        ></calcite-combobox-item>
        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir" aria-hidden="true"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers" aria-hidden="true">
        <calcite-combobox-item value="Daffodil" text-label="Daffodil" aria-hidden="true"></calcite-combobox-item>
        <calcite-combobox-item
          value="Black Eyed Susan"
          text-label="Black Eyed Susan"
          aria-hidden="true"
        ></calcite-combobox-item>
        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium" aria-hidden="true"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals" aria-hidden="true">
        <calcite-combobox-item value="Birds" text-label="Birds" aria-hidden="true"></calcite-combobox-item>
        <calcite-combobox-item value="Reptiles" text-label="Reptiles" aria-hidden="true"></calcite-combobox-item>
        <calcite-combobox-item value="Amphibians" text-label="Amphibians" aria-hidden="true"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks" aria-hidden="true"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects" aria-hidden="true"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers" aria-hidden="true"></calcite-combobox-item>
    </calcite-combobox>
  </div>
  <script>
    document.querySelector(".my-combobox").flipPlacements = ["right"];
  </script>
`},flipPositioning_TestOnly=function(){return formatting.a`
  <div style="position: absolute; bottom: 10px; left: 10px;">
    <calcite-combobox
      max-items="${Object(dist.number)("max-items",6)}"
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      selection-mode="${Object(dist.select)("selection-mode",["multiple","single","ancestors"],"multiple")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("allow-custom-values",!1)}
      open
    >
      <calcite-combobox-item value="Trees" text-label="Trees">
        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>
        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>
        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers">
        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>
        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>
        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals">
        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>
        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>
        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`};flipPositioning_TestOnly.parameters={layout:"fullscreen"};var darkModeRTL_TestOnly=function(){return formatting.a`
  <div style="width:400px;max-width:100%;padding:100px">
    <calcite-combobox
      label="demo combobox"
      selection-mode="${Object(dist.select)("selection-mode",["multiple","single","ancestors"],"multiple")}"
      class="calcite-mode-dark"
      placeholder="${Object(dist.text)("placeholder","placeholder")}"
      label="${Object(dist.text)("label (for screen readers)","demo")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("allow-custom-values",!1)}
      max-items="${Object(dist.number)("max-items",0)}"
    >
      <calcite-combobox-item value="Trees" text-label="Trees">
        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>
        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>
        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers">
        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>
        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>
        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals">
        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>
        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>
        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var singleLongLabel_TestOnly=function(){return formatting.a`
  <calcite-combobox open selection-mode="single" allow-custom-values>
    <calcite-combobox-item value="Trees" text-label="Trees">
      <calcite-combobox-item
        value="CommercialDamageAssessment - Damage to Commercial Buildings"
        text-label="CommercialDamageAssessment - Damage to Commercial Buildings &  Damage to Residential Buildings "
      ></calcite-combobox-item>
      <calcite-combobox-item value="Sequoia" text-label="Sequoia"></calcite-combobox-item>
      <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>
    </calcite-combobox-item>
    <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
  </calcite-combobox>
`},withPlaceholderIcon_TestOnly=function(){return formatting.a` <calcite-combobox
  id="labelFour"
  label="test"
  placeholder="${Object(dist.text)("placeholder","select folder")}"
  placeholder-icon="${Object(dist.text)("placeholder-icon","select")}"
  max-items="6"
  selection-mode="single"
  scale="s"
>
  <calcite-combobox-item value="root" text-label="username" icon="home"></calcite-combobox-item>
  <calcite-combobox-item value="1" text-label="Folder 1" icon="folder"></calcite-combobox-item>
  <calcite-combobox-item value="2" text-label="Folder 2" icon="folder"></calcite-combobox-item>
</calcite-combobox>`},withoutPlaceholderIcon_TestOnly=function(){return formatting.a` <div
  style="width:400px;max-width:100%;background-color:white;padding:100px"
>
  <calcite-combobox placeholder="${Object(dist.text)("placeholder","select folder")}" selection-mode="multiple" open>
    <calcite-combobox-item value="root" text-label="username" icon="home" selected></calcite-combobox-item>
    <calcite-combobox-item value="1" text-label="Folder 1" icon="folder"></calcite-combobox-item>
    <calcite-combobox-item value="2" text-label="Folder 2" icon="folder"></calcite-combobox-item>
  </calcite-combobox>
</div>`},scrollingWithoutMaxItems_TestOnly=function(){return formatting.a`
  <div style="width:400px;max-width:100%;background-color:white;padding:100px">
    <calcite-combobox label="demo combobox" open>
      <calcite-combobox-item value="Trees" text-label="Trees" selected>
        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>
        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>
        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers">
        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>
        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>
        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals">
        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>
        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>
        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
      <calcite-combobox-item value="Trees" text-label="Trees" selected>
        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>
        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>
        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers">
        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>
        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>
        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals">
        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>
        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>
        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`},optionListMinWidthMatchesInputWhenOverlayPositioningIsFixed_TestOnly=function(){return formatting.a`
  <style>
    .wrapper {
      display: flex;
      width: 100%;
    }

    calcite-combobox {
      width: 400px;
      margin: 0 auto;
    }
  </style>
  <div class="wrapper">
    <calcite-combobox placeholder="placeholder" overlay-positioning="fixed" placement="bottom" open>
      <calcite-combobox-item value="Trees" text-label="Trees" aria-hidden="true">
        <calcite-combobox-item value="Pine" text-label="Pine" aria-hidden="true"></calcite-combobox-item>
        <calcite-combobox-item
          value="Sequoia"
          disabled=""
          text-label="Sequoia"
          aria-hidden="true"
        ></calcite-combobox-item>
        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir" aria-hidden="true"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Flowers" text-label="Flowers" aria-hidden="true">
        <calcite-combobox-item value="Daffodil" text-label="Daffodil" aria-hidden="true"></calcite-combobox-item>
        <calcite-combobox-item
          value="Black Eyed Susan"
          text-label="Black Eyed Susan"
          aria-hidden="true"
        ></calcite-combobox-item>
        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium" aria-hidden="true"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Animals" text-label="Animals" aria-hidden="true">
        <calcite-combobox-item value="Birds" text-label="Birds" aria-hidden="true"></calcite-combobox-item>
        <calcite-combobox-item value="Reptiles" text-label="Reptiles" aria-hidden="true"></calcite-combobox-item>
        <calcite-combobox-item value="Amphibians" text-label="Amphibians" aria-hidden="true"></calcite-combobox-item>
      </calcite-combobox-item>
      <calcite-combobox-item value="Rocks" text-label="Rocks" aria-hidden="true"></calcite-combobox-item>
      <calcite-combobox-item value="Insects" text-label="Insects" aria-hidden="true"></calcite-combobox-item>
      <calcite-combobox-item value="Rivers" text-label="Rivers" aria-hidden="true"></calcite-combobox-item>
    </calcite-combobox>
  </div>
`},mediumIconForLargeComoboboxItem_TestOnly=function(){return formatting.a`
  <calcite-combobox open scale="l">
    <calcite-combobox-item
      icon="altitude"
      value="altitude"
      text-label="Altitude"
      selected
      scale="l"
    ></calcite-combobox-item>
    <calcite-combobox-item icon="article" value="article" text-label="Article" scale="l"></calcite-combobox-item>
    <calcite-combobox-item value="altitude" text-label="Altitude" scale="l"></calcite-combobox-item>
    <calcite-combobox-item value="article" text-label="Article" scale="l"></calcite-combobox-item>
  </calcite-combobox>
`},withSelectorIndicatorAndIcons_TestOnly=function(){return formatting.a`
  <calcite-combobox label="test" placeholder="select folder" selection-mode="multiple" open>
    <calcite-combobox-item text-label="Folder 1" icon="folder" selected>
      <calcite-combobox-item text-label="Sub Folder 1" icon="folder" selected>
        <calcite-combobox-item text-label="Sub Folder 2 " icon="folder" selected></calcite-combobox-item>
      </calcite-combobox-item>
    </calcite-combobox-item>
    <calcite-combobox-item text-label="Folder 2" icon="folder"></calcite-combobox-item>
    <calcite-combobox-item text-label="Folder 3" icon="folder"></calcite-combobox-item>
    <calcite-combobox-item text-label="Folder 4"></calcite-combobox-item>
    <calcite-combobox-item-group label="Files">
      <calcite-combobox-item text-label="File 1" icon="file" selected>
        <calcite-combobox-item text-label="file 2" icon="file" selected></calcite-combobox-item>
      </calcite-combobox-item>
    </calcite-combobox-item-group>
  </calcite-combobox>
`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px;max-width:100%;background-color:white;padding:100px">\n    <calcite-combobox\n      label="demo combobox"\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      selection-mode="${select("selection-mode", ["multiple", "single", "ancestors"], "multiple")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      ${boolean("allow-custom-values", false)}\n      max-items="${number("max-items", 0)}"\n    >\n      <calcite-combobox-item value="Trees" text-label="Trees" selected>\n        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>\n        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers">\n        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>\n        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>\n        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals">\n        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>\n        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>\n        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},simple.parameters),single.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:150px;max-width:100%;background-color:white;padding:100px">\n    <calcite-combobox\n      label="demo combobox"\n      selection-mode="${select("selection-mode", ["multiple", "single", "ancestors"], "single")}"\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      max-items="${number("max-items", 0)}"\n    >\n      <calcite-combobox-item icon="altitude" value="altitude" text-label="Altitude" selected></calcite-combobox-item>\n      <calcite-combobox-item icon="article" value="article" text-label="Article"></calcite-combobox-item>\n      <calcite-combobox-item icon="attachment" value="attachment" text-label="Attachment"></calcite-combobox-item>\n      <calcite-combobox-item icon="banana" value="banana" text-label="Banana"></calcite-combobox-item>\n      <calcite-combobox-item icon="battery3" value="battery" text-label="Batterycharging"></calcite-combobox-item>\n      <calcite-combobox-item icon="beaker" value="beaker" text-label="Beaker"></calcite-combobox-item>\n      <calcite-combobox-item icon="bell" value="bell" text-label="Bell"></calcite-combobox-item>\n      <calcite-combobox-item icon="bookmark" value="bookmark" text-label="Bookmark"></calcite-combobox-item>\n      <calcite-combobox-item icon="brightness" value="brightness" text-label="Brightness"></calcite-combobox-item>\n      <calcite-combobox-item icon="calendar" value="calendar" text-label="Calendar"></calcite-combobox-item>\n      <calcite-combobox-item icon="camera" value="camera" text-label="Camera"></calcite-combobox-item>\n      <calcite-combobox-item icon="car" value="car" text-label="Car"></calcite-combobox-item>\n      <calcite-combobox-item icon="clock" value="clock" text-label="Clock"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},single.parameters),multiple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px;max-width:100%;background-color:white;padding:100px">\n    <calcite-combobox\n      label="demo combobox"\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      selection-mode="${select("selection-mode", ["multiple", "single", "ancestors"], "multiple")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      ${boolean("allow-custom-values", false)}\n      max-items="${number("max-items", 0)}"\n    >\n      <calcite-combobox-item value="Trees" text-label="Trees" selected></calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers" selected></calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals"></calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n      <calcite-combobox-item\n        value="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n        text-label="CommercialDamageAssessment - Damage to Commercial Buildings & Damage to Commercial Buildings"\n        selected\n      ></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},multiple.parameters),nestedItems.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px;max-width:100%;background-color:white;padding:100px">\n    <calcite-combobox\n      open\n      label="demo combobox"\n      selection-mode="${select("selection-mode", ["multiple", "single", "ancestors"], "multiple")}"\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      ${boolean("allow-custom-values", false)}\n      max-items="${number("max-items", 0)}"\n    >\n      <calcite-combobox-item value="ITEM-0-0" text-label="Level 1">\n        <calcite-combobox-item value="ITEM-0-1" text-label="Level 2"></calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-0-2" text-label="Level 2"></calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-0-3" text-label="Level 2"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="ITEM-1-0" text-label="Level 1">\n        <calcite-combobox-item value="ITEM-1-1" text-label="Level 2">\n          <calcite-combobox-item value="ITEM-1-1-0" text-label="Level 3"></calcite-combobox-item>\n          <calcite-combobox-item value="ITEM-1-1-1" text-label="Level 3">\n            <calcite-combobox-item value="ITEM-1-1-1-0" text-label="Level 4"></calcite-combobox-item>\n            <calcite-combobox-item value="ITEM-1-1-1-1" text-label="Level 4"></calcite-combobox-item>\n          </calcite-combobox-item>\n        </calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-1-2" text-label="Level 2"></calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-1-3" text-label="Level 2"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="ITEM-2-0" text-label="Level 1">\n        <calcite-combobox-item value="ITEM-2-1" text-label="Level 2"></calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-2-2" text-label="Level 2">\n          <calcite-combobox-item value="ITEM-2-2-0" text-label="Level 3"></calcite-combobox-item>\n        </calcite-combobox-item>\n        <calcite-combobox-item value="ITEM-2-3" text-label="Level 2"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="ITEM-0-4" text-label="Level 1"></calcite-combobox-item>\n      <calcite-combobox-item value="ITEM-0-5" text-label="Level 1"></calcite-combobox-item>\n      <calcite-combobox-item value="ITEM-0-6" text-label="Level 1"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},nestedItems.parameters),longItems_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<style>\n    calcite-combobox {\n      width: 260px;\n    }\n    calcite-combobox-item {\n      width: 260px;\n    }\n  </style>\n  <calcite-combobox open>\n    <calcite-combobox-item text-label="Layers">\n      <calcite-combobox-item text-label="Enriched USA Census Tract Areas Aug29"></calcite-combobox-item>\n      <calcite-combobox-item text-label="Viewer_Reservable_Equipments_Capacity_V2_WFL1"></calcite-combobox-item>\n    </calcite-combobox-item>\n  </calcite-combobox>`'}},longItems_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-combobox disabled>\n  <calcite-combobox-item value="Trees" text-label="Trees">\n    <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>\n    <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n    <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n  </calcite-combobox-item>\n  <calcite-combobox-item value="Flowers" text-label="Flowers" disabled>\n    <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>\n    <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>\n    <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>\n  </calcite-combobox-item>\n</calcite-combobox>`'}},disabled_TestOnly.parameters),flipPlacements_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    .my-combobox {\n      position: unset;\n      margin-top: 50px;\n    }\n  </style>\n  <div style="height: 100px; overflow:scroll;">\n    <calcite-combobox class="my-combobox" placeholder="placeholder" open>\n      <calcite-combobox-item value="Trees" text-label="Trees" aria-hidden="true">\n        <calcite-combobox-item value="Pine" text-label="Pine" aria-hidden="true"></calcite-combobox-item>\n        <calcite-combobox-item\n          value="Sequoia"\n          disabled=""\n          text-label="Sequoia"\n          aria-hidden="true"\n        ></calcite-combobox-item>\n        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir" aria-hidden="true"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers" aria-hidden="true">\n        <calcite-combobox-item value="Daffodil" text-label="Daffodil" aria-hidden="true"></calcite-combobox-item>\n        <calcite-combobox-item\n          value="Black Eyed Susan"\n          text-label="Black Eyed Susan"\n          aria-hidden="true"\n        ></calcite-combobox-item>\n        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium" aria-hidden="true"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals" aria-hidden="true">\n        <calcite-combobox-item value="Birds" text-label="Birds" aria-hidden="true"></calcite-combobox-item>\n        <calcite-combobox-item value="Reptiles" text-label="Reptiles" aria-hidden="true"></calcite-combobox-item>\n        <calcite-combobox-item value="Amphibians" text-label="Amphibians" aria-hidden="true"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks" aria-hidden="true"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects" aria-hidden="true"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers" aria-hidden="true"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n  <script>\n    document.querySelector(".my-combobox").flipPlacements = ["right"];\n  <\/script>\n`'}},flipPlacements_TestOnly.parameters),flipPositioning_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="position: absolute; bottom: 10px; left: 10px;">\n    <calcite-combobox\n      max-items="${number("max-items", 6)}"\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      selection-mode="${select("selection-mode", ["multiple", "single", "ancestors"], "multiple")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      ${boolean("allow-custom-values", false)}\n      open\n    >\n      <calcite-combobox-item value="Trees" text-label="Trees">\n        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>\n        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers">\n        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>\n        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>\n        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals">\n        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>\n        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>\n        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},flipPositioning_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px;max-width:100%;padding:100px">\n    <calcite-combobox\n      label="demo combobox"\n      selection-mode="${select("selection-mode", ["multiple", "single", "ancestors"], "multiple")}"\n      class="calcite-mode-dark"\n      placeholder="${text("placeholder", "placeholder")}"\n      label="${text("label (for screen readers)", "demo")}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      ${boolean("disabled", false)}\n      ${boolean("allow-custom-values", false)}\n      max-items="${number("max-items", 0)}"\n    >\n      <calcite-combobox-item value="Trees" text-label="Trees">\n        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>\n        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers">\n        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>\n        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>\n        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals">\n        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>\n        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>\n        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},darkModeRTL_TestOnly.parameters),singleLongLabel_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-combobox open selection-mode="single" allow-custom-values>\n    <calcite-combobox-item value="Trees" text-label="Trees">\n      <calcite-combobox-item\n        value="CommercialDamageAssessment - Damage to Commercial Buildings"\n        text-label="CommercialDamageAssessment - Damage to Commercial Buildings &  Damage to Residential Buildings "\n      ></calcite-combobox-item>\n      <calcite-combobox-item value="Sequoia" text-label="Sequoia"></calcite-combobox-item>\n      <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n    </calcite-combobox-item>\n    <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n  </calcite-combobox>\n`'}},singleLongLabel_TestOnly.parameters),withPlaceholderIcon_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-combobox\n  id="labelFour"\n  label="test"\n  placeholder="${text("placeholder", "select folder")}"\n  placeholder-icon="${text("placeholder-icon", "select")}"\n  max-items="6"\n  selection-mode="single"\n  scale="s"\n>\n  <calcite-combobox-item value="root" text-label="username" icon="home"></calcite-combobox-item>\n  <calcite-combobox-item value="1" text-label="Folder 1" icon="folder"></calcite-combobox-item>\n  <calcite-combobox-item value="2" text-label="Folder 2" icon="folder"></calcite-combobox-item>\n</calcite-combobox>`'}},withPlaceholderIcon_TestOnly.parameters),withoutPlaceholderIcon_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <div\n  style="width:400px;max-width:100%;background-color:white;padding:100px"\n>\n  <calcite-combobox placeholder="${text("placeholder", "select folder")}" selection-mode="multiple" open>\n    <calcite-combobox-item value="root" text-label="username" icon="home" selected></calcite-combobox-item>\n    <calcite-combobox-item value="1" text-label="Folder 1" icon="folder"></calcite-combobox-item>\n    <calcite-combobox-item value="2" text-label="Folder 2" icon="folder"></calcite-combobox-item>\n  </calcite-combobox>\n</div>`'}},withoutPlaceholderIcon_TestOnly.parameters),scrollingWithoutMaxItems_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:400px;max-width:100%;background-color:white;padding:100px">\n    <calcite-combobox label="demo combobox" open>\n      <calcite-combobox-item value="Trees" text-label="Trees" selected>\n        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>\n        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers">\n        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>\n        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>\n        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals">\n        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>\n        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>\n        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n      <calcite-combobox-item value="Trees" text-label="Trees" selected>\n        <calcite-combobox-item value="Pine" text-label="Pine"></calcite-combobox-item>\n        <calcite-combobox-item value="Sequoia" disabled text-label="Sequoia"></calcite-combobox-item>\n        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers">\n        <calcite-combobox-item value="Daffodil" text-label="Daffodil"></calcite-combobox-item>\n        <calcite-combobox-item value="Black Eyed Susan" text-label="Black Eyed Susan"></calcite-combobox-item>\n        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals">\n        <calcite-combobox-item value="Birds" text-label="Birds"></calcite-combobox-item>\n        <calcite-combobox-item value="Reptiles" text-label="Reptiles"></calcite-combobox-item>\n        <calcite-combobox-item value="Amphibians" text-label="Amphibians"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},scrollingWithoutMaxItems_TestOnly.parameters),optionListMinWidthMatchesInputWhenOverlayPositioningIsFixed_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    .wrapper {\n      display: flex;\n      width: 100%;\n    }\n\n    calcite-combobox {\n      width: 400px;\n      margin: 0 auto;\n    }\n  </style>\n  <div class="wrapper">\n    <calcite-combobox placeholder="placeholder" overlay-positioning="fixed" placement="bottom" open>\n      <calcite-combobox-item value="Trees" text-label="Trees" aria-hidden="true">\n        <calcite-combobox-item value="Pine" text-label="Pine" aria-hidden="true"></calcite-combobox-item>\n        <calcite-combobox-item\n          value="Sequoia"\n          disabled=""\n          text-label="Sequoia"\n          aria-hidden="true"\n        ></calcite-combobox-item>\n        <calcite-combobox-item value="Douglas Fir" text-label="Douglas Fir" aria-hidden="true"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Flowers" text-label="Flowers" aria-hidden="true">\n        <calcite-combobox-item value="Daffodil" text-label="Daffodil" aria-hidden="true"></calcite-combobox-item>\n        <calcite-combobox-item\n          value="Black Eyed Susan"\n          text-label="Black Eyed Susan"\n          aria-hidden="true"\n        ></calcite-combobox-item>\n        <calcite-combobox-item value="Nasturtium" text-label="Nasturtium" aria-hidden="true"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Animals" text-label="Animals" aria-hidden="true">\n        <calcite-combobox-item value="Birds" text-label="Birds" aria-hidden="true"></calcite-combobox-item>\n        <calcite-combobox-item value="Reptiles" text-label="Reptiles" aria-hidden="true"></calcite-combobox-item>\n        <calcite-combobox-item value="Amphibians" text-label="Amphibians" aria-hidden="true"></calcite-combobox-item>\n      </calcite-combobox-item>\n      <calcite-combobox-item value="Rocks" text-label="Rocks" aria-hidden="true"></calcite-combobox-item>\n      <calcite-combobox-item value="Insects" text-label="Insects" aria-hidden="true"></calcite-combobox-item>\n      <calcite-combobox-item value="Rivers" text-label="Rivers" aria-hidden="true"></calcite-combobox-item>\n    </calcite-combobox>\n  </div>\n`'}},optionListMinWidthMatchesInputWhenOverlayPositioningIsFixed_TestOnly.parameters),mediumIconForLargeComoboboxItem_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-combobox open scale="l">\n    <calcite-combobox-item\n      icon="altitude"\n      value="altitude"\n      text-label="Altitude"\n      selected\n      scale="l"\n    ></calcite-combobox-item>\n    <calcite-combobox-item icon="article" value="article" text-label="Article" scale="l"></calcite-combobox-item>\n    <calcite-combobox-item value="altitude" text-label="Altitude" scale="l"></calcite-combobox-item>\n    <calcite-combobox-item value="article" text-label="Article" scale="l"></calcite-combobox-item>\n  </calcite-combobox>\n`'}},mediumIconForLargeComoboboxItem_TestOnly.parameters),withSelectorIndicatorAndIcons_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-combobox label="test" placeholder="select folder" selection-mode="multiple" open>\n    <calcite-combobox-item text-label="Folder 1" icon="folder" selected>\n      <calcite-combobox-item text-label="Sub Folder 1" icon="folder" selected>\n        <calcite-combobox-item text-label="Sub Folder 2 " icon="folder" selected></calcite-combobox-item>\n      </calcite-combobox-item>\n    </calcite-combobox-item>\n    <calcite-combobox-item text-label="Folder 2" icon="folder"></calcite-combobox-item>\n    <calcite-combobox-item text-label="Folder 3" icon="folder"></calcite-combobox-item>\n    <calcite-combobox-item text-label="Folder 4"></calcite-combobox-item>\n    <calcite-combobox-item-group label="Files">\n      <calcite-combobox-item text-label="File 1" icon="file" selected>\n        <calcite-combobox-item text-label="file 2" icon="file" selected></calcite-combobox-item>\n      </calcite-combobox-item>\n    </calcite-combobox-item-group>\n  </calcite-combobox>\n`'}},withSelectorIndicatorAndIcons_TestOnly.parameters)},"./src/components/date-picker/date-picker.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(process){__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"range",(function(){return range})),__webpack_require__.d(__webpack_exports__,"rangeRTL_TestOnly",(function(){return rangeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"bgLang_TestOnly",(function(){return bgLang_TestOnly})),__webpack_require__.d(__webpack_exports__,"ptPTLang_TestOnly",(function(){return ptPTLang_TestOnly})),__webpack_require__.d(__webpack_exports__,"germanLang_TestOnly",(function(){return germanLang_TestOnly})),__webpack_require__.d(__webpack_exports__,"spanishLang_TestOnly",(function(){return spanishLang_TestOnly})),__webpack_require__.d(__webpack_exports__,"norwegianLang_TestOnly",(function(){return norwegianLang_TestOnly})),__webpack_require__.d(__webpack_exports__,"britishLang_TestOnly",(function(){return britishLang_TestOnly})),__webpack_require__.d(__webpack_exports__,"chineseLang_TestOnly",(function(){return chineseLang_TestOnly})),__webpack_require__.d(__webpack_exports__,"arabLangNumberingSystem_TestOnly",(function(){return arabLangNumberingSystem_TestOnly})),__webpack_require__.d(__webpack_exports__,"thaiLangNumberingSystem_TestOnly",(function(){return thaiLangNumberingSystem_TestOnly}));var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/helpers.ts"),_storybook_resources__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./.storybook/resources.ts"),_storybook_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./.storybook/utils.tsx"),_support_formatting__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./support/formatting.ts"),_utils_locale__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/utils/locale.ts"),_readme_md__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/date-picker/readme.md"),scale=_storybook_resources__WEBPACK_IMPORTED_MODULE_2__.a.scale;__webpack_exports__.default=Object.assign({title:"Components/Controls/DatePicker",parameters:{notes:_readme_md__WEBPACK_IMPORTED_MODULE_6__.a,chromatic:{diffThreshold:Number(process.env.CHROMATIC_DIFF_THRESHOLD)||.3,delay:500}}},Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.c)());var createAttributes=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.b)([{name:"dir",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("dir",""),delete this.build,this}},{name:"lang",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.select)("lang",_utils_locale__WEBPACK_IMPORTED_MODULE_5__.a,"en"),delete this.build,this}},{name:"max",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("max",""),delete this.build,this}},{name:"min",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("min",""),delete this.build,this}},{name:"next-month-label",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("next-month-label",""),delete this.build,this}},{name:"prev-month-label",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("prev-month-label",""),delete this.build,this}},{name:"range",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("range",!1),delete this.build,this}},{name:"scale",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.select)("scale",scale.values,scale.defaultValue),delete this.build,this}},{name:"value",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("value","2020-02-28"),delete this.build,this}}],exceptions)},simple=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes())}</div>`},range=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">
    ${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes({exceptions:["min","range"]}).concat([{name:"min",value:"2016-08-09"},{name:"range",value:"true"}]))}
  </div>`},rangeRTL_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`
  <div style="width: 400px">
    <calcite-date-picker dir="rtl" range></calcite-date-picker>
  </div>
`},darkModeRTL_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">
    ${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes({exceptions:["class","dir"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}]))}
  </div>`};darkModeRTL_TestOnly.parameters={modes:_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.e};var bgLang_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">
    ${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes({exceptions:["lang"]}).concat([{name:"lang",value:"bg"}]))}
  </div>`},ptPTLang_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">
    ${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes({exceptions:["lang"]}).concat([{name:"lang",value:"pt-PT"}]))}
  </div>`},germanLang_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">
    ${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes({exceptions:["lang","value"]}).concat([{name:"lang",value:"de"},{name:"value",value:"2022-08-11"}]))}
  </div>`},spanishLang_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">
    ${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes({exceptions:["lang","value"]}).concat([{name:"lang",value:"es"},{name:"value",value:"2023-05-11"}]))}
  </div>`},norwegianLang_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">
    ${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes({exceptions:["lang","value"]}).concat([{name:"lang",value:"nb"},{name:"value",value:"2023-05-11"}]))}
  </div>`},britishLang_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">
    ${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes({exceptions:["lang","value"]}).concat([{name:"lang",value:"en-gb"},{name:"value",value:"2024-01-11"}]))}
  </div>`},chineseLang_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">
    ${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes({exceptions:["lang","value"]}).concat([{name:"lang",value:"zh-cn"},{name:"value",value:"2024-01-11"}]))}
  </div>`},arabLangNumberingSystem_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">
    ${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes({exceptions:["lang","numberingSystem"]}).concat([{name:"lang",value:"ar"},{name:"numbering-system",value:"arab"},{name:"value",value:"2022-08-11"}]))}
  </div>`};arabLangNumberingSystem_TestOnly.parameters={chromatic:{diffThreshold:1}};var thaiLangNumberingSystem_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`<div style="width: 400px">
    ${Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-date-picker",createAttributes({exceptions:["lang","numberingSystem"]}).concat([{name:"lang",value:"th"},{name:"numbering-system",value:"thai"}]))}
  </div>`};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">${create("calcite-date-picker", createAttributes())}</div>`'}},simple.parameters),range.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">\n    ${create(\n      "calcite-date-picker",\n      createAttributes({ exceptions: ["min", "range"] }).concat([\n        { name: "min", value: "2016-08-09" },\n        { name: "range", value: "true" }\n      ])\n    )}\n  </div>`'}},range.parameters),rangeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px">\n    <calcite-date-picker dir="rtl" range></calcite-date-picker>\n  </div>\n`'}},rangeRTL_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">\n    ${create(\n      "calcite-date-picker",\n      createAttributes({ exceptions: ["class", "dir"] }).concat([\n        { name: "dir", value: "rtl" },\n        { name: "class", value: "calcite-mode-dark" }\n      ])\n    )}\n  </div>`'}},darkModeRTL_TestOnly.parameters),bgLang_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">\n    ${create("calcite-date-picker", createAttributes({ exceptions: ["lang"] }).concat([{ name: "lang", value: "bg" }]))}\n  </div>`'}},bgLang_TestOnly.parameters),ptPTLang_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">\n    ${create(\n      "calcite-date-picker",\n      createAttributes({ exceptions: ["lang"] }).concat([{ name: "lang", value: "pt-PT" }])\n    )}\n  </div>`'}},ptPTLang_TestOnly.parameters),germanLang_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">\n    ${create(\n      "calcite-date-picker",\n      createAttributes({ exceptions: ["lang", "value"] }).concat([\n        { name: "lang", value: "de" },\n        { name: "value", value: "2022-08-11" }\n      ])\n    )}\n  </div>`'}},germanLang_TestOnly.parameters),spanishLang_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">\n    ${create(\n      "calcite-date-picker",\n      createAttributes({ exceptions: ["lang", "value"] }).concat([\n        { name: "lang", value: "es" },\n        { name: "value", value: "2023-05-11" }\n      ])\n    )}\n  </div>`'}},spanishLang_TestOnly.parameters),norwegianLang_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">\n    ${create(\n      "calcite-date-picker",\n      createAttributes({ exceptions: ["lang", "value"] }).concat([\n        { name: "lang", value: "nb" },\n        { name: "value", value: "2023-05-11" }\n      ])\n    )}\n  </div>`'}},norwegianLang_TestOnly.parameters),britishLang_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">\n    ${create(\n      "calcite-date-picker",\n      createAttributes({ exceptions: ["lang", "value"] }).concat([\n        { name: "lang", value: "en-gb" },\n        { name: "value", value: "2024-01-11" }\n      ])\n    )}\n  </div>`'}},britishLang_TestOnly.parameters),chineseLang_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">\n    ${create(\n      "calcite-date-picker",\n      createAttributes({ exceptions: ["lang", "value"] }).concat([\n        { name: "lang", value: "zh-cn" },\n        { name: "value", value: "2024-01-11" }\n      ])\n    )}\n  </div>`'}},chineseLang_TestOnly.parameters),arabLangNumberingSystem_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">\n    ${create(\n      "calcite-date-picker",\n      createAttributes({ exceptions: ["lang", "numberingSystem"] }).concat([\n        { name: "lang", value: "ar" },\n        { name: "numbering-system", value: "arab" },\n        { name: "value", value: "2022-08-11" }\n      ])\n    )}\n  </div>`'}},arabLangNumberingSystem_TestOnly.parameters),thaiLangNumberingSystem_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width: 400px">\n    ${create(\n      "calcite-date-picker",\n      createAttributes({ exceptions: ["lang", "numberingSystem"] }).concat([\n        { name: "lang", value: "th" },\n        { name: "numbering-system", value: "thai" }\n      ])\n    )}\n  </div>`'}},thaiLangNumberingSystem_TestOnly.parameters)}.call(this,__webpack_require__("./node_modules/process/browser.js"))},"./src/components/date-picker/readme.md":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.a='# calcite-date-picker\n\nThe `calcite-date-picker` component allows for selecting a date via a calendar or text input. It supports multiple locales, languages, right to left, and is fully keyboard accessible.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nYou can set a min and max range, as well as an initial value with ISO 8601 formatted strings:\n\n```html\n<calcite-date-picker value="2020-03-27" min="2020-02-01" max="2021-01-01"></calcite-date-picker>\n```\n\n\n### Range\n\nYou can also add range property to activate date range mode. In this mode, you will have to set the value property directly on the component\'s instance to an array of date strings.\n\n```html\n<calcite-date-picker range min="2020-02-01" max="2021-01-01" />\n```\n\n\n\n## Properties\n\n| Property                     | Attribute                      | Description                                                                                                                                                                  | Type                                                                                                                                                                                                                                    | Default     |\n| ---------------------------- | ------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `activeDate`                 | --                             | Specifies the component\'s active date.                                                                                                                                       | `Date`                                                                                                                                                                                                                                  | `undefined` |\n| `activeRange`                | `active-range`                 | When `range` is true, specifies the active `range`. Where `"start"` specifies the starting range date and `"end"` the ending range date.                                     | `"end" \\| "start"`                                                                                                                                                                                                                      | `undefined` |\n| `headingLevel`               | `heading-level`                | Specifies the number at which section headings should start.                                                                                                                 | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`                                                                                                                                                                                                            | `undefined` |\n| `max`                        | `max`                          | Specifies the latest allowed date (`"yyyy-mm-dd"`).                                                                                                                          | `string`                                                                                                                                                                                                                                | `undefined` |\n| `maxAsDate`                  | --                             | Specifies the latest allowed date as a full date object (`new Date("yyyy-mm-dd")`).                                                                                          | `Date`                                                                                                                                                                                                                                  | `undefined` |\n| `messageOverrides`           | --                             | Use this property to override individual strings used by the component.                                                                                                      | `{ nextMonth?: string; prevMonth?: string; year?: string; }`                                                                                                                                                                            | `undefined` |\n| `min`                        | `min`                          | Specifies the earliest allowed date (`"yyyy-mm-dd"`).                                                                                                                        | `string`                                                                                                                                                                                                                                | `undefined` |\n| `minAsDate`                  | --                             | Specifies the earliest allowed date as a full date object (`new Date("yyyy-mm-dd")`).                                                                                        | `Date`                                                                                                                                                                                                                                  | `undefined` |\n| `numberingSystem`            | `numbering-system`             | Specifies the Unicode numeral system used by the component for localization. This property cannot be dynamically changed.                                                    | `"arab" \\| "arabext" \\| "bali" \\| "beng" \\| "deva" \\| "fullwide" \\| "gujr" \\| "guru" \\| "hanidec" \\| "khmr" \\| "knda" \\| "laoo" \\| "latn" \\| "limb" \\| "mlym" \\| "mong" \\| "mymr" \\| "orya" \\| "tamldec" \\| "telu" \\| "thai" \\| "tibt"` | `undefined` |\n| `proximitySelectionDisabled` | `proximity-selection-disabled` | When `true`, disables the default behavior on the third click of narrowing or extending the range and instead starts a new range.                                            | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `range`                      | `range`                        | When `true`, activates the component\'s range mode to allow a start and end date.                                                                                             | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `scale`                      | `scale`                        | Specifies the size of the component.                                                                                                                                         | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                     | `"m"`       |\n| `value`                      | `value`                        | Specifies the selected date as a string (`"yyyy-mm-dd"`), or an array of strings for `range` values (`["yyyy-mm-dd", "yyyy-mm-dd"]`).                                        | `string \\| string[]`                                                                                                                                                                                                                    | `undefined` |\n| `valueAsDate`                | --                             | Specifies the selected date as a full date object (`new Date("yyyy-mm-dd")`), or an array containing full date objects (`[new Date("yyyy-mm-dd"), new Date("yyyy-mm-dd")]`). | `Date \\| Date[]`                                                                                                                                                                                                                        | `undefined` |\n\n\n## Events\n\n| Event                          | Description                                                                                                           | Type                |\n| ------------------------------ | --------------------------------------------------------------------------------------------------------------------- | ------------------- |\n| `calciteDatePickerChange`      | Emits when a user changes the component\'s date. For `range` events, use `calciteDatePickerRangeChange`.               | `CustomEvent<void>` |\n| `calciteDatePickerRangeChange` | Emits when a user changes the component\'s date `range`. For components without `range` use `calciteDatePickerChange`. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-input-date-picker](../input-date-picker)\n\n### Depends on\n\n- [calcite-date-picker-month-header](../date-picker-month-header)\n- [calcite-date-picker-month](../date-picker-month)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-date-picker --\x3e calcite-date-picker-month-header\n  calcite-date-picker --\x3e calcite-date-picker-month\n  calcite-date-picker-month-header --\x3e calcite-icon\n  calcite-date-picker-month --\x3e calcite-date-picker-day\n  calcite-input-date-picker --\x3e calcite-date-picker\n  style calcite-date-picker fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'},"./src/components/dropdown/dropdown.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"simpleAutoWidth",(function(){return simpleAutoWidth})),__webpack_require__.d(__webpack_exports__,"simpleFullWidth",(function(){return simpleFullWidth})),__webpack_require__.d(__webpack_exports__,"withIcons",(function(){return withIcons})),__webpack_require__.d(__webpack_exports__,"groupsAndSelectionModes",(function(){return groupsAndSelectionModes})),__webpack_require__.d(__webpack_exports__,"itemsAsLinks",(function(){return itemsAsLinks})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"itemsAsLinksDarkMode",(function(){return itemsAsLinksDarkMode})),__webpack_require__.d(__webpack_exports__,"scrollingAfterCertainItems_TestOnly",(function(){return scrollingAfterCertainItems_TestOnly})),__webpack_require__.d(__webpack_exports__,"scrollingWithoutMaxItems_TestOnly",(function(){return scrollingWithoutMaxItems_TestOnly})),__webpack_require__.d(__webpack_exports__,"noScrollingWhenMaxItemsEqualsItems_TestOnly",(function(){return noScrollingWhenMaxItemsEqualsItems_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"flipPositioning_TestOnly",(function(){return flipPositioning_TestOnly})),__webpack_require__.d(__webpack_exports__,"alignedCenter_TestOnly",(function(){return alignedCenter_TestOnly})),__webpack_require__.d(__webpack_exports__,"alignedCenterRTL_TestOnly",(function(){return alignedCenterRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"flipPlacements_TestOnly",(function(){return flipPlacements_TestOnly})),__webpack_require__.d(__webpack_exports__,"mediumIconForLargeDropdownItem_TestOnly",(function(){return mediumIconForLargeDropdownItem_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),floating_ui=__webpack_require__("./src/utils/floating-ui.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Buttons/Dropdown",parameters:{notes:['# calcite-dropdown\n\nA `calcite-dropdown` can be used to provide an absolutely positioned set of selectable items. You can combine multiple groups of items and selection modes, and optionally pass a title for each group. Every `calcite-dropdown-item` must have a parent `calcite-dropdown-group`, even if the `groupTitle` property is not set.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-dropdown>\n  <calcite-button slot="trigger">Open Dropdown</calcite-button>\n  <calcite-dropdown-group>\n    <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n    <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>\n    <calcite-dropdown-item>Title</calcite-dropdown-item>\n  </calcite-dropdown-group>\n</calcite-dropdown>\n```\n\n\n### Disabling-close-on-select\n\nYou can choose to leave the dropdown open when an item is selected with the `close-on-select-disabled` attribute. Note that this will only apply when the `calcite-dropdown-group` selection mode is set to `single` or `multi` - dropdowns will always close when an item in `none` selection mode is selected.\n\n```html\n<calcite-dropdown close-on-select-disabled>\n  <calcite-button id="trigger" slot="trigger">Open dropdown</calcite-button>\n  <calcite-dropdown-group id="group-1" selection-mode="single">\n    <calcite-dropdown-item id="item-1"> Dropdown Item Content </calcite-dropdown-item>\n    <calcite-dropdown-item id="item-2" selected> Dropdown Item Content </calcite-dropdown-item>\n    <calcite-dropdown-item id="item-3"> Dropdown Item Content </calcite-dropdown-item>\n  </calcite-dropdown-group>\n</calcite-dropdown>\n```\n\n\n### Groups\n\nYou can combine groups in a single dropdown, with varying selection modes:\n\n```html\n<calcite-dropdown>\n  <calcite-button slot="trigger">Open Dropdown</calcite-button>\n  <calcite-dropdown-group group-title="Select one">\n    <calcite-dropdown-item>Apple</calcite-dropdown-item>\n    <calcite-dropdown-item selected>Orange</calcite-dropdown-item>\n    <calcite-dropdown-item>Grape</calcite-dropdown-item>\n  </calcite-dropdown-group>\n  <calcite-dropdown-group group-title="Select multi" selection-mode="multi">\n    <calcite-dropdown-item>Asparagus</calcite-dropdown-item>\n    <calcite-dropdown-item selected>Potato</calcite-dropdown-item>\n    <calcite-dropdown-item>Yam</calcite-dropdown-item>\n  </calcite-dropdown-group>\n  <calcite-dropdown-group group-title="Select none (useful for actions)" selection-mode="none">\n    <calcite-dropdown-item>Plant beans</calcite-dropdown-item>\n    <calcite-dropdown-item selected>Add peas</calcite-dropdown-item>\n  </calcite-dropdown-group>\n</calcite-dropdown>\n```\n\n\n\n## Properties\n\n| Property                | Attribute                  | Description                                                                                                                                                                                                                                                                                                                                                                   | Type                                                                              | Default                |\n| ----------------------- | -------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------- | ---------------------- |\n| `closeOnSelectDisabled` | `close-on-select-disabled` | When `true`, the component will remain open after a selection is made.  If the `selectionMode` of the selected `calcite-dropdown-item`\'s containing `calcite-dropdown-group` is `"none"`, the component will always close.                                                                                                                                                    | `boolean`                                                                         | `false`                |\n| `disabled`              | `disabled`                 | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                                                                                                                                                                                                                      | `boolean`                                                                         | `false`                |\n| `flipPlacements`        | --                         | Defines the available placements that can be used when a flip occurs.                                                                                                                                                                                                                                                                                                         | `Placement[]`                                                                     | `undefined`            |\n| `maxItems`              | `max-items`                | Specifies the maximum number of `calcite-dropdown-item`s to display before showing a scroller. Value must be greater than `0`, and does not include `groupTitle`\'s from `calcite-dropdown-group`.                                                                                                                                                                             | `number`                                                                          | `0`                    |\n| `open`                  | `open`                     | When `true`, displays and positions the component.                                                                                                                                                                                                                                                                                                                            | `boolean`                                                                         | `false`                |\n| `overlayPositioning`    | `overlay-positioning`      | Determines the type of positioning to use for the overlaid content.  Using `"absolute"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container\'s layout.  `"fixed"` should be used to escape an overflowing parent container, or when the reference element\'s `position` CSS property is `"fixed"`. | `"absolute" \\| "fixed"`                                                           | `"absolute"`           |\n| `placement`             | `placement`                | Determines where the component will be positioned relative to the container element.                                                                                                                                                                                                                                                                                          | `"bottom" \\| "bottom-end" \\| "bottom-start" \\| "top" \\| "top-end" \\| "top-start"` | `defaultMenuPlacement` |\n| `scale`                 | `scale`                    | Specifies the size of the component.                                                                                                                                                                                                                                                                                                                                          | `"l" \\| "m" \\| "s"`                                                               | `"m"`                  |\n| `selectedItems`         | --                         | Specifies the component\'s selected items.                                                                                                                                                                                                                                                                                                                                     | `HTMLCalciteDropdownItemElement[]`                                                | `[]`                   |\n| `type`                  | `type`                     | Specifies the action to open the component from the container element.                                                                                                                                                                                                                                                                                                        | `"click" \\| "hover"`                                                              | `"click"`              |\n| `width`                 | `width`                    | Specifies the width of the component.                                                                                                                                                                                                                                                                                                                                         | `"l" \\| "m" \\| "s"`                                                               | `undefined`            |\n\n\n## Events\n\n| Event                        | Description                                                                                              | Type                |\n| ---------------------------- | -------------------------------------------------------------------------------------------------------- | ------------------- |\n| `calciteDropdownBeforeClose` | Fires when the component is requested to be closed and before the closing transition begins.             | `CustomEvent<void>` |\n| `calciteDropdownBeforeOpen`  | Fires when the component is added to the DOM but not rendered, and before the opening transition begins. | `CustomEvent<void>` |\n| `calciteDropdownClose`       | Fires when the component is closed and animation is complete.                                            | `CustomEvent<void>` |\n| `calciteDropdownOpen`        | Fires when the component is open and animation is complete.                                              | `CustomEvent<void>` |\n| `calciteDropdownSelect`      | Fires when a `calcite-dropdown-item`\'s selection changes.                                                | `CustomEvent<void>` |\n\n\n## Methods\n\n### `reposition(delayed?: boolean) => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot        | Description                                                                                                                                                                   |\n| ----------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n|             | A slot for adding `calcite-dropdown-group` elements. Every `calcite-dropdown-item` must have a parent `calcite-dropdown-group`, even if the `groupTitle` property is not set. |\n| `"trigger"` | A slot for the element that triggers the `calcite-dropdown`.                                                                                                                  |\n\n\n## CSS Custom Properties\n\n| Name                       | Description                                     |\n| -------------------------- | ----------------------------------------------- |\n| `--calcite-dropdown-width` | Specifies the width of the component\'s wrapper. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-split-button](../split-button)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-split-button --\x3e calcite-dropdown\n  style calcite-dropdown fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n','# calcite-dropdown-group\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property        | Attribute        | Description                                                                                                                                                                                                                                                          | Type                               | Default     |\n| --------------- | ---------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------- | ----------- |\n| `groupTitle`    | `group-title`    | Specifies and displays a group title.                                                                                                                                                                                                                                | `string`                           | `undefined` |\n| `scale`         | `scale`          | Specifies the size of the component.                                                                                                                                                                                                                                 | `"l" \\| "m" \\| "s"`                | `undefined` |\n| `selectionMode` | `selection-mode` | Specifies the component\'s selection mode, where `"multiple"` allows any number of (or no) selected `calcite-dropdown-item`s, `"single"` allows and requires one selected `calcite-dropdown-item`, and `"none"` does not allow selection on `calcite-dropdown-item`s. | `"multiple" \\| "none" \\| "single"` | `"single"`  |\n\n\n## Slots\n\n| Slot | Description                                 |\n| ---- | ------------------------------------------- |\n|      | A slot for adding `calcite-dropdown-item`s. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n','# calcite-dropdown-item\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                                                                        | Type                         | Default     |\n| ------------- | --------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `href`        | `href`          | Specifies the URL of the linked resource, which can be set as an absolute or relative path.  Determines if the component will render as an anchor. | `string`                     | `undefined` |\n| `iconEnd`     | `icon-end`      | Specifies an icon to display at the end of the component.                                                                                          | `string`                     | `undefined` |\n| `iconFlipRtl` | `icon-flip-rtl` | Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`"rtl"`).                                        | `"both" \\| "end" \\| "start"` | `undefined` |\n| `iconStart`   | `icon-start`    | Specifies an icon to display at the start of the component.                                                                                        | `string`                     | `undefined` |\n| `label`       | `label`         | Accessible name for the component.                                                                                                                 | `string`                     | `undefined` |\n| `rel`         | `rel`           | Specifies the relationship to the linked document defined in `href`.                                                                               | `string`                     | `undefined` |\n| `selected`    | `selected`      | When `true`, the component is selected.                                                                                                            | `boolean`                    | `false`     |\n| `target`      | `target`        | Specifies the frame or window to open the linked document.                                                                                         | `string`                     | `undefined` |\n\n\n## Events\n\n| Event                       | Description                           | Type                |\n| --------------------------- | ------------------------------------- | ------------------- |\n| `calciteDropdownItemSelect` | Fires when the component is selected. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description             |\n| ---- | ----------------------- |\n|      | A slot for adding text. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-dropdown-item --\x3e calcite-icon\n  style calcite-dropdown-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'],chromatic:{delay:500}}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-dropdown
    open
    placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("close-on-select-disabled",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","none","multiple"],"single")}"
      group-title="Sort by"
    >
      <calcite-dropdown-item>Relevance</calcite-dropdown-item>
      <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>
      <calcite-dropdown-item>Title</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`}),simpleAutoWidth=function(){return formatting.a`
  <calcite-dropdown
    open
    placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("close-on-select-disabled",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","none","multiple"],"single")}"
      group-title="Sort by"
    >
      <calcite-dropdown-item>Relevance</calcite-dropdown-item>
      <calcite-dropdown-item selected>Date</calcite-dropdown-item>
      <calcite-dropdown-item>Title</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`},simpleFullWidth=function(){return formatting.a`
  <div style="width: 500px;">
    <calcite-dropdown
      style="width:100%"
      open
      placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["s","m","l"],"m")}"
      type="${Object(dist.select)("type",["click","hover"],"click")}"
      ${Object(helpers.a)("close-on-select-disabled",!1)}
      ${Object(helpers.a)("disabled",!1)}
    >
      <calcite-button width="full" slot="trigger">Open Dropdown</calcite-button>
      <calcite-dropdown-group
        selection-mode="${Object(dist.select)("group selection mode",["single","none","multiple"],"single")}"
        group-title="Sort by"
      >
        <calcite-dropdown-item>Relevance</calcite-dropdown-item>
        <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>
        <calcite-dropdown-item>Title</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-dropdown>
  </div>
`},withIcons=function(){return formatting.a`
  <calcite-dropdown
    open
    placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("close-on-select-disabled",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","none","multiple"],"single")}"
      group-title="Icon Start"
    >
      <calcite-dropdown-item icon-start="list">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="grid" selected>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="table">Table</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","none","multiple"],"single")}"
      group-title="Icon End"
    >
      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="grid" selected>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","none","multiple"],"single")}"
      group-title="Icon Both"
    >
      <calcite-dropdown-item icon-start="list" icon-end="data-check">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="grid" icon-end="data-check" selected>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="table" icon-end="data-check">Table</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`},groupsAndSelectionModes=function(){return formatting.a`
  <calcite-dropdown
    open
    placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("close-on-select-disabled",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group group-title="Select one">
      <calcite-dropdown-item>Apple</calcite-dropdown-item>
      <calcite-dropdown-item selected>Orange</calcite-dropdown-item>
      <calcite-dropdown-item>Grape</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Select multi" selection-mode="multiple">
      <calcite-dropdown-item>Asparagus</calcite-dropdown-item>
      <calcite-dropdown-item selected>Potato</calcite-dropdown-item>
      <calcite-dropdown-item selected>Yam</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Select none (useful for actions)" selection-mode="none">
      <calcite-dropdown-item>Plant beans</calcite-dropdown-item>
      <calcite-dropdown-item>Add peas</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`},itemsAsLinks=function(){return formatting.a`
  <calcite-dropdown
    open
    placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("close-on-select-disabled",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group selection-mode="none" group-title="Select one">
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Throw Apples</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Visit Oranges</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Eat Grapes</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-start="camera-flash-on"
        >Plant beans</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-end="camera-flash-on"
        >Add peas</calcite-dropdown-item
      >
    </calcite-dropdown-group>
  </calcite-dropdown>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-dropdown
    dir="rtl"
    open
    class="calcite-mode-dark"
    placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("close-on-select-disabled",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group group-title="Select one">
      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="grid" selected>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title">A link</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Select multi" selection-mode="multiple">
      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="grid" selected>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title">A link</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Select none (useful for actions)" selection-mode="none">
      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="grid" selected>Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title">A link</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var itemsAsLinksDarkMode=function(){return formatting.a`
  <calcite-dropdown
    open
    class="calcite-mode-dark"
    placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("close-on-select-disabled",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group selection-mode="none" group-title="Select one">
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Throw Apples</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Visit Oranges</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"
        >Eat Grapes</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-start="camera-flash-on"
        >Plant beans</calcite-dropdown-item
      >
      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-end="camera-flash-on"
        >Add peas</calcite-dropdown-item
      >
    </calcite-dropdown-group>
  </calcite-dropdown>
`};itemsAsLinksDarkMode.parameters={modes:utils.e};var scrollingAfterCertainItems_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-dropdown
    open
    placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
    max-items="${Object(dist.number)("max-items",7,{min:0,max:10,step:1})}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"m")}"
    type="${Object(dist.select)("type",["click","hover"],"click")}"
    ${Object(helpers.a)("close-on-select-disabled",!1)}
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-button slot="trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group group-title="First group">
      <calcite-dropdown-item>1</calcite-dropdown-item>
      <calcite-dropdown-item>2</calcite-dropdown-item>
      <calcite-dropdown-item>3</calcite-dropdown-item>
      <calcite-dropdown-item>4</calcite-dropdown-item>
      <calcite-dropdown-item>5</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Second group">
      <calcite-dropdown-item>6</calcite-dropdown-item>
      <calcite-dropdown-item>7</calcite-dropdown-item>
      <calcite-dropdown-item>8</calcite-dropdown-item>
      <calcite-dropdown-item>9</calcite-dropdown-item>
      <calcite-dropdown-item>10</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`};scrollingAfterCertainItems_TestOnly.parameters={chromatic:{delay:1500}};var scrollingWithoutMaxItems_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-dropdown open>
    <calcite-button slot="trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group
      selection-mode="${Object(dist.select)("group selection mode",["single","none","multiple"],"single")}"
      group-title="Sort by"
    >
      <calcite-dropdown-item>Relevance</calcite-dropdown-item>
      <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>
      <calcite-dropdown-item>Title</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="First group">
      <calcite-dropdown-item>1</calcite-dropdown-item>
      <calcite-dropdown-item>2</calcite-dropdown-item>
      <calcite-dropdown-item>3</calcite-dropdown-item>
      <calcite-dropdown-item>4</calcite-dropdown-item>
      <calcite-dropdown-item>5</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Second group">
      <calcite-dropdown-item>6</calcite-dropdown-item>
      <calcite-dropdown-item>7</calcite-dropdown-item>
      <calcite-dropdown-item>8</calcite-dropdown-item>
      <calcite-dropdown-item>9</calcite-dropdown-item>
      <calcite-dropdown-item>10</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`},noScrollingWhenMaxItemsEqualsItems_TestOnly=function(){return formatting.a` <calcite-dropdown max-items="3" open>
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-button slot="trigger">Activate Dropdown</calcite-button>
  <calcite-dropdown-group selection-mode="single" group-title="Selection Mode: Single">
    <calcite-dropdown-item>Relevance</calcite-dropdown-item>
    <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>
    <calcite-dropdown-item>Title</calcite-dropdown-item>
  </calcite-dropdown-group>
</calcite-dropdown>`},disabled_TestOnly=function(){return formatting.a` <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-dropdown disabled>
    <calcite-button slot="trigger">Open Dropdown</calcite-button>
    <calcite-dropdown-group group-title="First group">
      <calcite-dropdown-item>1</calcite-dropdown-item>
      <calcite-dropdown-item>2</calcite-dropdown-item>
      <calcite-dropdown-item>3</calcite-dropdown-item>
      <calcite-dropdown-item>4</calcite-dropdown-item>
      <calcite-dropdown-item>5</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Second group">
      <calcite-dropdown-item>6</calcite-dropdown-item>
      <calcite-dropdown-item>7</calcite-dropdown-item>
      <calcite-dropdown-item>8</calcite-dropdown-item>
      <calcite-dropdown-item>9</calcite-dropdown-item>
      <calcite-dropdown-item>10</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>`},flipPositioning_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <div style="margin:10px;">
    <calcite-dropdown width="m" placement="${Object(dist.select)("placement",floating_ui.b,"top")}" open>
      <calcite-button slot="trigger">Open Dropdown</calcite-button>
      <calcite-dropdown-group>
        <calcite-dropdown-item>1</calcite-dropdown-item>
        <calcite-dropdown-item>2</calcite-dropdown-item>
        <calcite-dropdown-item>3</calcite-dropdown-item>
        <calcite-dropdown-item>4</calcite-dropdown-item>
        <calcite-dropdown-item>5</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-dropdown>
  </div>
`};flipPositioning_TestOnly.parameters={layout:"fullscreen"};var alignedCenter_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <div style="text-align:center">
    <calcite-dropdown
      open
      placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["s","m","l"],"m")}"
      type="${Object(dist.select)("type",["click","hover"],"click")}"
      ${Object(helpers.a)("close-on-select-disabled",!1)}
      ${Object(helpers.a)("disabled",!1)}
    >
      <calcite-button slot="trigger">Open Dropdown</calcite-button>
      <calcite-dropdown-group
        selection-mode="${Object(dist.select)("group selection mode",["single","none","multiple"],"single")}"
        group-title="Sort by"
      >
        <calcite-dropdown-item>Relevance</calcite-dropdown-item>
        <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>
        <calcite-dropdown-item>Title</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-dropdown>
  </div>
`},alignedCenterRTL_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <div dir="rtl" style="text-align:center">
    <calcite-dropdown
      open
      placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["s","m","l"],"m")}"
      type="${Object(dist.select)("type",["click","hover"],"click")}"
      ${Object(helpers.a)("close-on-select-disabled",!1)}
      ${Object(helpers.a)("disabled",!1)}
    >
      <calcite-button slot="trigger">Open Dropdown</calcite-button>
      <calcite-dropdown-group
        selection-mode="${Object(dist.select)("group selection mode",["single","none","multiple"],"single")}"
        group-title="Sort by"
      >
        <calcite-dropdown-item>Relevance</calcite-dropdown-item>
        <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>
        <calcite-dropdown-item>Title</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-dropdown>
  </div>
`},flipPlacements_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
    .my-dropdown {
      margin-top: 50px;
    }
  </style>
  <style>
    .my-dropdown {
      margin-top: 50px;
    }
  </style>
  <div style="height: 100px; overflow:scroll;">
    <calcite-dropdown class="my-dropdown" open>
      <calcite-button slot="trigger">Open Dropdown</calcite-button>
      <calcite-dropdown-group group-title="Sort by">
        <calcite-dropdown-item>Relevance</calcite-dropdown-item>
        <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>
        <calcite-dropdown-item>Title</calcite-dropdown-item>
      </calcite-dropdown-group>
      <calcite-dropdown-group group-title="Sort by">
        <calcite-dropdown-item>Relevance</calcite-dropdown-item>
        <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>
        <calcite-dropdown-item>Title</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-dropdown>
  </div>
  <script>
    document.querySelector(".my-dropdown").flipPlacements = ["right"];
  </script>
`},mediumIconForLargeDropdownItem_TestOnly=function(){return formatting.a`
  <calcite-dropdown scale="l" width="m" open>
    <calcite-dropdown-group group-title="View">
      <calcite-dropdown-item scale="l">Table</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="grid" scale="l">Grid</calcite-dropdown-item>
      <calcite-dropdown-item icon-start="grid" icon-end="grid" scale="l">Grid</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    open\n    placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("close-on-select-disabled", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "none", "multiple"], "single")}"\n      group-title="Sort by"\n    >\n      <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n      <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>\n      <calcite-dropdown-item>Title</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},simple.parameters),simpleAutoWidth.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    open\n    placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("close-on-select-disabled", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "none", "multiple"], "single")}"\n      group-title="Sort by"\n    >\n      <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n      <calcite-dropdown-item selected>Date</calcite-dropdown-item>\n      <calcite-dropdown-item>Title</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},simpleAutoWidth.parameters),simpleFullWidth.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 500px;">\n    <calcite-dropdown\n      style="width:100%"\n      open\n      placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      width="${select("width", ["s", "m", "l"], "m")}"\n      type="${select("type", ["click", "hover"], "click")}"\n      ${boolean("close-on-select-disabled", false)}\n      ${boolean("disabled", false)}\n    >\n      <calcite-button width="full" slot="trigger">Open Dropdown</calcite-button>\n      <calcite-dropdown-group\n        selection-mode="${select("group selection mode", ["single", "none", "multiple"], "single")}"\n        group-title="Sort by"\n      >\n        <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n        <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>\n        <calcite-dropdown-item>Title</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-dropdown>\n  </div>\n`'}},simpleFullWidth.parameters),withIcons.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    open\n    placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("close-on-select-disabled", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "none", "multiple"], "single")}"\n      group-title="Icon Start"\n    >\n      <calcite-dropdown-item icon-start="list">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="grid" selected>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="table">Table</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "none", "multiple"], "single")}"\n      group-title="Icon End"\n    >\n      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="grid" selected>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "none", "multiple"], "single")}"\n      group-title="Icon Both"\n    >\n      <calcite-dropdown-item icon-start="list" icon-end="data-check">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="grid" icon-end="data-check" selected>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="table" icon-end="data-check">Table</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},withIcons.parameters),groupsAndSelectionModes.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    open\n    placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("close-on-select-disabled", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group group-title="Select one">\n      <calcite-dropdown-item>Apple</calcite-dropdown-item>\n      <calcite-dropdown-item selected>Orange</calcite-dropdown-item>\n      <calcite-dropdown-item>Grape</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Select multi" selection-mode="multiple">\n      <calcite-dropdown-item>Asparagus</calcite-dropdown-item>\n      <calcite-dropdown-item selected>Potato</calcite-dropdown-item>\n      <calcite-dropdown-item selected>Yam</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Select none (useful for actions)" selection-mode="none">\n      <calcite-dropdown-item>Plant beans</calcite-dropdown-item>\n      <calcite-dropdown-item>Add peas</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},groupsAndSelectionModes.parameters),itemsAsLinks.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    open\n    placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("close-on-select-disabled", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group selection-mode="none" group-title="Select one">\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Throw Apples</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Visit Oranges</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Eat Grapes</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-start="camera-flash-on"\n        >Plant beans</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-end="camera-flash-on"\n        >Add peas</calcite-dropdown-item\n      >\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},itemsAsLinks.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-dropdown\n    dir="rtl"\n    open\n    class="calcite-mode-dark"\n    placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("close-on-select-disabled", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group group-title="Select one">\n      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="grid" selected>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title">A link</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Select multi" selection-mode="multiple">\n      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="grid" selected>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title">A link</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Select none (useful for actions)" selection-mode="none">\n      <calcite-dropdown-item icon-end="list">List</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="grid" selected>Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-end="table">Table</calcite-dropdown-item>\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title">A link</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},darkModeRTL_TestOnly.parameters),itemsAsLinksDarkMode.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown\n    open\n    class="calcite-mode-dark"\n    placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("close-on-select-disabled", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group selection-mode="none" group-title="Select one">\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Throw Apples</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Visit Oranges</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title"\n        >Eat Grapes</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-start="camera-flash-on"\n        >Plant beans</calcite-dropdown-item\n      >\n      <calcite-dropdown-item href="http://google.com" target="_blank" title="Test title" icon-end="camera-flash-on"\n        >Add peas</calcite-dropdown-item\n      >\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},itemsAsLinksDarkMode.parameters),scrollingAfterCertainItems_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-dropdown\n    open\n    placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n    max-items="${number("max-items", 7, { min: 0, max: 10, step: 1 })}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "m")}"\n    type="${select("type", ["click", "hover"], "click")}"\n    ${boolean("close-on-select-disabled", false)}\n    ${boolean("disabled", false)}\n  >\n    <calcite-button slot="trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group group-title="First group">\n      <calcite-dropdown-item>1</calcite-dropdown-item>\n      <calcite-dropdown-item>2</calcite-dropdown-item>\n      <calcite-dropdown-item>3</calcite-dropdown-item>\n      <calcite-dropdown-item>4</calcite-dropdown-item>\n      <calcite-dropdown-item>5</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Second group">\n      <calcite-dropdown-item>6</calcite-dropdown-item>\n      <calcite-dropdown-item>7</calcite-dropdown-item>\n      <calcite-dropdown-item>8</calcite-dropdown-item>\n      <calcite-dropdown-item>9</calcite-dropdown-item>\n      <calcite-dropdown-item>10</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},scrollingAfterCertainItems_TestOnly.parameters),scrollingWithoutMaxItems_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-dropdown open>\n    <calcite-button slot="trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group\n      selection-mode="${select("group selection mode", ["single", "none", "multiple"], "single")}"\n      group-title="Sort by"\n    >\n      <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n      <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>\n      <calcite-dropdown-item>Title</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="First group">\n      <calcite-dropdown-item>1</calcite-dropdown-item>\n      <calcite-dropdown-item>2</calcite-dropdown-item>\n      <calcite-dropdown-item>3</calcite-dropdown-item>\n      <calcite-dropdown-item>4</calcite-dropdown-item>\n      <calcite-dropdown-item>5</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Second group">\n      <calcite-dropdown-item>6</calcite-dropdown-item>\n      <calcite-dropdown-item>7</calcite-dropdown-item>\n      <calcite-dropdown-item>8</calcite-dropdown-item>\n      <calcite-dropdown-item>9</calcite-dropdown-item>\n      <calcite-dropdown-item>10</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},scrollingWithoutMaxItems_TestOnly.parameters),noScrollingWhenMaxItemsEqualsItems_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-dropdown max-items="3" open>\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-button slot="trigger">Activate Dropdown</calcite-button>\n  <calcite-dropdown-group selection-mode="single" group-title="Selection Mode: Single">\n    <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n    <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>\n    <calcite-dropdown-item>Title</calcite-dropdown-item>\n  </calcite-dropdown-group>\n</calcite-dropdown>`'}},noScrollingWhenMaxItemsEqualsItems_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-dropdown disabled>\n    <calcite-button slot="trigger">Open Dropdown</calcite-button>\n    <calcite-dropdown-group group-title="First group">\n      <calcite-dropdown-item>1</calcite-dropdown-item>\n      <calcite-dropdown-item>2</calcite-dropdown-item>\n      <calcite-dropdown-item>3</calcite-dropdown-item>\n      <calcite-dropdown-item>4</calcite-dropdown-item>\n      <calcite-dropdown-item>5</calcite-dropdown-item>\n    </calcite-dropdown-group>\n    <calcite-dropdown-group group-title="Second group">\n      <calcite-dropdown-item>6</calcite-dropdown-item>\n      <calcite-dropdown-item>7</calcite-dropdown-item>\n      <calcite-dropdown-item>8</calcite-dropdown-item>\n      <calcite-dropdown-item>9</calcite-dropdown-item>\n      <calcite-dropdown-item>10</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>`'}},disabled_TestOnly.parameters),flipPositioning_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <div style="margin:10px;">\n    <calcite-dropdown width="m" placement="${select("placement", menuPlacements, "top")}" open>\n      <calcite-button slot="trigger">Open Dropdown</calcite-button>\n      <calcite-dropdown-group>\n        <calcite-dropdown-item>1</calcite-dropdown-item>\n        <calcite-dropdown-item>2</calcite-dropdown-item>\n        <calcite-dropdown-item>3</calcite-dropdown-item>\n        <calcite-dropdown-item>4</calcite-dropdown-item>\n        <calcite-dropdown-item>5</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-dropdown>\n  </div>\n`'}},flipPositioning_TestOnly.parameters),alignedCenter_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <div style="text-align:center">\n    <calcite-dropdown\n      open\n      placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      width="${select("width", ["s", "m", "l"], "m")}"\n      type="${select("type", ["click", "hover"], "click")}"\n      ${boolean("close-on-select-disabled", false)}\n      ${boolean("disabled", false)}\n    >\n      <calcite-button slot="trigger">Open Dropdown</calcite-button>\n      <calcite-dropdown-group\n        selection-mode="${select("group selection mode", ["single", "none", "multiple"], "single")}"\n        group-title="Sort by"\n      >\n        <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n        <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>\n        <calcite-dropdown-item>Title</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-dropdown>\n  </div>\n`'}},alignedCenter_TestOnly.parameters),alignedCenterRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <div dir="rtl" style="text-align:center">\n    <calcite-dropdown\n      open\n      placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      width="${select("width", ["s", "m", "l"], "m")}"\n      type="${select("type", ["click", "hover"], "click")}"\n      ${boolean("close-on-select-disabled", false)}\n      ${boolean("disabled", false)}\n    >\n      <calcite-button slot="trigger">Open Dropdown</calcite-button>\n      <calcite-dropdown-group\n        selection-mode="${select("group selection mode", ["single", "none", "multiple"], "single")}"\n        group-title="Sort by"\n      >\n        <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n        <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>\n        <calcite-dropdown-item>Title</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-dropdown>\n  </div>\n`'}},alignedCenterRTL_TestOnly.parameters),flipPlacements_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n    .my-dropdown {\n      margin-top: 50px;\n    }\n  </style>\n  <style>\n    .my-dropdown {\n      margin-top: 50px;\n    }\n  </style>\n  <div style="height: 100px; overflow:scroll;">\n    <calcite-dropdown class="my-dropdown" open>\n      <calcite-button slot="trigger">Open Dropdown</calcite-button>\n      <calcite-dropdown-group group-title="Sort by">\n        <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n        <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>\n        <calcite-dropdown-item>Title</calcite-dropdown-item>\n      </calcite-dropdown-group>\n      <calcite-dropdown-group group-title="Sort by">\n        <calcite-dropdown-item>Relevance</calcite-dropdown-item>\n        <calcite-dropdown-item selected>Date modified</calcite-dropdown-item>\n        <calcite-dropdown-item>Title</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-dropdown>\n  </div>\n  <script>\n    document.querySelector(".my-dropdown").flipPlacements = ["right"];\n  <\/script>\n`'}},flipPlacements_TestOnly.parameters),mediumIconForLargeDropdownItem_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-dropdown scale="l" width="m" open>\n    <calcite-dropdown-group group-title="View">\n      <calcite-dropdown-item scale="l">Table</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="grid" scale="l">Grid</calcite-dropdown-item>\n      <calcite-dropdown-item icon-start="grid" icon-end="grid" scale="l">Grid</calcite-dropdown-item>\n    </calcite-dropdown-group>\n  </calcite-dropdown>\n`'}},mediumIconForLargeDropdownItem_TestOnly.parameters)},"./src/components/fab/fab.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),resources=__webpack_require__("./.storybook/resources.ts"),ICONS_plus="plus",formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),scale=resources.a.scale,createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Buttons/FAB",parameters:{notes:'# calcite-fab\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nRenders a `calcite-fab` that displays only an icon and a tooltip label.\n\n```html\n<calcite-fab label="Performs my custom action"></calcite-fab>\n```\n\n\n### Loading-and-disabled\n\nRenders a `calcite-fab` that is loading and disabled.\n\n```html\n<calcite-fab loading disabled></calcite-fab>\n```\n\n\n### With-text\n\nRenders a `calcite-fab` that displays text along side an icon and a tooltip label.\n\n```html\n<calcite-fab label="Performs my custom action" text="Perform Action!" text-enabled></calcite-fab>\n```\n\n\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                  | Type                                            | Default      |\n| ------------- | --------------- | -------------------------------------------------------------------------------------------- | ----------------------------------------------- | ------------ |\n| `appearance`  | `appearance`    | Specifies the appearance style of the component.                                             | `"outline-fill" \\| "solid"`                     | `"solid"`    |\n| `disabled`    | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity.     | `boolean`                                       | `false`      |\n| `icon`        | `icon`          | Specifies an icon to display.                                                                | `string`                                        | `ICONS.plus` |\n| `iconFlipRtl` | `icon-flip-rtl` | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`). | `boolean`                                       | `false`      |\n| `kind`        | `kind`          | Specifies the kind of the component (will apply to border and background).                   | `"brand" \\| "danger" \\| "inverse" \\| "neutral"` | `"brand"`    |\n| `label`       | `label`         | Accessible name for the component.                                                           | `string`                                        | `undefined`  |\n| `loading`     | `loading`       | When `true`, a busy indicator is displayed.                                                  | `boolean`                                       | `false`      |\n| `scale`       | `scale`         | Specifies the size of the component.                                                         | `"l" \\| "m" \\| "s"`                             | `"m"`        |\n| `text`        | `text`          | Specifies text to accompany the component\'s icon.                                            | `string`                                        | `undefined`  |\n| `textEnabled` | `text-enabled`  | When `true`, displays the `text` value in the component.                                     | `boolean`                                       | `false`      |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-button](../button)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-fab --\x3e calcite-button\n  calcite-button --\x3e calcite-loader\n  calcite-button --\x3e calcite-icon\n  style calcite-fab fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"appearance",commit:function(){return this.value=Object(dist.select)("appearance",["solid","outline-fill"],"outline-fill"),delete this.build,this}},{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1),delete this.build,this}},{name:"icon",commit:function(){return this.value=Object(dist.text)("icon",ICONS_plus),delete this.build,this}},{name:"label",commit:function(){return this.value=Object(dist.text)("label","Label"),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1),delete this.build,this}},{name:"text",commit:function(){return this.value=Object(dist.text)("text","Text"),delete this.build,this}},{name:"text-enabled",commit:function(){return this.value=Object(dist.boolean)("text-enabled",!0),delete this.build,this}},{name:"scale",commit:function(){return this.value=Object(dist.select)("scale",scale.values,scale.defaultValue),delete this.build,this}}],exceptions)}),simple=function(){return Object(utils.a)("calcite-fab",createAttributes())},disabled_TestOnly=function(){return formatting.a`<calcite-fab disabled icon="plus"></calcite-fab>`},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-fab",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}]))};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => create("calcite-fab", createAttributes())'}},simple.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-fab disabled icon="plus"></calcite-fab>`'}},disabled_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-fab",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-mode-dark"\n      }\n    ])\n  )'}},darkModeRTL_TestOnly.parameters)},"./src/components/flow-item/flow-item.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"onlyProps",(function(){return onlyProps})),__webpack_require__.d(__webpack_exports__,"disabledWithStyledSlot_TestOnly",(function(){return disabledWithStyledSlot_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"noDoubleScrollbars_TestOnly",(function(){return noDoubleScrollbars_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),resources=__webpack_require__("./.storybook/resources.ts"),SLOTS_headerActionsStart="header-actions-start",SLOTS_headerActionsEnd="header-actions-end",SLOTS_headerContent="header-content",SLOTS_footer="footer",formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Flow Item",parameters:{notes:'# calcite-flow-item\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute       | Description                                                                                   | Type                                                   | Default     |\n| ------------------ | --------------- | --------------------------------------------------------------------------------------------- | ------------------------------------------------------ | ----------- |\n| `beforeBack`       | --              | When provided, the method will be called before it is removed from its parent `calcite-flow`. | `() => Promise<void>`                                  | `undefined` |\n| `closable`         | `closable`      | When `true`, displays a close button in the trailing side of the component\'s header.          | `boolean`                                              | `false`     |\n| `closed`           | `closed`        | When `true`, the component will be hidden.                                                    | `boolean`                                              | `false`     |\n| `description`      | `description`   | A description for the component.                                                              | `string`                                               | `undefined` |\n| `disabled`         | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity.      | `boolean`                                              | `false`     |\n| `heading`          | `heading`       | The component header text.                                                                    | `string`                                               | `undefined` |\n| `headingLevel`     | `heading-level` | Specifies the number at which section headings should start.                                  | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`                           | `undefined` |\n| `loading`          | `loading`       | When `true`, a busy indicator is displayed.                                                   | `boolean`                                              | `false`     |\n| `menuOpen`         | `menu-open`     | When `true`, the action menu items in the `header-menu-actions` slot are open.                | `boolean`                                              | `false`     |\n| `messageOverrides` | --              | Use this property to override individual strings used by the component.                       | `{ back?: string; close?: string; options?: string; }` | `undefined` |\n\n\n## Events\n\n| Event                   | Description                             | Type                |\n| ----------------------- | --------------------------------------- | ------------------- |\n| `calciteFlowItemBack`   | Fires when the back button is clicked.  | `CustomEvent<void>` |\n| `calciteFlowItemClose`  | Fires when the close button is clicked. | `CustomEvent<void>` |\n| `calciteFlowItemScroll` | Fires when the content is scrolled.     | `CustomEvent<void>` |\n\n\n## Methods\n\n### `scrollContentTo(options?: ScrollToOptions) => Promise<void>`\n\nScrolls the component\'s content to a specified set of coordinates.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot                     | Description                                                                                 |\n| ------------------------ | ------------------------------------------------------------------------------------------- |\n|                          | A slot for adding custom content.                                                           |\n| `"fab"`                  | A slot for adding a `calcite-fab` (floating action button) to perform an action.            |\n| `"footer"`               | A slot for adding custom content to the component\'s footer.                                 |\n| `"footer-actions"`       | A slot for adding `calcite-button`s to the component\'s footer.                              |\n| `"header-actions-end"`   | A slot for adding `calcite-action`s or content to the end side of the component\'s header.   |\n| `"header-actions-start"` | A slot for adding `calcite-action`s or content to the start side of the component\'s header. |\n| `"header-content"`       | A slot for adding custom content to the component\'s header.                                 |\n| `"header-menu-actions"`  | A slot for adding an overflow menu with `calcite-action`s inside a `calcite-dropdown`.      |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-action](../action)\n- [calcite-panel](../panel)\n- [calcite-tooltip](../tooltip)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-flow-item --\x3e calcite-action\n  calcite-flow-item --\x3e calcite-panel\n  calcite-flow-item --\x3e calcite-tooltip\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-panel --\x3e calcite-action\n  calcite-panel --\x3e calcite-action-menu\n  calcite-panel --\x3e calcite-scrim\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-popover\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  calcite-scrim --\x3e calcite-loader\n  style calcite-flow-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,scale=resources.a.scale;return Object(utils.b)([{name:"closed",commit:function(){return this.value=Object(dist.boolean)("closed",!1),delete this.build,this}},{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1),delete this.build,this}},{name:"closable",commit:function(){return this.value=Object(dist.boolean)("closable",!1),delete this.build,this}},{name:"height-scale",commit:function(){return this.value=Object(dist.select)("heightScale",scale.values,scale.defaultValue),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1),delete this.build,this}}],exceptions)}),headerHTML=`<h3 class="heading" slot="${SLOTS_headerContent}">Heading</h3>`,contentHTML=formatting.a`
  <p>
    Enim nascetur erat faucibus ornare varius arcu fames bibendum habitant felis elit ante. Nibh morbi massa curae; leo
    semper diam aenean congue taciti eu porta. Varius faucibus ridiculus donec. Montes sit ligula purus porta ante lacus
    habitasse libero cubilia purus! In quis congue arcu maecenas felis cursus pellentesque nascetur porta donec non.
    Quisque, rutrum ligula pharetra justo habitasse facilisis rutrum neque. Magnis nostra nec nulla dictumst taciti
    consectetur. Non porttitor tempor orci dictumst magna porta vitae.
  </p>
  <p>
    Ipsum nostra tempus etiam augue ullamcorper scelerisque sapien potenti erat nisi gravida. Vehicula sem tristique
    sed. Nullam, sociis imperdiet ullamcorper? Dapibus fames primis ridiculus vulputate, habitant inceptos! Nunc
    torquent lorem urna vehicula volutpat donec nec. Orci massa eu nec donec enim fames, faucibus quam aenean. Laoreet
    tellus tempor quisque ornare lobortis praesent erat senectus natoque consectetur donec imperdiet. Quis sem cum
    gravida dictumst a pretium purus aptent amet id. Orci habitasse, praesent facilisis condimentum. Nec elit turpis
    leo.
  </p>
  <p>
    Tempus per volutpat diam tempor mauris parturient vulputate leo id libero quisque. Mattis aliquam dictum venenatis
    fringilla. Taciti venenatis, ultrices sollicitudin consequat. Sapien fusce est iaculis potenti ut auctor potenti.
    Nisi malesuada feugiat vulputate vitae porttitor. Nullam nullam nullam accumsan quis magna in. Elementum, nascetur
    gravida cras scelerisque inceptos aenean inceptos potenti. Lobortis condimentum accumsan posuere curabitur fermentum
    diam, natoque quisque. Eget placerat sed aptent orci urna fusce magnis. Vel lacus magnis nunc.
  </p>
`,footerHTML=formatting.a`
  <calcite-button slot="${SLOTS_footer}" width="half" appearance="outline">Naw.</calcite-button>
  <calcite-button slot="${SLOTS_footer}" width="half">Yeah!</calcite-button>
`,flowItemContent=`${headerHTML}\n  <calcite-action text="Action" label="Action" slot="${SLOTS_headerActionsStart}" icon="bluetooth"></calcite-action>\n  <calcite-action text="Action" label="Action" slot="${SLOTS_headerActionsEnd}" icon="attachment"></calcite-action>\n  ${contentHTML}\n  ${footerHTML}`,simple=function(){return Object(utils.a)("calcite-flow-item",createAttributes(),formatting.a`
      ${headerHTML}
      <calcite-action text="Action" label="Action" slot="${SLOTS_headerActionsStart}" icon="bluetooth"></calcite-action>
      <calcite-action text="Action" label="Action" slot="${SLOTS_headerActionsEnd}" icon="attachment"></calcite-action>
      ${contentHTML}
      <calcite-fab slot="fab"></calcite-fab>
      ${footerHTML}
    `)},onlyProps=function(){return formatting.a`
  <div style="width: 300px;">
    <calcite-flow-item
      height-scale="s"
      heading-level="${Object(dist.text)("heading-level","2")}"
      description="${Object(dist.text)("description","Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.")}"
      heading="${Object(dist.text)("heading","flowItem title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum")}"
    />
  </div>
`},disabledWithStyledSlot_TestOnly=function(){return formatting.a`
  <calcite-flow-item style="height: 100%;" heading="Heading" disabled>
    <div id="content" style="height: 100%;">${contentHTML}</div>
  </calcite-flow-item>
`},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-flow-item",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}]),flowItemContent)};darkModeRTL_TestOnly.parameters={modes:utils.e};var noDoubleScrollbars_TestOnly=function(){return formatting.a`
  <style>
    #container {
      display: flex;
      max-height: 540px;
      width: 300px;
    }

    .content {
      height: 100%;
      display: flex;
      padding: 10px;
      overflow-y: auto; /* Control scrollbar via child */
    }
  </style>
  <div id="container">
    <calcite-flow>
      <calcite-flow-item heading="Example">
        <div>### Stickied Content e.g. toolbar</div>
        <div class="content">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sapien lectus, ultricies a molestie nec,
          sollicitudin ac nulla. Pellentesque tincidunt malesuada arcu et placerat. In malesuada neque lectus, at congue
          est malesuada quis. Proin tincidunt lacus laoreet mauris fringilla accumsan. Cras nec enim eu lectus suscipit
          vestibulum a laoreet arcu. Duis posuere nunc vel enim blandit, nec vehicula orci aliquam. Vestibulum hendrerit
          mi vel nisi posuere accumsan. Aenean efficitur est id cursus convallis. Morbi turpis ante, sodales eu tortor
          eu, mattis bibendum purus. Morbi iaculis nisl nunc, quis accumsan quam laoreet vitae. Aliquam ex ligula,
          ornare eu ex vitae, tincidunt venenatis lacus. Phasellus risus quam, elementum sed justo porttitor,
          ullamcorper mattis nisl. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia
          curae; Nulla non dui at metus porta lacinia congue sit amet quam. Mauris viverra diam neque, in blandit leo
          vehicula et. Donec non purus vitae nunc tincidunt egestas. Nunc pretium enim magna, sed fringilla lacus
          viverra in. Nam et pretium nisi. Ut bibendum, ipsum sit amet egestas hendrerit, quam orci sollicitudin purus,
          sit amet finibus mauris erat in eros. Integer est dui, vehicula a ipsum id, pellentesque semper elit. Fusce
          euismod volutpat eros vitae imperdiet. Nam suscipit lacus id posuere pharetra. Cras eros ipsum, feugiat non
          leo non, ornare malesuada eros. Donec egestas purus non quam tempus commodo. Maecenas ex augue, euismod eget
          magna in, dapibus fermentum felis. Phasellus justo felis, sollicitudin ut ex sed, lobortis scelerisque sem.
          Pellentesque semper placerat velit, sit amet viverra tortor ultricies eu. Pellentesque habitant morbi
          tristique senectus et netus et malesuada fames ac turpis egestas. Phasellus feugiat, augue in molestie
          imperdiet, felis turpis facilisis tortor, at tempus purus risus et sapien. Fusce id nisi id orci elementum
          sollicitudin. Nam id libero eu odio efficitur rutrum maximus porta lorem. Nunc tristique interdum augue,
          sodales viverra lectus efficitur vitae. Nam molestie, neque consequat mollis pulvinar, sapien sem semper nunc,
          et euismod enim sem vitae ligula.
        </div>
      </calcite-flow-item>
    </calcite-flow>
  </div>
`};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-flow-item",\n    createAttributes(),\n    html`\n      ${headerHTML}\n      <calcite-action text="Action" label="Action" slot="${SLOTS.headerActionsStart}" icon="bluetooth"></calcite-action>\n      <calcite-action text="Action" label="Action" slot="${SLOTS.headerActionsEnd}" icon="attachment"></calcite-action>\n      ${contentHTML}\n      <calcite-fab slot="fab"></calcite-fab>\n      ${footerHTML}\n    `\n  )'}},simple.parameters),onlyProps.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 300px;">\n    <calcite-flow-item\n      height-scale="s"\n      heading-level="${text("heading-level", "2")}"\n      description="${text(\n        "description",\n        "Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n      )}"\n      heading="${text(\n        "heading",\n        "flowItem title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"\n      )}"\n    />\n  </div>\n`'}},onlyProps.parameters),disabledWithStyledSlot_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-flow-item style="height: 100%;" heading="Heading" disabled>\n    <div id="content" style="height: 100%;">${contentHTML}</div>\n  </calcite-flow-item>\n`'}},disabledWithStyledSlot_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-flow-item",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-mode-dark"\n      }\n    ]),\n    flowItemContent\n  )'}},darkModeRTL_TestOnly.parameters),noDoubleScrollbars_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    #container {\n      display: flex;\n      max-height: 540px;\n      width: 300px;\n    }\n\n    .content {\n      height: 100%;\n      display: flex;\n      padding: 10px;\n      overflow-y: auto; /* Control scrollbar via child */\n    }\n  </style>\n  <div id="container">\n    <calcite-flow>\n      <calcite-flow-item heading="Example">\n        <div>### Stickied Content e.g. toolbar</div>\n        <div class="content">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sapien lectus, ultricies a molestie nec,\n          sollicitudin ac nulla. Pellentesque tincidunt malesuada arcu et placerat. In malesuada neque lectus, at congue\n          est malesuada quis. Proin tincidunt lacus laoreet mauris fringilla accumsan. Cras nec enim eu lectus suscipit\n          vestibulum a laoreet arcu. Duis posuere nunc vel enim blandit, nec vehicula orci aliquam. Vestibulum hendrerit\n          mi vel nisi posuere accumsan. Aenean efficitur est id cursus convallis. Morbi turpis ante, sodales eu tortor\n          eu, mattis bibendum purus. Morbi iaculis nisl nunc, quis accumsan quam laoreet vitae. Aliquam ex ligula,\n          ornare eu ex vitae, tincidunt venenatis lacus. Phasellus risus quam, elementum sed justo porttitor,\n          ullamcorper mattis nisl. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia\n          curae; Nulla non dui at metus porta lacinia congue sit amet quam. Mauris viverra diam neque, in blandit leo\n          vehicula et. Donec non purus vitae nunc tincidunt egestas. Nunc pretium enim magna, sed fringilla lacus\n          viverra in. Nam et pretium nisi. Ut bibendum, ipsum sit amet egestas hendrerit, quam orci sollicitudin purus,\n          sit amet finibus mauris erat in eros. Integer est dui, vehicula a ipsum id, pellentesque semper elit. Fusce\n          euismod volutpat eros vitae imperdiet. Nam suscipit lacus id posuere pharetra. Cras eros ipsum, feugiat non\n          leo non, ornare malesuada eros. Donec egestas purus non quam tempus commodo. Maecenas ex augue, euismod eget\n          magna in, dapibus fermentum felis. Phasellus justo felis, sollicitudin ut ex sed, lobortis scelerisque sem.\n          Pellentesque semper placerat velit, sit amet viverra tortor ultricies eu. Pellentesque habitant morbi\n          tristique senectus et netus et malesuada fames ac turpis egestas. Phasellus feugiat, augue in molestie\n          imperdiet, felis turpis facilisis tortor, at tempus purus risus et sapien. Fusce id nisi id orci elementum\n          sollicitudin. Nam id libero eu odio efficitur rutrum maximus porta lorem. Nunc tristique interdum augue,\n          sodales viverra lectus efficitur vitae. Nam molestie, neque consequat mollis pulvinar, sapien sem semper nunc,\n          et euismod enim sem vitae ligula.\n        </div>\n      </calcite-flow-item>\n    </calcite-flow>\n  </div>\n`'}},noDoubleScrollbars_TestOnly.parameters)},"./src/components/flow/flow.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"noDoubleScrollbars_TestOnly",(function(){return noDoubleScrollbars_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),readme=__webpack_require__("./src/components/panel/readme.md"),resources=__webpack_require__("./src/components/panel/resources.ts"),createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Flow",parameters:{notes:{flow:'# calcite-flow\n\nThe `calcite-flow` component is a series of panels that provides a user with a workflow (eg. editing experience), by which the user can switch from panel to panel of `calcite-panel`s.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nRenders a basic flow with a couple `calcite-panel`s.\n\n```html\n<calcite-flow>\n  <calcite-panel heading="one, two, three, four">\n    \x3c!-- image --\x3e\n  </calcite-panel>\n  <calcite-panel heading="tell me that you love me more">\n    \x3c!-- image --\x3e\n  </calcite-panel>\n</calcite-flow>\n```\n\n\n### Menu-actions-and-footer-actions\n\nRenders a flow with menu-actions and footer-actions in the form of buttons.\n\n```html\n<calcite-flow>\n  <calcite-panel heading="What are the most popular commute alternatives?">\n    <button slot="header-menu-actions">Reset</button>\n    <button slot="header-menu-actions">Rename</button>\n    <button slot="footer-actions">Save</button>\n    <button slot="footer-actions">Cancel</button>\n  </calcite-panel>\n</calcite-flow>\n```\n\n\n\n## Methods\n\n### `back() => Promise<HTMLCalciteFlowItemElement>`\n\nRemoves the currently active `calcite-flow-item`.\n\n#### Returns\n\nType: `Promise<HTMLCalciteFlowItemElement>`\n\n\n\n\n## Slots\n\n| Slot | Description                                                      |\n| ---- | ---------------------------------------------------------------- |\n|      | A slot for adding `calcite-flow-item` elements to the component. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',item:readme.a}}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([],exceptions)}),createFlowItemAttributes=function(group){return[{name:"disabled",value:Object(dist.boolean)("disabled",!1,group)},{name:"heading",value:Object(dist.text)("heading","Heading",group)},{name:"loading",value:Object(dist.boolean)("loading",!1,group)},{name:"menu-open",value:Object(dist.boolean)("menuOpen",!1,group)},{name:"description",value:Object(dist.text)("description","Description",group)}]},menuActionsHTML=formatting.a`
  <calcite-action
    slot="${resources.a.headerMenuActions}"
    text-enabled
    text="Add"
    label="Add Item"
    icon="plus"
  ></calcite-action>
  <calcite-action
    slot="${resources.a.headerMenuActions}"
    text-enabled
    text="Save"
    label="Save Item"
    icon="save"
  ></calcite-action>
  <calcite-action
    slot="${resources.a.headerMenuActions}"
    text-enabled
    text="Layers"
    label="View Layers"
    icon="layers"
  ></calcite-action>
`,footerActionsHTML=formatting.a`
  <calcite-button slot="${resources.a.footerActions}" width="half" appearance="outline">Cancel</calcite-button>
  <calcite-button slot="${resources.a.footerActions}" width="half">Save</button>
`;function createItemHTML(content){return`${menuActionsHTML}${content}${footerActionsHTML}`}var item1HTML=formatting.a`
  <p>
    Enim nascetur erat faucibus ornare varius arcu fames bibendum habitant felis elit ante. Nibh morbi massa curae; leo
    semper diam aenean congue taciti eu porta. Varius faucibus ridiculus donec. Montes sit ligula purus porta ante lacus
    habitasse libero cubilia purus! In quis congue arcu maecenas felis cursus pellentesque nascetur porta donec non.
    Quisque, rutrum ligula pharetra justo habitasse facilisis rutrum neque. Magnis nostra nec nulla dictumst taciti
    consectetur. Non porttitor tempor orci dictumst magna porta vitae.
  </p>
  <p>
    Ipsum nostra tempus etiam augue ullamcorper scelerisque sapien potenti erat nisi gravida. Vehicula sem tristique
    sed. Nullam, sociis imperdiet ullamcorper? Dapibus fames primis ridiculus vulputate, habitant inceptos! Nunc
    torquent lorem urna vehicula volutpat donec nec. Orci massa eu nec donec enim fames, faucibus quam aenean. Laoreet
    tellus tempor quisque ornare lobortis praesent erat senectus natoque consectetur donec imperdiet. Quis sem cum
    gravida dictumst a pretium purus aptent amet id. Orci habitasse, praesent facilisis condimentum. Nec elit turpis
    leo.
  </p>
  <p>
    Tempus per volutpat diam tempor mauris parturient vulputate leo id libero quisque. Mattis aliquam dictum venenatis
    fringilla. Taciti venenatis, ultrices sollicitudin consequat. Sapien fusce est iaculis potenti ut auctor potenti.
    Nisi malesuada feugiat vulputate vitae porttitor. Nullam nullam nullam accumsan quis magna in. Elementum, nascetur
    gravida cras scelerisque inceptos aenean inceptos potenti. Lobortis condimentum accumsan posuere curabitur fermentum
    diam, natoque quisque. Eget placerat sed aptent orci urna fusce magnis. Vel lacus magnis nunc.
  </p>
  <p>
    Magna ligula neque phasellus. Velit duis auctor etiam nullam sociis nam neque quis. Donec fusce bibendum quam
    egestas sociosqu orci tempus vulputate egestas penatibus urna sociosqu. Nulla nam potenti diam egestas litora
    lobortis tristique maecenas pulvinar maecenas vitae tortor. Lacus purus facilisi est accumsan varius gravida
    facilisis rutrum tortor potenti rhoncus id. Ipsum praesent tristique blandit taciti morbi torquent pharetra
    fermentum aenean!
  </p>
  <p>
    Congue eu duis integer nisl molestie nostra dis auctor lobortis tellus parturient. Porttitor dis curae; maecenas
    quis praesent ridiculus posuere mus. Dictumst, vivamus fames semper congue fusce! Nunc placerat enim fermentum
    posuere magna justo habitasse. Tristique placerat mauris, per nulla gravida dui urna ut nec venenatis! Non lacus
    iaculis quisque, neque erat integer. Duis tortor ad habitant turpis dis eu mollis at facilisis. Tellus nisl amet
    morbi fringilla mus dui neque himenaeos maecenas platea venenatis. Tristique nisl quisque ad aliquam senectus
    pulvinar litora.
  </p>
`,item2HTML=formatting.a`
  <ul>
    <li>
      Morbi in sem quis dui placerat ornare. Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed
      arcu. Cras consequat.
    </li>
    <li>
      Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam
      erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus.
    </li>
    <li>
      Phasellus ultrices nulla quis nibh. Quisque a lectus. Donec consectetuer ligula vulputate sem tristique cursus.
      Nam nulla quam, gravida non, commodo a, sodales sit amet, nisi.
    </li>
    <li>
      Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.
    </li>
  </ul>
`,simple=function(){return Object(utils.a)("calcite-flow",createAttributes(),`${Object(utils.a)("calcite-flow-item",createFlowItemAttributes("Flow Item 1"),createItemHTML(item1HTML))}\n    ${Object(utils.a)("calcite-flow-item",createFlowItemAttributes("Flow Item 2"),createItemHTML(item2HTML))}`)},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-flow",createAttributes({exceptions:["dir"]}).concat({name:"class",value:"calcite-mode-dark"},{name:"dir",value:"rtl"}),`${Object(utils.a)("calcite-flow-item",createFlowItemAttributes("Flow Item 1"),createItemHTML(item1HTML))}\n    ${Object(utils.a)("calcite-flow-item",createFlowItemAttributes("Flow Item 2"),createItemHTML(item2HTML))}`)},noDoubleScrollbars_TestOnly=function(){return formatting.a`
  <style>
    #container {
      display: flex;
      max-height: 540px;
      width: 300px;
    }
    .content {
      height: 100%;
      display: flex;
      padding: 10px;
      overflow-y: auto; /* Control scrollbar via child */
    }
  </style>
  <div id="container">
    <calcite-flow>
      <calcite-flow-item heading="Example">
        <div>### Stickied Content e.g. toolbar</div>
        <div class="content">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sapien lectus, ultricies a molestie nec,
          sollicitudin ac nulla. Pellentesque tincidunt malesuada arcu et placerat. In malesuada neque lectus, at congue
          est malesuada quis. Proin tincidunt lacus laoreet mauris fringilla accumsan. Cras nec enim eu lectus suscipit
          vestibulum a laoreet arcu. Duis posuere nunc vel enim blandit, nec vehicula orci aliquam. Vestibulum hendrerit
          mi vel nisi posuere accumsan. Aenean efficitur est id cursus convallis. Morbi turpis ante, sodales eu tortor
          eu, mattis bibendum purus. Morbi iaculis nisl nunc, quis accumsan quam laoreet vitae. Aliquam ex ligula,
          ornare eu ex vitae, tincidunt venenatis lacus. Phasellus risus quam, elementum sed justo porttitor,
          ullamcorper mattis nisl. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia
          curae; Nulla non dui at metus porta lacinia congue sit amet quam. Mauris viverra diam neque, in blandit leo
          vehicula et. Donec non purus vitae nunc tincidunt egestas. Nunc pretium enim magna, sed fringilla lacus
          viverra in. Nam et pretium nisi. Ut bibendum, ipsum sit amet egestas hendrerit, quam orci sollicitudin purus,
          sit amet finibus mauris erat in eros. Integer est dui, vehicula a ipsum id, pellentesque semper elit. Fusce
          euismod volutpat eros vitae imperdiet. Nam suscipit lacus id posuere pharetra. Cras eros ipsum, feugiat non
          leo non, ornare malesuada eros. Donec egestas purus non quam tempus commodo. Maecenas ex augue, euismod eget
          magna in, dapibus fermentum felis. Phasellus justo felis, sollicitudin ut ex sed, lobortis scelerisque sem.
          Pellentesque semper placerat velit, sit amet viverra tortor ultricies eu. Pellentesque habitant morbi
          tristique senectus et netus et malesuada fames ac turpis egestas. Phasellus feugiat, augue in molestie
          imperdiet, felis turpis facilisis tortor, at tempus purus risus et sapien. Fusce id nisi id orci elementum
          sollicitudin. Nam id libero eu odio efficitur rutrum maximus porta lorem. Nunc tristique interdum augue,
          sodales viverra lectus efficitur vitae. Nam molestie, neque consequat mollis pulvinar, sapien sem semper nunc,
          et euismod enim sem vitae ligula.
        </div>
      </calcite-flow-item>
    </calcite-flow>
  </div>
`};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-flow",\n    createAttributes(),\n    `${create("calcite-flow-item", createFlowItemAttributes("Flow Item 1"), createItemHTML(item1HTML))}\n    ${create("calcite-flow-item", createFlowItemAttributes("Flow Item 2"), createItemHTML(item2HTML))}`\n  )'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-flow",\n    createAttributes({ exceptions: ["dir"] }).concat(\n      {\n        name: "class",\n        value: "calcite-mode-dark"\n      },\n      { name: "dir", value: "rtl" }\n    ),\n    `${create("calcite-flow-item", createFlowItemAttributes("Flow Item 1"), createItemHTML(item1HTML))}\n    ${create("calcite-flow-item", createFlowItemAttributes("Flow Item 2"), createItemHTML(item2HTML))}`\n  )'}},darkModeRTL_TestOnly.parameters),noDoubleScrollbars_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    #container {\n      display: flex;\n      max-height: 540px;\n      width: 300px;\n    }\n    .content {\n      height: 100%;\n      display: flex;\n      padding: 10px;\n      overflow-y: auto; /* Control scrollbar via child */\n    }\n  </style>\n  <div id="container">\n    <calcite-flow>\n      <calcite-flow-item heading="Example">\n        <div>### Stickied Content e.g. toolbar</div>\n        <div class="content">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sapien lectus, ultricies a molestie nec,\n          sollicitudin ac nulla. Pellentesque tincidunt malesuada arcu et placerat. In malesuada neque lectus, at congue\n          est malesuada quis. Proin tincidunt lacus laoreet mauris fringilla accumsan. Cras nec enim eu lectus suscipit\n          vestibulum a laoreet arcu. Duis posuere nunc vel enim blandit, nec vehicula orci aliquam. Vestibulum hendrerit\n          mi vel nisi posuere accumsan. Aenean efficitur est id cursus convallis. Morbi turpis ante, sodales eu tortor\n          eu, mattis bibendum purus. Morbi iaculis nisl nunc, quis accumsan quam laoreet vitae. Aliquam ex ligula,\n          ornare eu ex vitae, tincidunt venenatis lacus. Phasellus risus quam, elementum sed justo porttitor,\n          ullamcorper mattis nisl. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia\n          curae; Nulla non dui at metus porta lacinia congue sit amet quam. Mauris viverra diam neque, in blandit leo\n          vehicula et. Donec non purus vitae nunc tincidunt egestas. Nunc pretium enim magna, sed fringilla lacus\n          viverra in. Nam et pretium nisi. Ut bibendum, ipsum sit amet egestas hendrerit, quam orci sollicitudin purus,\n          sit amet finibus mauris erat in eros. Integer est dui, vehicula a ipsum id, pellentesque semper elit. Fusce\n          euismod volutpat eros vitae imperdiet. Nam suscipit lacus id posuere pharetra. Cras eros ipsum, feugiat non\n          leo non, ornare malesuada eros. Donec egestas purus non quam tempus commodo. Maecenas ex augue, euismod eget\n          magna in, dapibus fermentum felis. Phasellus justo felis, sollicitudin ut ex sed, lobortis scelerisque sem.\n          Pellentesque semper placerat velit, sit amet viverra tortor ultricies eu. Pellentesque habitant morbi\n          tristique senectus et netus et malesuada fames ac turpis egestas. Phasellus feugiat, augue in molestie\n          imperdiet, felis turpis facilisis tortor, at tempus purus risus et sapien. Fusce id nisi id orci elementum\n          sollicitudin. Nam id libero eu odio efficitur rutrum maximus porta lorem. Nunc tristique interdum augue,\n          sodales viverra lectus efficitur vitae. Nam molestie, neque consequat mollis pulvinar, sapien sem semper nunc,\n          et euismod enim sem vitae ligula.\n        </div>\n      </calcite-flow-item>\n    </calcite-flow>\n  </div>\n`'}},noDoubleScrollbars_TestOnly.parameters)},"./src/components/graph/graph.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"highlightRange",(function(){return highlightRange})),__webpack_require__.d(__webpack_exports__,"withColorStops",(function(){return withColorStops})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),data=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Slider/support/Graph",parameters:{notes:"# calcite-graph\n\nThe graph component is used to show small, lightweight graphs in places where a full interactive chart is not needed. This includes sparklines, histograms, and small trend plots.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute       | Description                                                                                                                  | Type          | Default     |\n| ------------------ | --------------- | ---------------------------------------------------------------------------------------------------------------------------- | ------------- | ----------- |\n| `colorStops`       | --              | Array of values describing a single color stop ([offset, color, opacity]) These color stops should be sorted by offset value | `ColorStop[]` | `undefined` |\n| `data`             | --              | Array of tuples describing a single data point ([x, y]) These data points should be sorted by x-axis value                   | `Point[]`     | `[]`        |\n| `highlightMax`     | `highlight-max` | End of highlight color if highlighting range                                                                                 | `number`      | `undefined` |\n| `highlightMin`     | `highlight-min` | Start of highlight color if highlighting range                                                                               | `number`      | `undefined` |\n| `max` _(required)_ | `max`           | Highest point of the range                                                                                                   | `number`      | `undefined` |\n| `min` _(required)_ | `min`           | Lowest point of the range                                                                                                    | `number`      | `undefined` |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-slider](../slider)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-slider --\x3e calcite-graph\n  style calcite-graph fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"}},Object(helpers.c)()),[[0,0],[10,80],[20,20],[30,30],[40,42],[50,50],[60,55],[70,48],[80,30],[90,10],[100,0]]),rainbow=["red","orange","yellow","green","cyan","blue","violet"],colorStops=rainbow.map((function(color,i){return{offset:1/(rainbow.length-1)*i,color:color}})),simple=function(){var div=document.createElement("div");div.style.width=`${Object(dist.number)("width",300)}px`,div.style.height=`${Object(dist.number)("height",100)}px`;var graph=document.createElement("calcite-graph");return graph.min=Object(dist.number)("min",0),graph.max=Object(dist.number)("max",100),graph.data=data,div.appendChild(graph),div},highlightRange=function(){var div=document.createElement("div");div.style.width=`${Object(dist.number)("width",300)}px`,div.style.height=`${Object(dist.number)("height",100)}px`;var graph=document.createElement("calcite-graph");return graph.min=Object(dist.number)("min",0),graph.max=Object(dist.number)("max",100),graph.highlightMin=Object(dist.number)("highlightMin",25),graph.highlightMax=Object(dist.number)("highlightMax",75),graph.data=data,div.appendChild(graph),div},withColorStops=function(){var div=document.createElement("div");div.style.width=`${Object(dist.number)("width",300)}px`,div.style.height=`${Object(dist.number)("height",100)}px`;var graph=document.createElement("calcite-graph");return graph.min=Object(dist.number)("min",0),graph.max=Object(dist.number)("max",100),graph.colorStops=colorStops,graph.data=data,div.appendChild(graph),div},darkModeRTL_TestOnly=function(){var div=document.createElement("div");div.style.width=`${Object(dist.number)("width",300)}px`,div.style.height=`${Object(dist.number)("height",100)}px`,div.dir="rtl",div.classList.add("calcite-mode-dark");var graph=document.createElement("calcite-graph");return graph.min=Object(dist.number)("min",0),graph.max=Object(dist.number)("max",100),graph.highlightMin=Object(dist.number)("highlightMin",25),graph.highlightMax=Object(dist.number)("highlightMax",75),graph.colorStops=colorStops,graph.data=data,div.appendChild(graph),div};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): HTMLDivElement => {\n  const div = document.createElement("div");\n  div.style.width = `${number("width", 300)}px`;\n  div.style.height = `${number("height", 100)}px`;\n  const graph = document.createElement("calcite-graph") as HTMLCalciteGraphElement;\n  graph.min = number("min", 0);\n  graph.max = number("max", 100);\n  graph.data = data;\n  div.appendChild(graph);\n  return div;\n}'}},simple.parameters),highlightRange.parameters=Object.assign({storySource:{source:'(): HTMLDivElement => {\n  const div = document.createElement("div");\n  div.style.width = `${number("width", 300)}px`;\n  div.style.height = `${number("height", 100)}px`;\n  const graph = document.createElement("calcite-graph") as HTMLCalciteGraphElement;\n  graph.min = number("min", 0);\n  graph.max = number("max", 100);\n  graph.highlightMin = number("highlightMin", 25);\n  graph.highlightMax = number("highlightMax", 75);\n  graph.data = data;\n  div.appendChild(graph);\n  return div;\n}'}},highlightRange.parameters),withColorStops.parameters=Object.assign({storySource:{source:'(): HTMLDivElement => {\n  const div = document.createElement("div");\n  div.style.width = `${number("width", 300)}px`;\n  div.style.height = `${number("height", 100)}px`;\n  const graph = document.createElement("calcite-graph") as HTMLCalciteGraphElement;\n  graph.min = number("min", 0);\n  graph.max = number("max", 100);\n  graph.colorStops = colorStops;\n  graph.data = data;\n  div.appendChild(graph);\n  return div;\n}'}},withColorStops.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): HTMLDivElement => {\n  const div = document.createElement("div");\n  div.style.width = `${number("width", 300)}px`;\n  div.style.height = `${number("height", 100)}px`;\n  div.dir = "rtl";\n  div.classList.add("calcite-mode-dark");\n  const graph = document.createElement("calcite-graph") as HTMLCalciteGraphElement;\n  graph.min = number("min", 0);\n  graph.max = number("max", 100);\n  graph.highlightMin = number("highlightMin", 25);\n  graph.highlightMax = number("highlightMax", 75);\n  graph.colorStops = colorStops;\n  graph.data = data;\n  div.appendChild(graph);\n  return div;\n}'}},darkModeRTL_TestOnly.parameters)},"./src/components/icon/icon.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),sampleIcon=(__webpack_exports__.default=Object.assign({title:"Components/Icon",parameters:{notes:'# calcite-icon\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Custom-icon-color\n\nTo use a custom color for the icon fill, you can add a class to the `calcite-icon` component with the desired color.\n\n```html\n<calcite-icon class="my-icon-color-class" icon="arrowBoldLeft"></calcite-icon>\n```\n\n```css\n.my-icon-color-class {\n  color: #007ac2;\n}\n```\n\n\n\n## Properties\n\n| Property    | Attribute    | Description                                                                                       | Type                | Default     |\n| ----------- | ------------ | ------------------------------------------------------------------------------------------------- | ------------------- | ----------- |\n| `flipRtl`   | `flip-rtl`   | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).      | `boolean`           | `false`     |\n| `icon`      | `icon`       | Displays a specific icon.                                                                         | `string`            | `null`      |\n| `scale`     | `scale`      | Specifies the size of the component.                                                              | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `textLabel` | `text-label` | Accessible name for the component.  It is recommended to set this value if your icon is semantic. | `string`            | `undefined` |\n\n\n## CSS Custom Properties\n\n| Name                      | Description                                        |\n| ------------------------- | -------------------------------------------------- |\n| `--calcite-ui-icon-color` | The component\'s color. Defaults to `currentColor`. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-accordion-item](../accordion-item)\n - [calcite-action](../action)\n - [calcite-alert](../alert)\n - [calcite-avatar](../avatar)\n - [calcite-block](../block)\n - [calcite-block-section](../block-section)\n - [calcite-button](../button)\n - [calcite-chip](../chip)\n - [calcite-combobox](../combobox)\n - [calcite-combobox-item](../combobox-item)\n - [calcite-date-picker-month-header](../date-picker-month-header)\n - [calcite-dropdown-item](../dropdown-item)\n - [calcite-handle](../handle)\n - [calcite-input](../input)\n - [calcite-input-date-picker](../input-date-picker)\n - [calcite-input-message](../input-message)\n - [calcite-input-number](../input-number)\n - [calcite-input-text](../input-text)\n - [calcite-link](../link)\n - [calcite-list-item](../list-item)\n - [calcite-modal](../modal)\n - [calcite-notice](../notice)\n - [calcite-pagination](../pagination)\n - [calcite-pick-list-item](../pick-list-item)\n - [calcite-popover](../popover)\n - [calcite-rating](../rating)\n - [calcite-segmented-control-item](../segmented-control-item)\n - [calcite-select](../select)\n - [calcite-stepper-item](../stepper-item)\n - [calcite-tab-title](../tab-title)\n - [calcite-tile](../tile)\n - [calcite-time-picker](../time-picker)\n - [calcite-tip-manager](../tip-manager)\n - [calcite-tree-item](../tree-item)\n - [calcite-value-list-item](../value-list-item)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-accordion-item --\x3e calcite-icon\n  calcite-action --\x3e calcite-icon\n  calcite-alert --\x3e calcite-icon\n  calcite-avatar --\x3e calcite-icon\n  calcite-block --\x3e calcite-icon\n  calcite-block-section --\x3e calcite-icon\n  calcite-button --\x3e calcite-icon\n  calcite-chip --\x3e calcite-icon\n  calcite-combobox --\x3e calcite-icon\n  calcite-combobox-item --\x3e calcite-icon\n  calcite-date-picker-month-header --\x3e calcite-icon\n  calcite-dropdown-item --\x3e calcite-icon\n  calcite-handle --\x3e calcite-icon\n  calcite-input --\x3e calcite-icon\n  calcite-input-date-picker --\x3e calcite-icon\n  calcite-input-message --\x3e calcite-icon\n  calcite-input-number --\x3e calcite-icon\n  calcite-input-text --\x3e calcite-icon\n  calcite-link --\x3e calcite-icon\n  calcite-list-item --\x3e calcite-icon\n  calcite-modal --\x3e calcite-icon\n  calcite-notice --\x3e calcite-icon\n  calcite-pagination --\x3e calcite-icon\n  calcite-pick-list-item --\x3e calcite-icon\n  calcite-popover --\x3e calcite-icon\n  calcite-rating --\x3e calcite-icon\n  calcite-segmented-control-item --\x3e calcite-icon\n  calcite-select --\x3e calcite-icon\n  calcite-stepper-item --\x3e calcite-icon\n  calcite-tab-title --\x3e calcite-icon\n  calcite-tile --\x3e calcite-icon\n  calcite-time-picker --\x3e calcite-icon\n  calcite-tip-manager --\x3e calcite-icon\n  calcite-tree-item --\x3e calcite-icon\n  calcite-value-list-item --\x3e calcite-icon\n  style calcite-icon fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),helpers.b.find((function(item){return"arrowRight"===item}))),simple=function(){return formatting.a`
  <calcite-icon
    icon="${Object(dist.select)("icon",helpers.b,sampleIcon)}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  ></calcite-icon>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-icon
    class="calcite-mode-dark"
    dir="rtl"
    icon="${Object(dist.select)("icon",helpers.b,sampleIcon)}"
    ${Object(helpers.a)("flip-rtl",!0)}
  ></calcite-icon>
`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-icon\n    icon="${select("icon", iconNames, sampleIcon)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-icon>\n`'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-icon\n    class="calcite-mode-dark"\n    dir="rtl"\n    icon="${select("icon", iconNames, sampleIcon)}"\n    ${boolean("flip-rtl", true)}\n  ></calcite-icon>\n`'}},darkModeRTL_TestOnly.parameters)},"./src/components/inline-editable/inline-editable.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"longValue_TestOnly",(function(){return longValue_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Inline Editable",parameters:{notes:'# calcite-inline-editable\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nThere is no need to set a theme or scale on the `<calcite-inline-editable>` component, as it inherits these values from the wrapped `<calcite-input>`, or the closest parent component where these props are set.\n\n```html\n<calcite-inline-editable>\n  <calcite-input value="Entered value" placeholder="My placeholder"></calcite-input>\n</calcite-inline-editable>\n```\n\n\n### With-label\n\n```html\n<calcite-label>\n  My great label\n  <calcite-inline-editable controls>\n    <calcite-input value="Entered value" placeholder="My placeholder"></calcite-input>\n  </calcite-inline-editable>\n</calcite-label>\n```\n\n\n### With-save-and-cancel-controls\n\n```html\n<calcite-inline-editable controls>\n  <calcite-input value="Entered value" placeholder="My placeholder"></calcite-input>\n</calcite-inline-editable>\n```\n\n\n\n## Properties\n\n| Property           | Attribute         | Description                                                                                                                                                  | Type                                                                           | Default     |\n| ------------------ | ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------ | ----------- |\n| `afterConfirm`     | --                | Specifies a callback to be executed prior to disabling editing via the controls. When provided, the component\'s loading state will be handled automatically. | `() => Promise<void>`                                                          | `undefined` |\n| `controls`         | `controls`        | When `true` and `editingEnabled` is `true`, displays save and cancel controls on the component.                                                              | `boolean`                                                                      | `false`     |\n| `disabled`         | `disabled`        | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                     | `boolean`                                                                      | `false`     |\n| `editingEnabled`   | `editing-enabled` | When `true`, inline editing is enabled on the component.                                                                                                     | `boolean`                                                                      | `false`     |\n| `loading`          | `loading`         | When `true`, a busy indicator is displayed.                                                                                                                  | `boolean`                                                                      | `false`     |\n| `messageOverrides` | --                | Use this property to override individual strings used by the component.                                                                                      | `{ enableEditing?: string; cancelEditing?: string; confirmChanges?: string; }` | `undefined` |\n| `scale`            | `scale`           | Specifies the size of the component. Defaults to the scale of the wrapped `calcite-input` or the scale of the closest wrapping component with a set scale.   | `"l" \\| "m" \\| "s"`                                                            | `undefined` |\n\n\n## Events\n\n| Event                              | Description                                                    | Type                |\n| ---------------------------------- | -------------------------------------------------------------- | ------------------- |\n| `calciteInlineEditableEditCancel`  | Emits when the component\'s "cancel editing" button is pressed. | `CustomEvent<void>` |\n| `calciteInlineEditableEditConfirm` | Emits when the component\'s "confirm edits" button is pressed.  | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                          |\n| ---- | ------------------------------------ |\n|      | A slot for adding a `calcite-input`. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-button](../button)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-inline-editable --\x3e calcite-button\n  calcite-button --\x3e calcite-loader\n  calcite-button --\x3e calcite-icon\n  style calcite-inline-editable fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width:300px;max-width:100%;">
    <calcite-inline-editable
      scale="${Object(dist.select)("scale",["s","m","l"],"m","InlineEditable")}"
      ${Object(dist.boolean)("controls",!1,"InlineEditable")&&"controls"}
      ${Object(dist.boolean)("editing-enabled",!1,"InlineEditable")&&"editing-enabled"}
      ${Object(dist.boolean)("loading",!1,"InlineEditable")&&"loading"}
      ${Object(dist.boolean)("disabled",!1,"InlineEditable")&&"disabled"}
    >
      <calcite-input
        alignment="${Object(dist.select)("alignment",["start","end"],"start","Input")}"
        placeholder="${Object(dist.text)("placeholder","Placeholder text","Input")}"
      >
      </calcite-input>
    </calcite-inline-editable>
  </div>
`}),disabled_TestOnly=function(){return formatting.a`<calcite-inline-editable disabled>
  <calcite-input value="disabled"></calcite-input>
</calcite-inline-editable>`},darkModeRTL_TestOnly=function(){return formatting.a`
  <div dir="rtl" style="width:300px;max-width:100%;">
    <calcite-label
      class="calcite-mode-dark"
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle","Label")}"
      scale="${Object(dist.select)("scale",["s","m","l"],"m","Label")}"
      layout="${Object(dist.select)("layout",["default","inline","inline-space-between"],"default","Label")}"
    >
      ${Object(dist.text)("label text","My great label","Label")}
      <calcite-inline-editable
        ${Object(dist.boolean)("controls",!1,"InlineEditable")&&"controls"}
        ${Object(dist.boolean)("editing-enabled",!1,"InlineEditable")&&"editing-enabled"}
        ${Object(dist.boolean)("loading",!1,"InlineEditable")&&"loading"}
        ${Object(dist.boolean)("disabled",!1,"InlineEditable")&&"disabled"}
      >
        <calcite-input
          alignment="${Object(dist.select)("alignment",["start","end"],"start","Input")}"
          placeholder="${Object(dist.text)("placeholder","Placeholder text","Input")}"
        >
        </calcite-input>
      </calcite-inline-editable>
      <calcite-input-message
        ${Object(dist.boolean)("icon",!1,"InputMessage")&&"icon"}
        status="${Object(dist.select)("status",["idle","valid","invalid"],"idle","InputMessage")}"
      >
        ${Object(dist.text)("text","My great input message","InputMessage")}
      </calcite-input-message>
    </calcite-label>
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var longValue_TestOnly=function(){return formatting.a`<div style="width: 300px;">
  <calcite-inline-editable>
    <calcite-input
      value="A flower, sometimes known as a bloom or blossom, is the reproductive structure found in flowering plants (plants of the division Angiospermae)."
      placeholder="My placeholder"
    ></calcite-input>
  </calcite-inline-editable>
</div>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;">\n    <calcite-inline-editable\n      scale="${select("scale", ["s", "m", "l"], "m", "InlineEditable")}"\n      ${boolean("controls", false, "InlineEditable") && "controls"}\n      ${boolean("editing-enabled", false, "InlineEditable") && "editing-enabled"}\n      ${boolean("loading", false, "InlineEditable") && "loading"}\n      ${boolean("disabled", false, "InlineEditable") && "disabled"}\n    >\n      <calcite-input\n        alignment="${select("alignment", ["start", "end"], "start", "Input")}"\n        placeholder="${text("placeholder", "Placeholder text", "Input")}"\n      >\n      </calcite-input>\n    </calcite-inline-editable>\n  </div>\n`'}},simple.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-inline-editable disabled>\n  <calcite-input value="disabled"></calcite-input>\n</calcite-inline-editable>`'}},disabled_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div dir="rtl" style="width:300px;max-width:100%;">\n    <calcite-label\n      class="calcite-mode-dark"\n      status="${select("status", ["idle", "valid", "invalid"], "idle", "Label")}"\n      scale="${select("scale", ["s", "m", "l"], "m", "Label")}"\n      layout="${select("layout", ["default", "inline", "inline-space-between"], "default", "Label")}"\n    >\n      ${text("label text", "My great label", "Label")}\n      <calcite-inline-editable\n        ${boolean("controls", false, "InlineEditable") && "controls"}\n        ${boolean("editing-enabled", false, "InlineEditable") && "editing-enabled"}\n        ${boolean("loading", false, "InlineEditable") && "loading"}\n        ${boolean("disabled", false, "InlineEditable") && "disabled"}\n      >\n        <calcite-input\n          alignment="${select("alignment", ["start", "end"], "start", "Input")}"\n          placeholder="${text("placeholder", "Placeholder text", "Input")}"\n        >\n        </calcite-input>\n      </calcite-inline-editable>\n      <calcite-input-message\n        ${boolean("icon", false, "InputMessage") && "icon"}\n        status="${select("status", ["idle", "valid", "invalid"], "idle", "InputMessage")}"\n      >\n        ${text("text", "My great input message", "InputMessage")}\n      </calcite-input-message>\n    </calcite-label>\n  </div>\n`'}},darkModeRTL_TestOnly.parameters),longValue_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="width: 300px;">\n  <calcite-inline-editable>\n    <calcite-input\n      value="A flower, sometimes known as a bloom or blossom, is the reproductive structure found in flowering plants (plants of the division Angiospermae)."\n      placeholder="My placeholder"\n    ></calcite-input>\n  </calcite-inline-editable>\n</div>`'}},longValue_TestOnly.parameters)},"./src/components/input-date-picker/input-date-picker.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"range",(function(){return range})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"flipPlacements_TestOnly",(function(){return flipPlacements_TestOnly})),__webpack_require__.d(__webpack_exports__,"laoNumberingSystemAndMediumIconForLargeInput_TestOnly",(function(){return laoNumberingSystemAndMediumIconForLargeInput_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),locale=__webpack_require__("./src/utils/locale.ts"),floating_ui=__webpack_require__("./src/utils/floating-ui.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/InputDatePicker",parameters:{notes:'# calcite-input-date-picker\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<div style="width: 400px">\n  <calcite-label layout="inline">\n    Date\n    <calcite-input-date-picker\n      min="2016-08-09"\n      max="2023-12-18"\n      lang="en"\n      role="application"\n      layout="horizontal"\n    ></calcite-input-date-picker>\n  </calcite-label>\n</div>\n```\n\n\n\n## Properties\n\n| Property                     | Attribute                      | Description                                                                                                                                                                                                                                                                                                                                                                   | Type                                                                                                                                                                                                                                    | Default                |\n| ---------------------------- | ------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------- |\n| `disabled`                   | `disabled`                     | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                                                                                                                                                                                                                      | `boolean`                                                                                                                                                                                                                               | `false`                |\n| `flipPlacements`             | --                             | Defines the available placements that can be used when a flip occurs.                                                                                                                                                                                                                                                                                                         | `Placement[]`                                                                                                                                                                                                                           | `undefined`            |\n| `form`                       | `form`                         | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any.                                                                                                                                                                                                                    | `string`                                                                                                                                                                                                                                | `undefined`            |\n| `headingLevel`               | `heading-level`                | Specifies the number at which section headings should start.                                                                                                                                                                                                                                                                                                                  | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`                                                                                                                                                                                                            | `undefined`            |\n| `layout`                     | `layout`                       | Defines the layout of the component.                                                                                                                                                                                                                                                                                                                                          | `"horizontal" \\| "vertical"`                                                                                                                                                                                                            | `"horizontal"`         |\n| `max`                        | `max`                          | Specifies the latest allowed date ("yyyy-mm-dd").                                                                                                                                                                                                                                                                                                                             | `string`                                                                                                                                                                                                                                | `undefined`            |\n| `maxAsDate`                  | --                             | Specifies the latest allowed date as a full date object.                                                                                                                                                                                                                                                                                                                      | `Date`                                                                                                                                                                                                                                  | `undefined`            |\n| `messageOverrides`           | --                             | Use this property to override individual strings used by the component.                                                                                                                                                                                                                                                                                                       | `{ nextMonth?: string; prevMonth?: string; year?: string; }`                                                                                                                                                                            | `undefined`            |\n| `min`                        | `min`                          | Specifies the earliest allowed date ("yyyy-mm-dd").                                                                                                                                                                                                                                                                                                                           | `string`                                                                                                                                                                                                                                | `undefined`            |\n| `minAsDate`                  | --                             | Specifies the earliest allowed date as a full date object.                                                                                                                                                                                                                                                                                                                    | `Date`                                                                                                                                                                                                                                  | `undefined`            |\n| `name`                       | `name`                         | Specifies the name of the component.  Required to pass the component\'s `value` on form submission.                                                                                                                                                                                                                                                                            | `string`                                                                                                                                                                                                                                | `undefined`            |\n| `numberingSystem`            | `numbering-system`             | Specifies the Unicode numeral system used by the component for localization. This property cannot be dynamically changed.                                                                                                                                                                                                                                                     | `"arab" \\| "arabext" \\| "bali" \\| "beng" \\| "deva" \\| "fullwide" \\| "gujr" \\| "guru" \\| "hanidec" \\| "khmr" \\| "knda" \\| "laoo" \\| "latn" \\| "limb" \\| "mlym" \\| "mong" \\| "mymr" \\| "orya" \\| "tamldec" \\| "telu" \\| "thai" \\| "tibt"` | `undefined`            |\n| `open`                       | `open`                         | When `true`, displays the `calcite-date-picker` component.                                                                                                                                                                                                                                                                                                                    | `boolean`                                                                                                                                                                                                                               | `false`                |\n| `overlayPositioning`         | `overlay-positioning`          | Determines the type of positioning to use for the overlaid content.  Using `"absolute"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container\'s layout.  `"fixed"` should be used to escape an overflowing parent container, or when the reference element\'s `position` CSS property is `"fixed"`. | `"absolute" \\| "fixed"`                                                                                                                                                                                                                 | `"absolute"`           |\n| `placement`                  | `placement`                    | Specifies the placement of the `calcite-date-picker` relative to the component.                                                                                                                                                                                                                                                                                               | `"bottom" \\| "bottom-end" \\| "bottom-start" \\| "top" \\| "top-end" \\| "top-start"`                                                                                                                                                       | `defaultMenuPlacement` |\n| `proximitySelectionDisabled` | `proximity-selection-disabled` | When `true`, disables the default behavior on the third click of narrowing or extending the range. Instead starts a new range.                                                                                                                                                                                                                                                | `boolean`                                                                                                                                                                                                                               | `false`                |\n| `range`                      | `range`                        | When `true`, activates a range for the component.                                                                                                                                                                                                                                                                                                                             | `boolean`                                                                                                                                                                                                                               | `false`                |\n| `readOnly`                   | `read-only`                    | When `true`, the component\'s value can be read, but controls are not accessible and the value cannot be modified.                                                                                                                                                                                                                                                             | `boolean`                                                                                                                                                                                                                               | `false`                |\n| `scale`                      | `scale`                        | Specifies the size of the component.                                                                                                                                                                                                                                                                                                                                          | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                     | `"m"`                  |\n| `value`                      | `value`                        | Selected date as a string in ISO format (YYYY-MM-DD)                                                                                                                                                                                                                                                                                                                          | `string \\| string[]`                                                                                                                                                                                                                    | `""`                   |\n| `valueAsDate`                | --                             | The component\'s value as a full date object.                                                                                                                                                                                                                                                                                                                                  | `Date \\| Date[]`                                                                                                                                                                                                                        | `undefined`            |\n\n\n## Events\n\n| Event                               | Description                                                                                              | Type                |\n| ----------------------------------- | -------------------------------------------------------------------------------------------------------- | ------------------- |\n| `calciteInputDatePickerBeforeClose` | Fires when the component is requested to be closed and before the closing transition begins.             | `CustomEvent<void>` |\n| `calciteInputDatePickerBeforeOpen`  | Fires when the component is added to the DOM but not rendered, and before the opening transition begins. | `CustomEvent<void>` |\n| `calciteInputDatePickerChange`      | Fires when the component\'s value changes.                                                                | `CustomEvent<void>` |\n| `calciteInputDatePickerClose`       | Fires when the component is closed and animation is complete.                                            | `CustomEvent<void>` |\n| `calciteInputDatePickerOpen`        | Fires when the component is open and animation is complete.                                              | `CustomEvent<void>` |\n\n\n## Methods\n\n### `reposition(delayed?: boolean) => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-input](../input)\n- [calcite-date-picker](../date-picker)\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-input-date-picker --\x3e calcite-input\n  calcite-input-date-picker --\x3e calcite-date-picker\n  calcite-input-date-picker --\x3e calcite-icon\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  calcite-date-picker --\x3e calcite-date-picker-month-header\n  calcite-date-picker --\x3e calcite-date-picker-month\n  calcite-date-picker-month-header --\x3e calcite-icon\n  calcite-date-picker-month --\x3e calcite-date-picker-day\n  style calcite-input-date-picker fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width: 400px">
    <calcite-input-date-picker
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      value="${Object(dist.text)("value","2020-12-12")}"
      min="${Object(dist.text)("min","2016-08-09")}"
      max="${Object(dist.text)("max","2023-12-18")}"
      lang="${Object(dist.select)("locale",locale.a,"en")}"
      placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
    ></calcite-input-date-picker
  </div>
`}),range=function(){return formatting.a`
  <div style="width: 400px">
    <calcite-input-date-picker
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      min="${Object(dist.text)("min","2016-08-09")}"
      max="${Object(dist.text)("max","2023-12-18")}"
      lang="${Object(dist.select)("locale",locale.a,"en")}"
      next-month-label="${Object(dist.text)("next-month-label","Next month")}"
      prev-month-label="${Object(dist.text)("prev-month-label","Previous month")}"
      range="${Object(dist.boolean)("range",!0)}"
      layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    ></calcite-input-date-picker>
  </div>
`},disabled_TestOnly=function(){return formatting.a`<calcite-input-date-picker disabled></calcite-input-date-picker>`},flipPlacements_TestOnly=function(){return formatting.a`
  <style>
    .my-input-date-picker-div {
      margin-top: 50px;
    }

    .my-input-date-picker {
      position: unset;
    }
  </style>
  <div style="height: 100px; overflow:scroll;">
    <div class="my-input-date-picker-div">
      <calcite-input-date-picker open class="my-input-date-picker" value="2020-02-12"></calcite-input-date-picker>
    </div>
  </div>
  <script>
    document.querySelector(".my-input-date-picker").flipPlacements = ["right"];
  </script>
`},laoNumberingSystemAndMediumIconForLargeInput_TestOnly=function(){return formatting.a`
  <div style="width: 400px">
    <calcite-input-date-picker
      open
      value="1/1/1"
      lang="zh-CN"
      numbering-system="laoo"
      scale="l"
      start="2020-12-12"
      end="2020-12-16"
      range=""
      layout="horizontal"
    ></calcite-input-date-picker>
  </div>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <div style="width: 400px">
    <calcite-input-date-picker
      class="calcite-mode-dark"
      dir="rtl"
      value="2020-12-12"
    ></calcite-input-date-picker
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px">\n    <calcite-input-date-picker\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      value="${text("value", "2020-12-12")}"\n      min="${text("min", "2016-08-09")}"\n      max="${text("max", "2023-12-18")}"\n      lang="${select("locale", locales, "en")}"\n      placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n    ></calcite-input-date-picker\n  </div>\n`'}},simple.parameters),range.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px">\n    <calcite-input-date-picker\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      min="${text("min", "2016-08-09")}"\n      max="${text("max", "2023-12-18")}"\n      lang="${select("locale", locales, "en")}"\n      next-month-label="${text("next-month-label", "Next month")}"\n      prev-month-label="${text("prev-month-label", "Previous month")}"\n      range="${boolean("range", true)}"\n      layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    ></calcite-input-date-picker>\n  </div>\n`'}},range.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:"(): string => html`<calcite-input-date-picker disabled></calcite-input-date-picker>`"}},disabled_TestOnly.parameters),flipPlacements_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    .my-input-date-picker-div {\n      margin-top: 50px;\n    }\n\n    .my-input-date-picker {\n      position: unset;\n    }\n  </style>\n  <div style="height: 100px; overflow:scroll;">\n    <div class="my-input-date-picker-div">\n      <calcite-input-date-picker open class="my-input-date-picker" value="2020-02-12"></calcite-input-date-picker>\n    </div>\n  </div>\n  <script>\n    document.querySelector(".my-input-date-picker").flipPlacements = ["right"];\n  <\/script>\n`'}},flipPlacements_TestOnly.parameters),laoNumberingSystemAndMediumIconForLargeInput_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px">\n    <calcite-input-date-picker\n      open\n      value="1/1/1"\n      lang="zh-CN"\n      numbering-system="laoo"\n      scale="l"\n      start="2020-12-12"\n      end="2020-12-16"\n      range=""\n      layout="horizontal"\n    ></calcite-input-date-picker>\n  </div>\n`'}},laoNumberingSystemAndMediumIconForLargeInput_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px">\n    <calcite-input-date-picker\n      class="calcite-mode-dark"\n      dir="rtl"\n      value="2020-12-12"\n    ></calcite-input-date-picker\n  </div>\n`'}},darkModeRTL_TestOnly.parameters)},"./src/components/input-number/input-number.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"withInputMessage",(function(){return withInputMessage})),__webpack_require__.d(__webpack_exports__,"withSlottedAction",(function(){return withSlottedAction})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"hebrewNumberingSystemAndMediumIconForLargeInputStyling_TestOnly",(function(){return hebrewNumberingSystemAndMediumIconForLargeInputStyling_TestOnly})),__webpack_require__.d(__webpack_exports__,"arabicLocaleWithLatinNumberingSystem_TestOnly",(function(){return arabicLocaleWithLatinNumberingSystem_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Input Number",parameters:{notes:'# calcite-input-number\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute            | Description                                                                                                                                                                | Type                                                                                                                                                                                                                                    | Default      |\n| ------------------ | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------ |\n| `alignment`        | `alignment`          | Specifies the text alignment of the component\'s value.                                                                                                                     | `"end" \\| "start"`                                                                                                                                                                                                                      | `"start"`    |\n| `autocomplete`     | `autocomplete`       | Specifies the type of content to autocomplete, for use in forms. Read the native attribute\'s documentation on MDN for more info.                                           | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `autofocus`        | `autofocus`          | When `true`, the component is focused on page load. Only one element can contain `autofocus`. If multiple elements have `autofocus`, the first element will receive focus. | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `clearable`        | `clearable`          | When `true`, a clear button is displayed when the component has a value.                                                                                                   | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `disabled`         | `disabled`           | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                   | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `enterKeyHint`     | `enter-key-hint`     | Specifies the action label or icon for the Enter key on virtual keyboards. Read the native attribute\'s documentation on MDN for more info.                                 | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `form`             | `form`               | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any.                 | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `groupSeparator`   | `group-separator`    | When `true`, number values are displayed with a group separator corresponding to the language and country format.                                                          | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `hidden`           | `hidden`             | When `true`, the component will not be visible.                                                                                                                            | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `icon`             | `icon`               | Specifies an icon to display.                                                                                                                                              | `boolean \\| string`                                                                                                                                                                                                                     | `undefined`  |\n| `iconFlipRtl`      | `icon-flip-rtl`      | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).                                                                               | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `inputMode`        | `input-mode`         | Specifies the type of content to help devices display an appropriate virtual keyboard. Read the native attribute\'s documentation on MDN for more info.                     | `string`                                                                                                                                                                                                                                | `"decimal"`  |\n| `label`            | `label`              | Accessible name for the component\'s button or hyperlink.                                                                                                                   | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `loading`          | `loading`            | When `true`, the component is in the loading state and `calcite-progress` is displayed.                                                                                    | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `max`              | `max`                | Specifies the maximum value.                                                                                                                                               | `number`                                                                                                                                                                                                                                | `undefined`  |\n| `maxLength`        | `max-length`         | Specifies the maximum length of text for the component\'s value.                                                                                                            | `number`                                                                                                                                                                                                                                | `undefined`  |\n| `messageOverrides` | --                   | Use this property to override individual strings used by the component.                                                                                                    | `{ clear?: string; loading?: string; }`                                                                                                                                                                                                 | `undefined`  |\n| `min`              | `min`                | Specifies the minimum value.                                                                                                                                               | `number`                                                                                                                                                                                                                                | `undefined`  |\n| `minLength`        | `min-length`         | Specifies the minimum length of text for the component\'s value.                                                                                                            | `number`                                                                                                                                                                                                                                | `undefined`  |\n| `name`             | `name`               | Specifies the name of the component.  Required to pass the component\'s `value` on form submission.                                                                         | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `numberButtonType` | `number-button-type` | Specifies the placement of the buttons.                                                                                                                                    | `"horizontal" \\| "none" \\| "vertical"`                                                                                                                                                                                                  | `"vertical"` |\n| `numberingSystem`  | `numbering-system`   | Specifies the Unicode numeral system used by the component for localization.                                                                                               | `"arab" \\| "arabext" \\| "bali" \\| "beng" \\| "deva" \\| "fullwide" \\| "gujr" \\| "guru" \\| "hanidec" \\| "khmr" \\| "knda" \\| "laoo" \\| "latn" \\| "limb" \\| "mlym" \\| "mong" \\| "mymr" \\| "orya" \\| "tamldec" \\| "telu" \\| "thai" \\| "tibt"` | `undefined`  |\n| `placeholder`      | `placeholder`        | Specifies placeholder text for the component.                                                                                                                              | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `prefixText`       | `prefix-text`        | Adds text to the start of the component.                                                                                                                                   | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `readOnly`         | `read-only`          | When `true`, the component\'s value can be read, but cannot be modified.                                                                                                    | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `required`         | `required`           | When `true`, the component must have a value in order for the form to submit.                                                                                              | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `scale`            | `scale`              | Specifies the size of the component.                                                                                                                                       | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                     | `"m"`        |\n| `status`           | `status`             | Specifies the status of the input field, which determines message and icons.                                                                                               | `"idle" \\| "invalid" \\| "valid"`                                                                                                                                                                                                        | `"idle"`     |\n| `step`             | `step`               | Specifies the granularity that the component\'s value must adhere to.                                                                                                       | `"any" \\| number`                                                                                                                                                                                                                       | `undefined`  |\n| `suffixText`       | `suffix-text`        | Adds text to the end of the component.                                                                                                                                     | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `value`            | `value`              | The component\'s value.                                                                                                                                                     | `string`                                                                                                                                                                                                                                | `""`         |\n\n\n## Events\n\n| Event                      | Description                                         | Type                |\n| -------------------------- | --------------------------------------------------- | ------------------- |\n| `calciteInputNumberChange` | Fires each time a new value is typed and committed. | `CustomEvent<void>` |\n| `calciteInputNumberInput`  | Fires each time a new value is typed.               | `CustomEvent<void>` |\n\n\n## Methods\n\n### `selectText() => Promise<void>`\n\nSelects the text of the component\'s `value`.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot       | Description                                            |\n| ---------- | ------------------------------------------------------ |\n| `"action"` | A slot for positioning a button next to the component. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-progress](../progress)\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-input-number --\x3e calcite-progress\n  calcite-input-number --\x3e calcite-icon\n  style calcite-input-number fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input-number
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle")}"
      status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
      alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
      number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal")}"
      min="${Object(dist.number)("min",0)}"
      max="${Object(dist.number)("max",100)}"
      step="${Object(dist.number)("step",1)}"
      prefix-text="${Object(dist.text)("prefix-text","")}"
      suffix-text="${Object(dist.text)("suffix-text","")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("clearable",!1)}
      ${Object(helpers.a)("disabled",!1)}
      value="${Object(dist.text)("value","")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
    >
    </calcite-input-number>
  </div>
`}),withInputMessage=function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input-number
      id="input-with-label-and-input-message"
      status="${Object(dist.select)("status",["idle","invalid","valid"],"idle","Input")}"
      alignment="${Object(dist.select)("alignment",["start","end"],"start","Input")}"
      number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal","Input")}"
      min="${Object(dist.number)("min",0)}"
      max="${Object(dist.number)("max",100)}"
      step="${Object(dist.number)("step",1)}"
      prefix-text="${Object(dist.text)("prefix-text","","Input")}"
      suffix-text="${Object(dist.text)("suffix-text","","Input")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("autofocus",!1)}
      ${Object(helpers.a)("required",!1)}
      value="${Object(dist.text)("value","","Input")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text","Input")}"
    >
    </calcite-input-number>
    <calcite-input-message ${Object(helpers.a)("icon",!1)} icon="${Object(dist.select)("icon",helpers.b,"","Input Message")}"
      >${Object(dist.text)("input message text","My great input message","Input Message")}</calcite-input-message
    >
  </div>
`},withSlottedAction=function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input-number
      id="input-with-slotted-action"
      status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
      alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
      number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal")}"
      min="${Object(dist.number)("min",0)}"
      max="${Object(dist.number)("max",100)}"
      step="${Object(dist.number)("step",1)}"
      prefix-text="${Object(dist.text)("prefix-text","")}"
      suffix-text="${Object(dist.text)("suffix-text","")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("clearable",!1)}
      ${Object(helpers.a)("disabled",!1)}
      value="${Object(dist.text)("value","")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
    >
      <calcite-button slot="action">${Object(dist.text)("action button text","Go")}</calcite-button>
    </calcite-input-number>
  </div>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <div dir="rtl" style="width:300px;max-width:100%;text-align:center;">
    <calcite-label
      class="calcite-mode-dark"
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle")}"
      for="input-dark-mode"
    >
      ${Object(dist.text)("label text","My great label")}
      <calcite-input-number
        id="input-dark-mode"
        status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
        alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
        number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal")}"
        min="${Object(dist.number)("min",0)}"
        max="${Object(dist.number)("max",100)}"
        step="${Object(dist.number)("step",1)}"
        prefix-text="${Object(dist.text)("prefix-text","")}"
        suffix-text="${Object(dist.text)("suffix-text","")}"
        ${Object(helpers.a)("loading",!1)}
        ${Object(helpers.a)("clearable",!1)}
        ${Object(helpers.a)("disabled",!1)}
        value="${Object(dist.text)("value","")}"
        placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
      >
      </calcite-input-number>
      <calcite-input-message status="${Object(dist.select)("input message status",["idle","valid","invalid"],"idle")}"
        >${Object(dist.text)("input message text","My great input message")}</calcite-input-message
      >
    </calcite-label>
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var hebrewNumberingSystemAndMediumIconForLargeInputStyling_TestOnly=function(){return formatting.a`
    <calcite-input-number
      number-button-type="vertical"
      lang="ar-EG"
      numbering-system="hebr"
      value="123456"
      scale="l"
    ></calcite-input-number
    ><calcite-input-number
      number-button-type="vertical"
      lang="ar-EG"
      numbering-system="hebr"
      value="123456"
      scale="l"
      icon="pen"
    ></calcite-input-number>
    <calcite-input-number
      number-button-type="horizontal"
      lang="ar-EG"
      numbering-system="hebr"
      value="123456"
      scale="l"
    ></calcite-input-number
    ><calcite-input-number
      number-button-type="horizontal"
      lang="ar-EG"
      numbering-system="hebr"
      value="123456"
      scale="l"
      icon="pen"
    ></calcite-input-number>
  `},arabicLocaleWithLatinNumberingSystem_TestOnly=function(){return formatting.a`<calcite-input-number lang="ar-EG" numbering-system="latn" value="123456"></calcite-input-number>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input-number\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      status="${select("status", ["idle", "valid", "invalid"], "idle")}"\n      status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n      alignment="${select("alignment", ["start", "end"], "start")}"\n      number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal")}"\n      min="${number("min", 0)}"\n      max="${number("max", 100)}"\n      step="${number("step", 1)}"\n      prefix-text="${text("prefix-text", "")}"\n      suffix-text="${text("suffix-text", "")}"\n      ${boolean("loading", false)}\n      ${boolean("clearable", false)}\n      ${boolean("disabled", false)}\n      value="${text("value", "")}"\n      placeholder="${text("placeholder", "Placeholder text")}"\n    >\n    </calcite-input-number>\n  </div>\n`'}},simple.parameters),withInputMessage.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input-number\n      id="input-with-label-and-input-message"\n      status="${select("status", ["idle", "invalid", "valid"], "idle", "Input")}"\n      alignment="${select("alignment", ["start", "end"], "start", "Input")}"\n      number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal", "Input")}"\n      min="${number("min", 0)}"\n      max="${number("max", 100)}"\n      step="${number("step", 1)}"\n      prefix-text="${text("prefix-text", "", "Input")}"\n      suffix-text="${text("suffix-text", "", "Input")}"\n      ${boolean("loading", false)}\n      ${boolean("autofocus", false)}\n      ${boolean("required", false)}\n      value="${text("value", "", "Input")}"\n      placeholder="${text("placeholder", "Placeholder text", "Input")}"\n    >\n    </calcite-input-number>\n    <calcite-input-message ${boolean("icon", false)} icon="${select("icon", iconNames, "", "Input Message")}"\n      >${text("input message text", "My great input message", "Input Message")}</calcite-input-message\n    >\n  </div>\n`'}},withInputMessage.parameters),withSlottedAction.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input-number\n      id="input-with-slotted-action"\n      status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n      alignment="${select("alignment", ["start", "end"], "start")}"\n      number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal")}"\n      min="${number("min", 0)}"\n      max="${number("max", 100)}"\n      step="${number("step", 1)}"\n      prefix-text="${text("prefix-text", "")}"\n      suffix-text="${text("suffix-text", "")}"\n      ${boolean("loading", false)}\n      ${boolean("clearable", false)}\n      ${boolean("disabled", false)}\n      value="${text("value", "")}"\n      placeholder="${text("placeholder", "Placeholder text")}"\n    >\n      <calcite-button slot="action">${text("action button text", "Go")}</calcite-button>\n    </calcite-input-number>\n  </div>\n`'}},withSlottedAction.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div dir="rtl" style="width:300px;max-width:100%;text-align:center;">\n    <calcite-label\n      class="calcite-mode-dark"\n      status="${select("status", ["idle", "valid", "invalid"], "idle")}"\n      for="input-dark-mode"\n    >\n      ${text("label text", "My great label")}\n      <calcite-input-number\n        id="input-dark-mode"\n        status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n        alignment="${select("alignment", ["start", "end"], "start")}"\n        number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal")}"\n        min="${number("min", 0)}"\n        max="${number("max", 100)}"\n        step="${number("step", 1)}"\n        prefix-text="${text("prefix-text", "")}"\n        suffix-text="${text("suffix-text", "")}"\n        ${boolean("loading", false)}\n        ${boolean("clearable", false)}\n        ${boolean("disabled", false)}\n        value="${text("value", "")}"\n        placeholder="${text("placeholder", "Placeholder text")}"\n      >\n      </calcite-input-number>\n      <calcite-input-message status="${select("input message status", ["idle", "valid", "invalid"], "idle")}"\n        >${text("input message text", "My great input message")}</calcite-input-message\n      >\n    </calcite-label>\n  </div>\n`'}},darkModeRTL_TestOnly.parameters),hebrewNumberingSystemAndMediumIconForLargeInputStyling_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`\n    <calcite-input-number\n      number-button-type="vertical"\n      lang="ar-EG"\n      numbering-system="hebr"\n      value="123456"\n      scale="l"\n    ></calcite-input-number\n    ><calcite-input-number\n      number-button-type="vertical"\n      lang="ar-EG"\n      numbering-system="hebr"\n      value="123456"\n      scale="l"\n      icon="pen"\n    ></calcite-input-number>\n    <calcite-input-number\n      number-button-type="horizontal"\n      lang="ar-EG"\n      numbering-system="hebr"\n      value="123456"\n      scale="l"\n    ></calcite-input-number\n    ><calcite-input-number\n      number-button-type="horizontal"\n      lang="ar-EG"\n      numbering-system="hebr"\n      value="123456"\n      scale="l"\n      icon="pen"\n    ></calcite-input-number>\n  `'}},hebrewNumberingSystemAndMediumIconForLargeInputStyling_TestOnly.parameters),arabicLocaleWithLatinNumberingSystem_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-input-number lang="ar-EG" numbering-system="latn" value="123456"></calcite-input-number>`'}},arabicLocaleWithLatinNumberingSystem_TestOnly.parameters)},"./src/components/input-text/input-text.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"withInputMessage",(function(){return withInputMessage})),__webpack_require__.d(__webpack_exports__,"withSlottedAction",(function(){return withSlottedAction})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"mediumIconForLargeScaleStyling_TestOnly",(function(){return mediumIconForLargeScaleStyling_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Input Text",parameters:{notes:'# calcite-input-text\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute        | Description                                                                                                                                                                | Type                                    | Default     |\n| ------------------ | ---------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------- | ----------- |\n| `alignment`        | `alignment`      | Specifies the text alignment of the component\'s value.                                                                                                                     | `"end" \\| "start"`                      | `"start"`   |\n| `autocomplete`     | `autocomplete`   | Specifies the type of content to autocomplete, for use in forms. Read the native attribute\'s documentation on MDN for more info.                                           | `string`                                | `undefined` |\n| `autofocus`        | `autofocus`      | When `true`, the component is focused on page load. Only one element can contain `autofocus`. If multiple elements have `autofocus`, the first element will receive focus. | `boolean`                               | `false`     |\n| `clearable`        | `clearable`      | When `true`, a clear button is displayed when the component has a value.                                                                                                   | `boolean`                               | `false`     |\n| `disabled`         | `disabled`       | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                   | `boolean`                               | `false`     |\n| `enterKeyHint`     | `enter-key-hint` | Specifies the action label or icon for the Enter key on virtual keyboards. Read the native attribute\'s documentation on MDN for more info.                                 | `string`                                | `undefined` |\n| `form`             | `form`           | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any.                 | `string`                                | `undefined` |\n| `hidden`           | `hidden`         | When `true`, the component will not be visible.                                                                                                                            | `boolean`                               | `false`     |\n| `icon`             | `icon`           | Specifies an icon to display.                                                                                                                                              | `boolean \\| string`                     | `undefined` |\n| `iconFlipRtl`      | `icon-flip-rtl`  | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).                                                                               | `boolean`                               | `false`     |\n| `inputMode`        | `input-mode`     | Specifies the type of content to help devices display an appropriate virtual keyboard. Read the native attribute\'s documentation on MDN for more info.                     | `string`                                | `"text"`    |\n| `label`            | `label`          | Accessible name for the component\'s button or hyperlink.                                                                                                                   | `string`                                | `undefined` |\n| `loading`          | `loading`        | When `true`, the component is in the loading state and `calcite-progress` is displayed.                                                                                    | `boolean`                               | `false`     |\n| `maxLength`        | `max-length`     | Specifies the maximum length of text for the component\'s value.                                                                                                            | `number`                                | `undefined` |\n| `messageOverrides` | --               | Use this property to override individual strings used by the component.                                                                                                    | `{ clear?: string; loading?: string; }` | `undefined` |\n| `minLength`        | `min-length`     | Specifies the minimum length of text for the component\'s value.                                                                                                            | `number`                                | `undefined` |\n| `name`             | `name`           | Specifies the name of the component.  Required to pass the component\'s `value` on form submission.                                                                         | `string`                                | `undefined` |\n| `pattern`          | `pattern`        | Specifies a regex pattern the component\'s `value` must match for validation. Read the native attribute\'s documentation on MDN for more info.                               | `string`                                | `undefined` |\n| `placeholder`      | `placeholder`    | Specifies placeholder text for the component.                                                                                                                              | `string`                                | `undefined` |\n| `prefixText`       | `prefix-text`    | Adds text to the start of the component.                                                                                                                                   | `string`                                | `undefined` |\n| `readOnly`         | `read-only`      | When `true`, the component\'s value can be read, but cannot be modified.                                                                                                    | `boolean`                               | `false`     |\n| `required`         | `required`       | When `true`, the component must have a value in order for the form to submit.                                                                                              | `boolean`                               | `false`     |\n| `scale`            | `scale`          | Specifies the size of the component.                                                                                                                                       | `"l" \\| "m" \\| "s"`                     | `"m"`       |\n| `status`           | `status`         | Specifies the status of the input field, which determines message and icons.                                                                                               | `"idle" \\| "invalid" \\| "valid"`        | `"idle"`    |\n| `suffixText`       | `suffix-text`    | Adds text to the end of the component.                                                                                                                                     | `string`                                | `undefined` |\n| `value`            | `value`          | The component\'s value.                                                                                                                                                     | `string`                                | `""`        |\n\n\n## Events\n\n| Event                    | Description                                         | Type                |\n| ------------------------ | --------------------------------------------------- | ------------------- |\n| `calciteInputTextChange` | Fires each time a new value is typed and committed. | `CustomEvent<void>` |\n| `calciteInputTextInput`  | Fires each time a new value is typed.               | `CustomEvent<void>` |\n\n\n## Methods\n\n### `selectText() => Promise<void>`\n\nSelects the text of the component\'s `value`.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot       | Description                                            |\n| ---------- | ------------------------------------------------------ |\n| `"action"` | A slot for positioning a button next to the component. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-progress](../progress)\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-input-text --\x3e calcite-progress\n  calcite-input-text --\x3e calcite-icon\n  style calcite-input-text fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input-text
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle")}"
      status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
      alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
      prefix-text="${Object(dist.text)("prefix-text","")}"
      suffix-text="${Object(dist.text)("suffix-text","")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("clearable",!1)}
      ${Object(helpers.a)("disabled",!1)}
      value="${Object(dist.text)("value","")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
    >
    </calcite-input-text>
  </div>
`}),withInputMessage=function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input-text
      id="input-with-label-and-input-message"
      status="${Object(dist.select)("status",["idle","invalid","valid"],"idle","Input")}"
      alignment="${Object(dist.select)("alignment",["start","end"],"start","Input")}"
      prefix-text="${Object(dist.text)("prefix-text","","Input")}"
      suffix-text="${Object(dist.text)("suffix-text","","Input")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("autofocus",!1)}
      ${Object(helpers.a)("required",!1)}
      value="${Object(dist.text)("value","","Input")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text","Input")}"
    >
    </calcite-input-text>
    <calcite-input-message
      ${Object(helpers.a)("active",!0)}
      ${Object(helpers.a)("icon",!1)}
      icon="${Object(dist.select)("icon",helpers.b,"","Input Message")}"
      >${Object(dist.text)("input message text","My great input message","Input Message")}</calcite-input-message
    >
  </div>
`},withSlottedAction=function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input-text
      id="input-with-slotted-action"
      status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
      alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
      prefix-text="${Object(dist.text)("prefix-text","")}"
      suffix-text="${Object(dist.text)("suffix-text","")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("clearable",!1)}
      ${Object(helpers.a)("disabled",!1)}
      value="${Object(dist.text)("value","")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
    >
      <calcite-button slot="action">${Object(dist.text)("action button text","Go")}</calcite-button>
    </calcite-input-text>
  </div>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input-text
      id="input-dark-mode"
      status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
      alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
      prefix-text="${Object(dist.text)("prefix-text","")}"
      suffix-text="${Object(dist.text)("suffix-text","")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("clearable",!1)}
      ${Object(helpers.a)("disabled",!1)}
      value="${Object(dist.text)("value","")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
    >
    </calcite-input-text>
    <calcite-input-message status="${Object(dist.select)("input message status",["idle","valid","invalid"],"idle")}"
      >${Object(dist.text)("input message text","My great input message")}</calcite-input-message
    >
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var mediumIconForLargeScaleStyling_TestOnly=function(){return formatting.a`
  <calcite-label scale="l">
    Input Label
    <calcite-input-text placeholder="Placeholder" scale="l"></calcite-input-text>
    <calcite-input-text
      placeholder="Placeholder"
      scale="l"
      icon="search"
      clearable
      value="sample input to show x"
    ></calcite-input-text>
  </calcite-label>
`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input-text\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      status="${select("status", ["idle", "valid", "invalid"], "idle")}"\n      status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n      alignment="${select("alignment", ["start", "end"], "start")}"\n      prefix-text="${text("prefix-text", "")}"\n      suffix-text="${text("suffix-text", "")}"\n      ${boolean("loading", false)}\n      ${boolean("clearable", false)}\n      ${boolean("disabled", false)}\n      value="${text("value", "")}"\n      placeholder="${text("placeholder", "Placeholder text")}"\n    >\n    </calcite-input-text>\n  </div>\n`'}},simple.parameters),withInputMessage.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input-text\n      id="input-with-label-and-input-message"\n      status="${select("status", ["idle", "invalid", "valid"], "idle", "Input")}"\n      alignment="${select("alignment", ["start", "end"], "start", "Input")}"\n      prefix-text="${text("prefix-text", "", "Input")}"\n      suffix-text="${text("suffix-text", "", "Input")}"\n      ${boolean("loading", false)}\n      ${boolean("autofocus", false)}\n      ${boolean("required", false)}\n      value="${text("value", "", "Input")}"\n      placeholder="${text("placeholder", "Placeholder text", "Input")}"\n    >\n    </calcite-input-text>\n    <calcite-input-message\n      ${boolean("active", true)}\n      ${boolean("icon", false)}\n      icon="${select("icon", iconNames, "", "Input Message")}"\n      >${text("input message text", "My great input message", "Input Message")}</calcite-input-message\n    >\n  </div>\n`'}},withInputMessage.parameters),withSlottedAction.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input-text\n      id="input-with-slotted-action"\n      status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n      alignment="${select("alignment", ["start", "end"], "start")}"\n      prefix-text="${text("prefix-text", "")}"\n      suffix-text="${text("suffix-text", "")}"\n      ${boolean("loading", false)}\n      ${boolean("clearable", false)}\n      ${boolean("disabled", false)}\n      value="${text("value", "")}"\n      placeholder="${text("placeholder", "Placeholder text")}"\n    >\n      <calcite-button slot="action">${text("action button text", "Go")}</calcite-button>\n    </calcite-input-text>\n  </div>\n`'}},withSlottedAction.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input-text\n      id="input-dark-mode"\n      status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n      alignment="${select("alignment", ["start", "end"], "start")}"\n      prefix-text="${text("prefix-text", "")}"\n      suffix-text="${text("suffix-text", "")}"\n      ${boolean("loading", false)}\n      ${boolean("clearable", false)}\n      ${boolean("disabled", false)}\n      value="${text("value", "")}"\n      placeholder="${text("placeholder", "Placeholder text")}"\n    >\n    </calcite-input-text>\n    <calcite-input-message status="${select("input message status", ["idle", "valid", "invalid"], "idle")}"\n      >${text("input message text", "My great input message")}</calcite-input-message\n    >\n  </div>\n`'}},darkModeRTL_TestOnly.parameters),mediumIconForLargeScaleStyling_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label scale="l">\n    Input Label\n    <calcite-input-text placeholder="Placeholder" scale="l"></calcite-input-text>\n    <calcite-input-text\n      placeholder="Placeholder"\n      scale="l"\n      icon="search"\n      clearable\n      value="sample input to show x"\n    ></calcite-input-text>\n  </calcite-label>\n`'}},mediumIconForLargeScaleStyling_TestOnly.parameters)},"./src/components/input-time-picker/input-time-picker.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"open_TestOnly",(function(){return open_TestOnly})),__webpack_require__.d(__webpack_exports__,"koreanLocale_TestOnly",(function(){return koreanLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"arabicLocaleNumberingSystem_TestOnly",(function(){return arabicLocaleNumberingSystem_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),floating_ui=__webpack_require__("./src/utils/floating-ui.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Time/Input Time Picker",parameters:{notes:'# calcite-input-time-picker\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-input-time-picker\n  hour-display-format="12"\n  name="light"\n  scale="m"\n  step="1"\n  value="12:21"\n></calcite-input-time-picker>\n```\n\n\n\n## Properties\n\n| Property             | Attribute             | Description                                                                                                                                                                                                                                                                                                                                                                   | Type                                                                                                                                                                                                                                                                                                              | Default      |\n| -------------------- | --------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------ |\n| `disabled`           | `disabled`            | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                                                                                                                                                                                                                      | `boolean`                                                                                                                                                                                                                                                                                                         | `false`      |\n| `form`               | `form`                | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any.                                                                                                                                                                                                                    | `string`                                                                                                                                                                                                                                                                                                          | `undefined`  |\n| `messagesOverrides`  | --                    | Use this property to override individual strings used by the component.                                                                                                                                                                                                                                                                                                       | `{ hour?: string; hourDown?: string; hourUp?: string; meridiem?: string; meridiemDown?: string; meridiemUp?: string; minute?: string; minuteDown?: string; minuteUp?: string; second?: string; secondDown?: string; secondUp?: string; }`                                                                         | `undefined`  |\n| `name`               | `name`                | Specifies the name of the component on form submission.                                                                                                                                                                                                                                                                                                                       | `string`                                                                                                                                                                                                                                                                                                          | `undefined`  |\n| `numberingSystem`    | `numbering-system`    | Specifies the Unicode numeral system used by the component for localization.                                                                                                                                                                                                                                                                                                  | `"arab" \\| "arabext" \\| "bali" \\| "beng" \\| "deva" \\| "fullwide" \\| "gujr" \\| "guru" \\| "hanidec" \\| "khmr" \\| "knda" \\| "laoo" \\| "latn" \\| "limb" \\| "mlym" \\| "mong" \\| "mymr" \\| "orya" \\| "tamldec" \\| "telu" \\| "thai" \\| "tibt"`                                                                           | `undefined`  |\n| `open`               | `open`                | When `true`, displays the `calcite-time-picker` component.                                                                                                                                                                                                                                                                                                                    | `boolean`                                                                                                                                                                                                                                                                                                         | `false`      |\n| `overlayPositioning` | `overlay-positioning` | Determines the type of positioning to use for the overlaid content.  Using `"absolute"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container\'s layout.  `"fixed"` should be used to escape an overflowing parent container, or when the reference element\'s `position` CSS property is `"fixed"`. | `"absolute" \\| "fixed"`                                                                                                                                                                                                                                                                                           | `"absolute"` |\n| `placement`          | `placement`           | Determines where the popover will be positioned relative to the input.                                                                                                                                                                                                                                                                                                        | `"auto" \\| "top" \\| "right" \\| "bottom" \\| "left" \\| "top-start" \\| "top-end" \\| "right-start" \\| "right-end" \\| "bottom-start" \\| "bottom-end" \\| "left-start" \\| "left-end" \\| "auto-start" \\| "auto-end" \\| "leading-start" \\| "leading" \\| "leading-end" \\| "trailing-end" \\| "trailing" \\| "trailing-start"` | `"auto"`     |\n| `readOnly`           | `read-only`           | When `true`, the component\'s value can be read, but controls are not accessible and the value cannot be modified.                                                                                                                                                                                                                                                             | `boolean`                                                                                                                                                                                                                                                                                                         | `false`      |\n| `scale`              | `scale`               | Specifies the size of the component.                                                                                                                                                                                                                                                                                                                                          | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                                                                                               | `"m"`        |\n| `step`               | `step`                | Specifies the granularity the component\'s `value` must adhere to (in seconds).                                                                                                                                                                                                                                                                                                | `number`                                                                                                                                                                                                                                                                                                          | `60`         |\n| `value`              | `value`               | The component\'s value in UTC (always 24-hour format).                                                                                                                                                                                                                                                                                                                         | `string`                                                                                                                                                                                                                                                                                                          | `null`       |\n\n\n## Events\n\n| Event                          | Description                                                     | Type                |\n| ------------------------------ | --------------------------------------------------------------- | ------------------- |\n| `calciteInputTimePickerChange` | Fires when the time value is changed as a result of user input. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `reposition(delayed?: boolean) => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-input](../input)\n- [calcite-popover](../popover)\n- [calcite-time-picker](../time-picker)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-input-time-picker --\x3e calcite-input\n  calcite-input-time-picker --\x3e calcite-popover\n  calcite-input-time-picker --\x3e calcite-time-picker\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-time-picker --\x3e calcite-icon\n  style calcite-input-time-picker fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-input-time-picker
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    name="${Object(dist.text)("name","simple")}"
    placement="${Object(dist.select)("placement",floating_ui.b,floating_ui.a)}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    step="${Object(dist.number)("step",1)}"
    value="${Object(dist.text)("value","10:37")}"
  >
  </calcite-input-time-picker>
`}),disabled_TestOnly=function(){return formatting.a`<calcite-input-time-picker disabled scale="l" icon step="1" value="01:02"></calcite-input-time-picker>`},darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-input-time-picker
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    class="calcite-mode-dark"
    name="${Object(dist.text)("name","dark")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    step="${Object(dist.number)("step",1)}"
    value="${Object(dist.text)("value","22:37")}"
  >
  </calcite-input-time-picker>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var open_TestOnly=function(){return formatting.a`
  <calcite-input-time-picker
    name="${Object(dist.text)("name","placement-top")}"
    value="${Object(dist.text)("value","10:37")}"
    ${Object(helpers.a)("open",!0)}
  >
  </calcite-input-time-picker>
`},koreanLocale_TestOnly=function(){return formatting.a`
  <calcite-input-time-picker
    id="reference-element"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    name="${Object(dist.text)("name","light")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    step="${Object(dist.number)("step",1)}"
    value="${Object(dist.text)("value","10:37")}"
    lang="ko"
    open
  >
  </calcite-input-time-picker>
`},arabicLocaleNumberingSystem_TestOnly=function(){return formatting.a`
  <calcite-input-time-picker
    id="reference-element"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    name="${Object(dist.text)("name","light")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    step="${Object(dist.number)("step",1)}"
    value="${Object(dist.text)("value","1:33:7")}"
    lang="ar"
    numbering-system="arab"
    dir="rtl"
    open
  >
  </calcite-input-time-picker>
`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-input-time-picker\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    name="${text("name", "simple")}"\n    placement="${select("placement", menuPlacements, defaultMenuPlacement)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    step="${number("step", 1)}"\n    value="${text("value", "10:37")}"\n  >\n  </calcite-input-time-picker>\n`'}},simple.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-input-time-picker disabled scale="l" icon step="1" value="01:02"></calcite-input-time-picker>`'}},disabled_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-input-time-picker\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    class="calcite-mode-dark"\n    name="${text("name", "dark")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    step="${number("step", 1)}"\n    value="${text("value", "22:37")}"\n  >\n  </calcite-input-time-picker>\n`'}},darkModeRTL_TestOnly.parameters),open_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-input-time-picker\n    name="${text("name", "placement-top")}"\n    value="${text("value", "10:37")}"\n    ${boolean("open", true)}\n  >\n  </calcite-input-time-picker>\n`'}},open_TestOnly.parameters),koreanLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-input-time-picker\n    id="reference-element"\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    name="${text("name", "light")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    step="${number("step", 1)}"\n    value="${text("value", "10:37")}"\n    lang="ko"\n    open\n  >\n  </calcite-input-time-picker>\n`'}},koreanLocale_TestOnly.parameters),arabicLocaleNumberingSystem_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-input-time-picker\n    id="reference-element"\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    name="${text("name", "light")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    step="${number("step", 1)}"\n    value="${text("value", "1:33:7")}"\n    lang="ar"\n    numbering-system="arab"\n    dir="rtl"\n    open\n  >\n  </calcite-input-time-picker>\n`'}},arabicLocaleNumberingSystem_TestOnly.parameters)},"./src/components/input/input.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"withInputMessage",(function(){return withInputMessage})),__webpack_require__.d(__webpack_exports__,"withSlottedAction",(function(){return withSlottedAction})),__webpack_require__.d(__webpack_exports__,"textarea",(function(){return input_stories_textarea})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"hebrewNumberingSystem_TestOnly",(function(){return hebrewNumberingSystem_TestOnly})),__webpack_require__.d(__webpack_exports__,"arabicLocaleWithLatinNumberingSystem_TestOnly",(function(){return arabicLocaleWithLatinNumberingSystem_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Input",parameters:{notes:'# calcite-input\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-input value="Entered value" placeholder="My placeholder"></calcite-input>\n```\n\n\n### Clearable\n\n```html\n<calcite-label>\n  Clearable item\n  <calcite-input clearable value="My great name" placeholder="John Doe"></calcite-input>\n</calcite-label>\n```\n\n\n### Native-events\n\nYou can also listen for native events emitted from `<calcite-input>`.\n\nYou must use `focusin`/`focusout` instead of `focus`/`blur` because these events bubble up from the rendered child element rendered inside of `<calcite-input>`\n\nAll events return an element and a value:\n\n```js\ninput.addEventListener("focusin", logFocus);\ninput.addEventListener("focusout", logBlur);\n\nfunction logChange() {\n  console.log(event.target.element);\n  console.log(event.target.value);\n}\n```\n\n\n### With-label\n\n```html\n<calcite-label for="invalid-input">\n  Invalid input\n  <calcite-input status="invalid" id="invalid-input" placeholder="Filter your files" value="adfo2h2"></calcite-input>\n  <calcite-input-message status="invalid" icon> Something doesn\'t look right </calcite-input-message>\n</calcite-label>\n```\n\n\n### With-message\n\n```html\n<calcite-label for="info">\n  My great label\n  <calcite-input id="info" placeholder="Enter your information"></calcite-input>\n  <calcite-input-message icon="3d-glasses"> Here\'s something you should know about this input </calcite-input-message>\n</calcite-label>\n```\n\n\n\n## Properties\n\n| Property           | Attribute            | Description                                                                                                                                                                                                               | Type                                                                                                                                                                                                                                    | Default      |\n| ------------------ | -------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------ |\n| `accept`           | `accept`             | Specifies a comma separated list of unique file type specifiers for limiting accepted file types. This property only has an effect when `type` is "file". Read the native attribute\'s documentation on MDN for more info. | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `alignment`        | `alignment`          | Specifies the text alignment of the component\'s value.                                                                                                                                                                    | `"end" \\| "start"`                                                                                                                                                                                                                      | `"start"`    |\n| `autocomplete`     | `autocomplete`       | Specifies the type of content to autocomplete, for use in forms. Read the native attribute\'s documentation on MDN for more info.                                                                                          | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `autofocus`        | `autofocus`          | When `true`, the component is focused on page load. Only one element can contain `autofocus`. If multiple elements have `autofocus`, the first element will receive focus.                                                | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `clearable`        | `clearable`          | When `true`, a clear button is displayed when the component has a value. The clear button shows by default for `"search"`, `"time"`, and `"date"` types, and will not display for the `"textarea"` type.                  | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `disabled`         | `disabled`           | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                                                                  | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `enterKeyHint`     | `enter-key-hint`     | Specifies the action label or icon for the Enter key on virtual keyboards. Read the native attribute\'s documentation on MDN for more info.                                                                                | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `form`             | `form`               | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any.                                                                | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `groupSeparator`   | `group-separator`    | When `true`, number values are displayed with a group separator corresponding to the language and country format.                                                                                                         | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `hidden`           | `hidden`             | When `true`, the component will not be visible.                                                                                                                                                                           | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `icon`             | `icon`               | When `true`, shows a default recommended icon. Alternatively, pass a Calcite UI Icon name to display a specific icon.                                                                                                     | `boolean \\| string`                                                                                                                                                                                                                     | `undefined`  |\n| `iconFlipRtl`      | `icon-flip-rtl`      | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).                                                                                                                              | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `inputMode`        | `input-mode`         | Specifies the type of content to help devices display an appropriate virtual keyboard. Read the native attribute\'s documentation on MDN for more info.                                                                    | `string`                                                                                                                                                                                                                                | `"text"`     |\n| `label`            | `label`              | Accessible name for the component.                                                                                                                                                                                        | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `loading`          | `loading`            | When `true`, a busy indicator is displayed.                                                                                                                                                                               | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `max`              | `max`                | Specifies the maximum value for type "number".                                                                                                                                                                            | `number`                                                                                                                                                                                                                                | `undefined`  |\n| `maxLength`        | `max-length`         | Specifies the maximum length of text for the component\'s value.                                                                                                                                                           | `number`                                                                                                                                                                                                                                | `undefined`  |\n| `messageOverrides` | --                   | Use this property to override individual strings used by the component.                                                                                                                                                   | `{ clear?: string; loading?: string; }`                                                                                                                                                                                                 | `undefined`  |\n| `min`              | `min`                | Specifies the minimum value for `type="number"`.                                                                                                                                                                          | `number`                                                                                                                                                                                                                                | `undefined`  |\n| `minLength`        | `min-length`         | Specifies the minimum length of text for the component\'s value.                                                                                                                                                           | `number`                                                                                                                                                                                                                                | `undefined`  |\n| `multiple`         | `multiple`           | When `true`, the component can accept more than one value. This property only has an effect when `type` is "email" or "file". Read the native attribute\'s documentation on MDN for more info.                             | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `name`             | `name`               | Specifies the name of the component.  Required to pass the component\'s `value` on form submission.                                                                                                                        | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `numberButtonType` | `number-button-type` | Specifies the placement of the buttons for `type="number"`.                                                                                                                                                               | `"horizontal" \\| "none" \\| "vertical"`                                                                                                                                                                                                  | `"vertical"` |\n| `numberingSystem`  | `numbering-system`   | Specifies the Unicode numeral system used by the component for localization.                                                                                                                                              | `"arab" \\| "arabext" \\| "bali" \\| "beng" \\| "deva" \\| "fullwide" \\| "gujr" \\| "guru" \\| "hanidec" \\| "khmr" \\| "knda" \\| "laoo" \\| "latn" \\| "limb" \\| "mlym" \\| "mong" \\| "mymr" \\| "orya" \\| "tamldec" \\| "telu" \\| "thai" \\| "tibt"` | `undefined`  |\n| `pattern`          | `pattern`            | Specifies a regex pattern the component\'s `value` must match for validation. Read the native attribute\'s documentation on MDN for more info.                                                                              | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `placeholder`      | `placeholder`        | Specifies placeholder text for the component.                                                                                                                                                                             | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `prefixText`       | `prefix-text`        | Adds text to the start of the component.                                                                                                                                                                                  | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `readOnly`         | `read-only`          | When `true`, the component\'s value can be read, but cannot be modified.                                                                                                                                                   | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `required`         | `required`           | When `true`, the component must have a value in order for the form to submit.                                                                                                                                             | `boolean`                                                                                                                                                                                                                               | `false`      |\n| `scale`            | `scale`              | Specifies the size of the component.                                                                                                                                                                                      | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                     | `"m"`        |\n| `status`           | `status`             | Specifies the status of the input field, which determines message and icons.                                                                                                                                              | `"idle" \\| "invalid" \\| "valid"`                                                                                                                                                                                                        | `"idle"`     |\n| `step`             | `step`               | Specifies the granularity the component\'s `value` must adhere to.                                                                                                                                                         | `"any" \\| number`                                                                                                                                                                                                                       | `undefined`  |\n| `suffixText`       | `suffix-text`        | Adds text to the end of the component.                                                                                                                                                                                    | `string`                                                                                                                                                                                                                                | `undefined`  |\n| `type`             | `type`               | Specifies the component type.  Note that the following `type`s add type-specific icons by default: `"date"`, `"email"`, `"password"`, `"search"`, `"tel"`, `"time"`.                                                      | `"color" \\| "date" \\| "datetime-local" \\| "email" \\| "file" \\| "image" \\| "month" \\| "number" \\| "password" \\| "search" \\| "tel" \\| "text" \\| "textarea" \\| "time" \\| "url" \\| "week"`                                                  | `"text"`     |\n| `value`            | `value`              | The component\'s value.                                                                                                                                                                                                    | `string`                                                                                                                                                                                                                                | `""`         |\n\n\n## Events\n\n| Event                | Description                                           | Type                |\n| -------------------- | ----------------------------------------------------- | ------------------- |\n| `calciteInputChange` | Fires each time a new `value` is typed and committed. | `CustomEvent<void>` |\n| `calciteInputInput`  | Fires each time a new `value` is typed.               | `CustomEvent<void>` |\n\n\n## Methods\n\n### `selectText() => Promise<void>`\n\nSelects the text of the component\'s `value`.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot       | Description                                                      |\n| ---------- | ---------------------------------------------------------------- |\n| `"action"` | A slot for positioning a `calcite-button` next to the component. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-color-picker](../color-picker)\n - [calcite-color-picker-hex-input](../color-picker-hex-input)\n - [calcite-filter](../filter)\n - [calcite-input-date-picker](../input-date-picker)\n - [calcite-input-time-picker](../input-time-picker)\n\n### Depends on\n\n- [calcite-progress](../progress)\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  calcite-color-picker --\x3e calcite-input\n  calcite-color-picker-hex-input --\x3e calcite-input\n  calcite-filter --\x3e calcite-input\n  calcite-input-date-picker --\x3e calcite-input\n  calcite-input-time-picker --\x3e calcite-input\n  style calcite-input fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input
      id="input-with-label"
      type="${Object(dist.select)("type",["text","textarea","email","password","tel","number","search","file","time","date"],"text")}"
      status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
      alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
      number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal")}"
      min="${Object(dist.number)("min",0)}"
      max="${Object(dist.number)("max",100)}"
      step="${Object(dist.number)("step",1)}"
      prefix-text="${Object(dist.text)("prefix-text","")}"
      suffix-text="${Object(dist.text)("suffix-text","")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("clearable",!1)}
      ${Object(helpers.a)("disabled",!1)}
      value="${Object(dist.text)("value","")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
    ></calcite-input>
  </div>
`}),withInputMessage=function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input
      id="input-with-label-and-input-message"
      type="${Object(dist.select)("type",["text","textarea","email","password","tel","number","search","file","time","date"],"text","Input")}"
      status="${Object(dist.select)("status",["idle","invalid","valid"],"idle","Input")}"
      alignment="${Object(dist.select)("alignment",["start","end"],"start","Input")}"
      number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal","Input")}"
      min="${Object(dist.number)("min",0)}"
      max="${Object(dist.number)("max",100)}"
      step="${Object(dist.number)("step",1)}"
      prefix-text="${Object(dist.text)("prefix-text","","Input")}"
      suffix-text="${Object(dist.text)("suffix-text","","Input")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("autofocus",!1)}
      ${Object(helpers.a)("required",!1)}
      value="${Object(dist.text)("value","","Input")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text","Input")}"
    >
    </calcite-input>
    <calcite-input-message ${Object(helpers.a)("icon",!1)} icon="${Object(dist.select)("icon",helpers.b,"","Input Message")}"
      >${Object(dist.text)("input message text","My great input message","Input Message")}</calcite-input-message
    >
  </div>
`},withSlottedAction=function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input
      id="input-with-slotted-action"
      type="${Object(dist.select)("type",["text","textarea","email","password","tel","number","search","file","time","date"],"text")}"
      status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
      alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
      number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal")}"
      min="${Object(dist.number)("min",0)}"
      max="${Object(dist.number)("max",100)}"
      step="${Object(dist.number)("step",1)}"
      prefix-text="${Object(dist.text)("prefix-text","")}"
      suffix-text="${Object(dist.text)("suffix-text","")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("clearable",!1)}
      ${Object(helpers.a)("disabled",!1)}
      value="${Object(dist.text)("value","")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
    >
      <calcite-button slot="action">${Object(dist.text)("action button text","Go")}</calcite-button>
    </calcite-input>
  </div>
`},input_stories_textarea=function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-input
      id="input-with-text-area"
      type="textarea"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("clearable",!1)}
      ${Object(helpers.a)("disabled",!1)}
      value="${Object(dist.text)("value","")}"
      placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
    >
    </calcite-input>
    <calcite-input-message status="${Object(dist.select)("input message status",["idle","valid","invalid"],"idle")}"
      >${Object(dist.text)("input message text","My great input message")}</calcite-input-message
    >
  </div>
`},disabled_TestOnly=function(){return formatting.a`<calcite-input disabled value="disabled"></calcite-input>`},darkModeRTL_TestOnly=function(){return formatting.a`
  <div dir="rtl" style="width:300px;max-width:100%;text-align:center;">
    <calcite-label
      class="calcite-mode-dark"
      status="${Object(dist.select)("status",["idle","valid","invalid"],"idle")}"
      for="input-dark-mode"
    >
      ${Object(dist.text)("label text","My great label")}
      <calcite-input
        id="input-dark-mode"
        type="${Object(dist.select)("type",["text","textarea","email","password","tel","number","search","file","time","date"],"text")}"
        status="${Object(dist.select)("status",["idle","invalid","valid"],"idle")}"
        alignment="${Object(dist.select)("alignment",["start","end"],"start")}"
        number-button-type="${Object(dist.select)("number-button-type",["none","horizontal","vertical"],"horizontal")}"
        min="${Object(dist.number)("min",0)}"
        max="${Object(dist.number)("max",100)}"
        step="${Object(dist.number)("step",1)}"
        prefix-text="${Object(dist.text)("prefix-text","")}"
        suffix-text="${Object(dist.text)("suffix-text","")}"
        ${Object(helpers.a)("loading",!1)}
        ${Object(helpers.a)("clearable",!1)}
        ${Object(helpers.a)("disabled",!1)}
        value="${Object(dist.text)("value","")}"
        placeholder="${Object(dist.text)("placeholder","Placeholder text")}"
      >
      </calcite-input>
      <calcite-input-message status="${Object(dist.select)("input message status",["idle","valid","invalid"],"idle")}"
        >${Object(dist.text)("input message text","My great input message")}</calcite-input-message
      >
    </calcite-label>
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var hebrewNumberingSystem_TestOnly=function(){return formatting.a` <calcite-input type="number" lang="ar-EG" numbering-system="hebr" value="123456"></calcite-input>`},arabicLocaleWithLatinNumberingSystem_TestOnly=function(){return formatting.a` <calcite-input type="number" lang="ar-EG" value="123456"></calcite-input>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input\n      id="input-with-label"\n      type="${select(\n        "type",\n        ["text", "textarea", "email", "password", "tel", "number", "search", "file", "time", "date"],\n        "text"\n      )}"\n      status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n      alignment="${select("alignment", ["start", "end"], "start")}"\n      number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal")}"\n      min="${number("min", 0)}"\n      max="${number("max", 100)}"\n      step="${number("step", 1)}"\n      prefix-text="${text("prefix-text", "")}"\n      suffix-text="${text("suffix-text", "")}"\n      ${boolean("loading", false)}\n      ${boolean("clearable", false)}\n      ${boolean("disabled", false)}\n      value="${text("value", "")}"\n      placeholder="${text("placeholder", "Placeholder text")}"\n    ></calcite-input>\n  </div>\n`'}},simple.parameters),withInputMessage.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input\n      id="input-with-label-and-input-message"\n      type="${select(\n        "type",\n        ["text", "textarea", "email", "password", "tel", "number", "search", "file", "time", "date"],\n        "text",\n        "Input"\n      )}"\n      status="${select("status", ["idle", "invalid", "valid"], "idle", "Input")}"\n      alignment="${select("alignment", ["start", "end"], "start", "Input")}"\n      number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal", "Input")}"\n      min="${number("min", 0)}"\n      max="${number("max", 100)}"\n      step="${number("step", 1)}"\n      prefix-text="${text("prefix-text", "", "Input")}"\n      suffix-text="${text("suffix-text", "", "Input")}"\n      ${boolean("loading", false)}\n      ${boolean("autofocus", false)}\n      ${boolean("required", false)}\n      value="${text("value", "", "Input")}"\n      placeholder="${text("placeholder", "Placeholder text", "Input")}"\n    >\n    </calcite-input>\n    <calcite-input-message ${boolean("icon", false)} icon="${select("icon", iconNames, "", "Input Message")}"\n      >${text("input message text", "My great input message", "Input Message")}</calcite-input-message\n    >\n  </div>\n`'}},withInputMessage.parameters),withSlottedAction.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input\n      id="input-with-slotted-action"\n      type="${select(\n        "type",\n        ["text", "textarea", "email", "password", "tel", "number", "search", "file", "time", "date"],\n        "text"\n      )}"\n      status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n      alignment="${select("alignment", ["start", "end"], "start")}"\n      number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal")}"\n      min="${number("min", 0)}"\n      max="${number("max", 100)}"\n      step="${number("step", 1)}"\n      prefix-text="${text("prefix-text", "")}"\n      suffix-text="${text("suffix-text", "")}"\n      ${boolean("loading", false)}\n      ${boolean("clearable", false)}\n      ${boolean("disabled", false)}\n      value="${text("value", "")}"\n      placeholder="${text("placeholder", "Placeholder text")}"\n    >\n      <calcite-button slot="action">${text("action button text", "Go")}</calcite-button>\n    </calcite-input>\n  </div>\n`'}},withSlottedAction.parameters),input_stories_textarea.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-input\n      id="input-with-text-area"\n      type="textarea"\n      ${boolean("loading", false)}\n      ${boolean("clearable", false)}\n      ${boolean("disabled", false)}\n      value="${text("value", "")}"\n      placeholder="${text("placeholder", "Placeholder text")}"\n    >\n    </calcite-input>\n    <calcite-input-message status="${select("input message status", ["idle", "valid", "invalid"], "idle")}"\n      >${text("input message text", "My great input message")}</calcite-input-message\n    >\n  </div>\n`'}},input_stories_textarea.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-input disabled value="disabled"></calcite-input>`'}},disabled_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div dir="rtl" style="width:300px;max-width:100%;text-align:center;">\n    <calcite-label\n      class="calcite-mode-dark"\n      status="${select("status", ["idle", "valid", "invalid"], "idle")}"\n      for="input-dark-mode"\n    >\n      ${text("label text", "My great label")}\n      <calcite-input\n        id="input-dark-mode"\n        type="${select(\n          "type",\n          ["text", "textarea", "email", "password", "tel", "number", "search", "file", "time", "date"],\n          "text"\n        )}"\n        status="${select("status", ["idle", "invalid", "valid"], "idle")}"\n        alignment="${select("alignment", ["start", "end"], "start")}"\n        number-button-type="${select("number-button-type", ["none", "horizontal", "vertical"], "horizontal")}"\n        min="${number("min", 0)}"\n        max="${number("max", 100)}"\n        step="${number("step", 1)}"\n        prefix-text="${text("prefix-text", "")}"\n        suffix-text="${text("suffix-text", "")}"\n        ${boolean("loading", false)}\n        ${boolean("clearable", false)}\n        ${boolean("disabled", false)}\n        value="${text("value", "")}"\n        placeholder="${text("placeholder", "Placeholder text")}"\n      >\n      </calcite-input>\n      <calcite-input-message status="${select("input message status", ["idle", "valid", "invalid"], "idle")}"\n        >${text("input message text", "My great input message")}</calcite-input-message\n      >\n    </calcite-label>\n  </div>\n`'}},darkModeRTL_TestOnly.parameters),hebrewNumberingSystem_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html` <calcite-input type="number" lang="ar-EG" numbering-system="hebr" value="123456"></calcite-input>`'}},hebrewNumberingSystem_TestOnly.parameters),arabicLocaleWithLatinNumberingSystem_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html` <calcite-input type="number" lang="ar-EG" value="123456"></calcite-input>`'}},arabicLocaleWithLatinNumberingSystem_TestOnly.parameters)},"./src/components/label/label.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"spacingWithLabel_TestOnly",(function(){return spacingWithLabel_TestOnly}));var utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Label",parameters:{notes:'# calcite-label\n\nRenders a `<label>` around its children and can be used with any [labelable native](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Form_labelable) or labelable calcite element.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-label>\n  Invalid input\n  <calcite-input status="invalid" type="search" placeholder="Filter your files" value="adfo2h2"></calcite-input>\n  <calcite-input-message icon status="invalid"> Something doesn\'t look right </calcite-input-message>\n</calcite-label>\n```\n\n\n### Browser-caveat\n\nWhen using the `default`, `inline` or `inline-space-between` layout option with [browsers that do not support the CSS `gap` property when used with flexbox](https://caniuse.com/flexbox-gap), you will need to use the `--calcite-label-margin-bottom` CSS variable and apply spacing manually to the label by wrapping it in a styled span like so:\n\n```html\n<calcite-label layout="inline" style="--calcite-label-margin-bottom:0;">\n  <span style="margin-right: 0.75rem">Text leading inline</span>\n  <calcite-checkbox></calcite-checkbox>\n</calcite-label>\n```\n\n\n\n## Properties\n\n| Property    | Attribute   | Description                                                                                                                                   | Type                                              | Default     |\n| ----------- | ----------- | --------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------- | ----------- |\n| `alignment` | `alignment` | Specifies the text alignment of the component.                                                                                                | `"center" \\| "end" \\| "start"`                    | `"start"`   |\n| `for`       | `for`       | Specifies the `id` of the component the label is bound to. Use when the component the label is bound to does not reside within the component. | `string`                                          | `undefined` |\n| `layout`    | `layout`    | Defines the layout of the label in relation to the component. Use `"inline"` positions to wrap the label and component on the same line.      | `"default" \\| "inline" \\| "inline-space-between"` | `"default"` |\n| `scale`     | `scale`     | Specifies the size of the component.                                                                                                          | `"l" \\| "m" \\| "s"`                               | `"m"`       |\n\n\n## Slots\n\n| Slot | Description                                                 |\n| ---- | ----------------------------------------------------------- |\n|      | A slot for adding text and a component that can be labeled. |\n\n\n## CSS Custom Properties\n\n| Name                            | Description                      |\n| ------------------------------- | -------------------------------- |\n| `--calcite-label-margin-bottom` | The spacing below the component. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-card](../card)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-card --\x3e calcite-label\n  style calcite-label fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;">
    <calcite-label>
      Default label wrapping a switch
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label>
      Default label wrapping a segmented control
      <calcite-segmented-control>
        <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>
        <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>
        <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>
      </calcite-segmented-control>
    </calcite-label>
    <calcite-label layout="inline">
      Text leading inline
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-switch></calcite-switch>
      Text trailing inline
    </calcite-label>
    <calcite-label layout="inline">
      Off
      <calcite-switch></calcite-switch>
      On
    </calcite-label>
    <calcite-label layout="inline">
      Text leading inline
      <calcite-checkbox></calcite-checkbox>
    </calcite-label>
    <calcite-label>
      Focus slider test
      <calcite-slider></calcite-slider>
    </calcite-label>
    <calcite-label>
      Focus slider test
      <calcite-slider min-value="10" max-value="80"></calcite-slider>
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-checkbox></calcite-checkbox>
      Text trailing inline
    </calcite-label>
    <calcite-label layout="inline-space-between">
      Text leading inline-space-between
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label layout="inline-space-between">
      <calcite-switch></calcite-switch>
      Text trailing inline-space-between
    </calcite-label>
    <calcite-label layout="inline-space-between">
      Text leading inline-space-between
      <calcite-checkbox></calcite-checkbox>
    </calcite-label>
    <calcite-label layout="inline-space-between">
      <calcite-checkbox></calcite-checkbox>
      Text trailing inline-space-between
    </calcite-label>
    <calcite-label>
      Default label wrapping a select
      <calcite-select>
        <calcite-option>a</calcite-option>
        <calcite-option>b</calcite-option>
        <calcite-option>c</calcite-option>
      </calcite-select>
    </calcite-label>
    <calcite-label>
      Add Notes
      <calcite-text-area></calcite-text-area>
    </calcite-label>
  </div>
`}),darkModeRTL_TestOnly=function(){return formatting.a`
  <div style="width:300px;max-width:100%;text-align:center;" class="calcite-mode-dark" dir="rtl">
    <calcite-label class="calcite-mode-dark">
      Default label wrapping a switch
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label class="calcite-mode-dark">
      Default label wrapping a segmented control
      <calcite-segmented-control>
        <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>
        <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>
        <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>
      </calcite-segmented-control>
    </calcite-label>
    <calcite-label class="calcite-mode-dark" layout="inline">
      Text leading inline
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label class="calcite-mode-dark" layout="inline">
      <calcite-switch></calcite-switch>
      Text trailing inline
    </calcite-label>
    <calcite-label class="calcite-mode-dark" layout="inline">
      Off
      <calcite-switch></calcite-switch>
      On
    </calcite-label>
    <calcite-label class="calcite-mode-dark" layout="inline">
      Text leading inline
      <calcite-checkbox></calcite-checkbox>
    </calcite-label>
    <calcite-label class="calcite-mode-dark">
      Focus slider test
      <calcite-slider></calcite-slider>
    </calcite-label>
    <calcite-label class="calcite-mode-dark">
      Focus slider test
      <calcite-slider min-value="10" max-value="80"></calcite-slider>
    </calcite-label>
    <calcite-label class="calcite-mode-dark" layout="inline">
      <calcite-checkbox></calcite-checkbox>
      Text trailing inline
    </calcite-label>
    <calcite-label class="calcite-mode-dark" layout="inline-space-between">
      Text leading inline-space-between
      <calcite-switch></calcite-switch>
    </calcite-label>
    <calcite-label class="calcite-mode-dark" layout="inline-space-between">
      <calcite-switch></calcite-switch>
      Text trailing inline-space-between
    </calcite-label>
    <calcite-label class="calcite-mode-dark" layout="inline-space-between">
      Text leading inline-space-between
      <calcite-checkbox></calcite-checkbox>
    </calcite-label>
    <calcite-label class="calcite-mode-dark" layout="inline-space-between">
      <calcite-checkbox></calcite-checkbox>
      Text trailing inline-space-between
    </calcite-label>
    <calcite-label>
      Add Notes
      <calcite-text-area></calcite-text-area>
    </calcite-label>
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var spacingWithLabel_TestOnly=function(){return formatting.a`
  <style>
    .css-var {
      --calcite-label-margin-bottom: 0;
    }
  </style>
  <calcite-label class="css-var">
    I don't have a bottom margin because the document I am rendered in has overridden the --calcite-label-margin-bottom
    css variable to 0.
    <calcite-input></calcite-input>
  </calcite-label>
  <calcite-label class="css-var">
    I should still not have a bottom margin because I'm using the CSS variable.
    <calcite-input></calcite-input>
  </calcite-label>
  <calcite-label>
    I should have a bottom margin
    <calcite-input></calcite-input>
  </calcite-label>
  <calcite-label>
    I should also have a bottom margin
    <calcite-input></calcite-input>
  </calcite-label>
  <calcite-label class="css-var">
    I should not have a bottom margin because I have the CSS variable set.
    <calcite-input></calcite-input>
  </calcite-label>
  <calcite-label class="css-var">
    I should not have a bottom margin because I have the CSS variable set.
    <calcite-input></calcite-input>
  </calcite-label>
  <calcite-label>
    Add Notes
    <calcite-text-area></calcite-text-area>
  </calcite-label>
`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;">\n    <calcite-label>\n      Default label wrapping a switch\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label>\n      Default label wrapping a segmented control\n      <calcite-segmented-control>\n        <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>\n        <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>\n        <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>\n      </calcite-segmented-control>\n    </calcite-label>\n    <calcite-label layout="inline">\n      Text leading inline\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-switch></calcite-switch>\n      Text trailing inline\n    </calcite-label>\n    <calcite-label layout="inline">\n      Off\n      <calcite-switch></calcite-switch>\n      On\n    </calcite-label>\n    <calcite-label layout="inline">\n      Text leading inline\n      <calcite-checkbox></calcite-checkbox>\n    </calcite-label>\n    <calcite-label>\n      Focus slider test\n      <calcite-slider></calcite-slider>\n    </calcite-label>\n    <calcite-label>\n      Focus slider test\n      <calcite-slider min-value="10" max-value="80"></calcite-slider>\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-checkbox></calcite-checkbox>\n      Text trailing inline\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      Text leading inline-space-between\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      <calcite-switch></calcite-switch>\n      Text trailing inline-space-between\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      Text leading inline-space-between\n      <calcite-checkbox></calcite-checkbox>\n    </calcite-label>\n    <calcite-label layout="inline-space-between">\n      <calcite-checkbox></calcite-checkbox>\n      Text trailing inline-space-between\n    </calcite-label>\n    <calcite-label>\n      Default label wrapping a select\n      <calcite-select>\n        <calcite-option>a</calcite-option>\n        <calcite-option>b</calcite-option>\n        <calcite-option>c</calcite-option>\n      </calcite-select>\n    </calcite-label>\n    <calcite-label>\n      Add Notes\n      <calcite-text-area></calcite-text-area>\n    </calcite-label>\n  </div>\n`'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:300px;max-width:100%;text-align:center;" class="calcite-mode-dark" dir="rtl">\n    <calcite-label class="calcite-mode-dark">\n      Default label wrapping a switch\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark">\n      Default label wrapping a segmented control\n      <calcite-segmented-control>\n        <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>\n        <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>\n        <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>\n      </calcite-segmented-control>\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark" layout="inline">\n      Text leading inline\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark" layout="inline">\n      <calcite-switch></calcite-switch>\n      Text trailing inline\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark" layout="inline">\n      Off\n      <calcite-switch></calcite-switch>\n      On\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark" layout="inline">\n      Text leading inline\n      <calcite-checkbox></calcite-checkbox>\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark">\n      Focus slider test\n      <calcite-slider></calcite-slider>\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark">\n      Focus slider test\n      <calcite-slider min-value="10" max-value="80"></calcite-slider>\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark" layout="inline">\n      <calcite-checkbox></calcite-checkbox>\n      Text trailing inline\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark" layout="inline-space-between">\n      Text leading inline-space-between\n      <calcite-switch></calcite-switch>\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark" layout="inline-space-between">\n      <calcite-switch></calcite-switch>\n      Text trailing inline-space-between\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark" layout="inline-space-between">\n      Text leading inline-space-between\n      <calcite-checkbox></calcite-checkbox>\n    </calcite-label>\n    <calcite-label class="calcite-mode-dark" layout="inline-space-between">\n      <calcite-checkbox></calcite-checkbox>\n      Text trailing inline-space-between\n    </calcite-label>\n    <calcite-label>\n      Add Notes\n      <calcite-text-area></calcite-text-area>\n    </calcite-label>\n  </div>\n`'}},darkModeRTL_TestOnly.parameters),spacingWithLabel_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    .css-var {\n      --calcite-label-margin-bottom: 0;\n    }\n  </style>\n  <calcite-label class="css-var">\n    I don\'t have a bottom margin because the document I am rendered in has overridden the --calcite-label-margin-bottom\n    css variable to 0.\n    <calcite-input></calcite-input>\n  </calcite-label>\n  <calcite-label class="css-var">\n    I should still not have a bottom margin because I\'m using the CSS variable.\n    <calcite-input></calcite-input>\n  </calcite-label>\n  <calcite-label>\n    I should have a bottom margin\n    <calcite-input></calcite-input>\n  </calcite-label>\n  <calcite-label>\n    I should also have a bottom margin\n    <calcite-input></calcite-input>\n  </calcite-label>\n  <calcite-label class="css-var">\n    I should not have a bottom margin because I have the CSS variable set.\n    <calcite-input></calcite-input>\n  </calcite-label>\n  <calcite-label class="css-var">\n    I should not have a bottom margin because I have the CSS variable set.\n    <calcite-input></calcite-input>\n  </calcite-label>\n  <calcite-label>\n    Add Notes\n    <calcite-text-area></calcite-text-area>\n  </calcite-label>\n`'}},spacingWithLabel_TestOnly.parameters)},"./src/components/link/link.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"iconStart",(function(){return iconStart})),__webpack_require__.d(__webpack_exports__,"iconEnd",(function(){return iconEnd})),__webpack_require__.d(__webpack_exports__,"iconStartAndIconEnd",(function(){return iconStartAndIconEnd})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),calcite_ui_icons=__webpack_require__("./node_modules/@esri/calcite-ui-icons/index.js"),formatting=__webpack_require__("./support/formatting.ts"),iconNames=Object.keys(calcite_ui_icons).filter((function(iconName){return iconName.endsWith("16")})).map((function(iconName){return iconName.replace("16","")})),simple=(__webpack_exports__.default=Object.assign({title:"Components/Link",parameters:{notes:'# calcite-link\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<div style="font-size: 16px; font-weight: 400;">\n  Some wrapping text\n  <calcite-link href="#">link text here</calcite-link>\n  around the link\n</div>\n```\n\n\n### Focusing\n\nYou can programmatically focus a `calcite-link` with the `setFocus()` method:\n\n```html\n<div onclick=document.querySelector(\'#my-link\').setFocus()>Focus!</div>\n```\n\n\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                                                                                                                                                                             | Type                         | Default     |\n| ------------- | --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `disabled`    | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                                                                                                | `boolean`                    | `false`     |\n| `download`    | `download`      | Prompts the user to save the linked URL instead of navigating to it. Can be used with or without a value: Without a value, the browser will suggest a filename/extension See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download. | `boolean \\| string`          | `false`     |\n| `href`        | `href`          | Specifies the URL of the linked resource, which can be set as an absolute or relative path.                                                                                                                                                             | `string`                     | `undefined` |\n| `iconEnd`     | `icon-end`      | Specifies an icon to display at the end of the component.                                                                                                                                                                                               | `string`                     | `undefined` |\n| `iconFlipRtl` | `icon-flip-rtl` | Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`"rtl"`).                                                                                                                                             | `"both" \\| "end" \\| "start"` | `undefined` |\n| `iconStart`   | `icon-start`    | Specifies an icon to display at the start of the component.                                                                                                                                                                                             | `string`                     | `undefined` |\n| `rel`         | `rel`           | Specifies the relationship to the linked document defined in `href`.                                                                                                                                                                                    | `string`                     | `undefined` |\n| `target`      | `target`        | Specifies the frame or window to open the linked document.                                                                                                                                                                                              | `string`                     | `undefined` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description             |\n| ---- | ----------------------- |\n|      | A slot for adding text. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-tile](../tile)\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-link --\x3e calcite-icon\n  calcite-tile --\x3e calcite-link\n  style calcite-link fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div
    style="font-size: ${Object(dist.select)("containing font size",["12","14","16","18","20","24","32"],"16")}px; font-weight: ${Object(dist.select)("containing font weight",["300","400","500","700"],"400")};"
  >
    Some wrapping text
    <calcite-link href="${Object(dist.text)("href","")}" ${Object(helpers.a)("disabled",!1)}>
      ${Object(dist.text)("text","link text here")}</calcite-link
    >
    around the link
  </div>
`}),iconStart=function(){return formatting.a`
  <div
    style="font-size: ${Object(dist.select)("containing font size",["12","14","16","18","20","24","32"],"16")}px; font-weight: ${Object(dist.select)("containing font weight",["300","400","500","700"],"400")};"
  >
    Some wrapping text
    <calcite-link
      href="${Object(dist.text)("href","")}"
      ${Object(helpers.a)("disabled",!1)}
      icon-start="${Object(dist.select)("icon-start",iconNames,iconNames[0])}"
    >
      ${Object(dist.text)("text","link text here")}</calcite-link
    >
    around the link
  </div>
`},iconEnd=function(){return formatting.a`
  <div
    style="font-size: ${Object(dist.select)("containing font size",["12","14","16","18","20","24","32"],"16")}px; font-weight: ${Object(dist.select)("containing font weight",["300","400","500","700"],"400")};"
  >
    Some wrapping text
    <calcite-link
      href="${Object(dist.text)("href","")}"
      ${Object(helpers.a)("disabled",!1)}
      icon-end="${Object(dist.select)("icon-end",iconNames,iconNames[0])}"
    >
      ${Object(dist.text)("text","link text here")}</calcite-link
    >
    around the link
  </div>
`},iconStartAndIconEnd=function(){return formatting.a`
  <div
    style="font-size: ${Object(dist.select)("containing font size",["12","14","16","18","20","24","32"],"16")}px; font-weight: ${Object(dist.select)("containing font weight",["300","400","500","700"],"400")};"
  >
    Some wrapping text
    <calcite-link
      href="${Object(dist.text)("href","")}"
      ${Object(helpers.a)("disabled",!1)}
      icon-start="${Object(dist.select)("icon-start",iconNames,iconNames[0])}"
      icon-end="${Object(dist.select)("icon-end",iconNames,iconNames[0])}"
    >
      ${Object(dist.text)("text","link text here")}</calcite-link
    >
    around the link
  </div>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <div
    class="calcite-mode-dark"
    dir="rtl"
    style="color: white; font-size: ${Object(dist.select)("containing font size",["12","14","16","18","20","24","32"],"16")}px; font-weight: ${Object(dist.select)("containing font weight",["300","400","500","700"],"400")};"
  >
    Some wrapping text
    <calcite-link class="calcite-mode-dark" href="${Object(dist.text)("href","")}" ${Object(helpers.a)("disabled",!1)}
      >${Object(dist.text)("text","link text here")}</calcite-link
    >
    around the link
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var disabled_TestOnly=function(){return formatting.a`<calcite-link disabled>disabled</calcite-link`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div\n    style="font-size: ${select(\n      "containing font size",\n      ["12", "14", "16", "18", "20", "24", "32"],\n      "16"\n    )}px; font-weight: ${select("containing font weight", ["300", "400", "500", "700"], "400")};"\n  >\n    Some wrapping text\n    <calcite-link href="${text("href", "")}" ${boolean("disabled", false)}>\n      ${text("text", "link text here")}</calcite-link\n    >\n    around the link\n  </div>\n`'}},simple.parameters),iconStart.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div\n    style="font-size: ${select(\n      "containing font size",\n      ["12", "14", "16", "18", "20", "24", "32"],\n      "16"\n    )}px; font-weight: ${select("containing font weight", ["300", "400", "500", "700"], "400")};"\n  >\n    Some wrapping text\n    <calcite-link\n      href="${text("href", "")}"\n      ${boolean("disabled", false)}\n      icon-start="${select("icon-start", iconNames, iconNames[0])}"\n    >\n      ${text("text", "link text here")}</calcite-link\n    >\n    around the link\n  </div>\n`'}},iconStart.parameters),iconEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div\n    style="font-size: ${select(\n      "containing font size",\n      ["12", "14", "16", "18", "20", "24", "32"],\n      "16"\n    )}px; font-weight: ${select("containing font weight", ["300", "400", "500", "700"], "400")};"\n  >\n    Some wrapping text\n    <calcite-link\n      href="${text("href", "")}"\n      ${boolean("disabled", false)}\n      icon-end="${select("icon-end", iconNames, iconNames[0])}"\n    >\n      ${text("text", "link text here")}</calcite-link\n    >\n    around the link\n  </div>\n`'}},iconEnd.parameters),iconStartAndIconEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div\n    style="font-size: ${select(\n      "containing font size",\n      ["12", "14", "16", "18", "20", "24", "32"],\n      "16"\n    )}px; font-weight: ${select("containing font weight", ["300", "400", "500", "700"], "400")};"\n  >\n    Some wrapping text\n    <calcite-link\n      href="${text("href", "")}"\n      ${boolean("disabled", false)}\n      icon-start="${select("icon-start", iconNames, iconNames[0])}"\n      icon-end="${select("icon-end", iconNames, iconNames[0])}"\n    >\n      ${text("text", "link text here")}</calcite-link\n    >\n    around the link\n  </div>\n`'}},iconStartAndIconEnd.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div\n    class="calcite-mode-dark"\n    dir="rtl"\n    style="color: white; font-size: ${select(\n      "containing font size",\n      ["12", "14", "16", "18", "20", "24", "32"],\n      "16"\n    )}px; font-weight: ${select("containing font weight", ["300", "400", "500", "700"], "400")};"\n  >\n    Some wrapping text\n    <calcite-link class="calcite-mode-dark" href="${text("href", "")}" ${boolean("disabled", false)}\n      >${text("text", "link text here")}</calcite-link\n    >\n    around the link\n  </div>\n`'}},darkModeRTL_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:"(): string => html`<calcite-link disabled>disabled</calcite-link`"}},disabled_TestOnly.parameters)},"./src/components/list/list.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"onlyLabelVersusOnlyDescription_TestOnly",(function(){return onlyLabelVersusOnlyDescription_TestOnly})),__webpack_require__.d(__webpack_exports__,"nestedItems",(function(){return nestedItems})),__webpack_require__.d(__webpack_exports__,"groupedItems",(function(){return groupedItems})),__webpack_require__.d(__webpack_exports__,"startAndEndContentSlots",(function(){return startAndEndContentSlots})),__webpack_require__.d(__webpack_exports__,"richContent",(function(){return richContent})),__webpack_require__.d(__webpack_exports__,"richContentFilterEnabled",(function(){return richContentFilterEnabled})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"customContent_TestOnly",(function(){return customContent_TestOnly}));var utils=__webpack_require__("./.storybook/utils.tsx"),placeholderImage=__webpack_require__("./.storybook/placeholderImage.ts"),formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),thumbnailImage=(__webpack_exports__.default=Object.assign({title:"Components/List",parameters:{notes:['# calcite-list\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Overview\n\nA general purpose list that enables users to construct list items that conform to Calcite styling.\n\n## Usage\n\n### Advanced\n\n```html\n<calcite-list>\n  <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">\n    <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n    <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>\n    <calcite-avatar\n      scale="l"\n      slot="content-start"\n      thumbnail="https://slm-assets.secondlife.com/assets/19947929/view_large/Capture_du_2018-03-04_20-40-56.jpg?1520192584"\n    ></calcite-avatar>\n    <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n    <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n    <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n  </calcite-list-item>\n  <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">\n    <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n    <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>\n    <calcite-avatar\n      scale="l"\n      slot="content-start"\n      thumbnail="https://www.seekpng.com/png/detail/90-906849_89kib-1024x631-finn-finn-adventure-time-face.png"\n    ></calcite-avatar>\n    <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n    <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n    <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n  </calcite-list-item>\n  <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">\n    <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n    <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>\n    <calcite-avatar\n      scale="l"\n      slot="content-start"\n      thumbnail="https://static.wikia.nocookie.net/adventuretimewithfinnandjake/images/c/c9/603138_454321168018988_647044807_n.png/revision/latest/scale-to-width-down/250?cb=20140624024310"\n    ></calcite-avatar>\n    <calcite-icon\n      scale="s"\n      icon="exclamation-mark-triangle"\n      slot="content-end"\n      style="color: var(--calcite-ui-danger)"\n    ></calcite-icon>\n    <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n    <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n  </calcite-list-item>\n</calcite-list>\n```\n\n\n### Basic\n\n```html\n<calcite-list>\n  <calcite-list-item\n    label="Cras iaculis ultricies nulla."\n    description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n  ></calcite-list-item>\n  <calcite-list-item\n    label="Ut aliquam sollicitudin leo."\n    description="Aliquam tincidunt mauris eu risus."\n  ></calcite-list-item>\n  <calcite-list-item\n    label="Vestibulum commodo felis quis tortor.\n  "\n    description="Vestibulum auctor dapibus neque.\n  "\n  ></calcite-list-item>\n</calcite-list>\n```\n\n\n### Grouped\n\n```html\n<calcite-list>\n  <calcite-list-item-group heading="Digits">\n    <calcite-list-item\n      label="One"\n      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n    ></calcite-list-item>\n    <calcite-list-item label="Two" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>\n    <calcite-list-item label="Three" description="Vestibulum auctor dapibus neque."></calcite-list-item>\n  </calcite-list-item-group>\n  <calcite-list-item-group heading="Letters">\n    <calcite-list-item\n      label="A"\n      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n    ></calcite-list-item>\n    <calcite-list-item label="B" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>\n    <calcite-list-item\n      label="C"\n      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n    ></calcite-list-item>\n  </calcite-list-item-group>\n</calcite-list>\n```\n\n\n### Nested\n\n```html\n<calcite-list>\n  <calcite-list-item\n    label="Cras iaculis ultricies nulla."\n    description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n  >\n    <calcite-list-item label="Ut aliquam sollicitudin leo." description="Aliquam tincidunt mauris eu risus.">\n      <calcite-list-item\n        label="Vestibulum commodo felis quis tortor."\n        description="Vestibulum auctor dapibus neque."\n      ></calcite-list-item></calcite-list-item\n  ></calcite-list-item>\n</calcite-list>\n```\n\n\n\n## Properties\n\n| Property              | Attribute              | Description                                                                                                                                                        | Type                                                                                          | Default     |\n| --------------------- | ---------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------------- | ----------- |\n| `disabled`            | `disabled`             | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                           | `boolean`                                                                                     | `false`     |\n| `filterEnabled`       | `filter-enabled`       | When `true`, an input appears at the top of the component that can be used by end users to filter `calcite-list-item`s.                                            | `boolean`                                                                                     | `false`     |\n| `filterPlaceholder`   | `filter-placeholder`   | Placeholder text for the component\'s filter input field.                                                                                                           | `string`                                                                                      | `undefined` |\n| `filterText`          | `filter-text`          | Text for the component\'s filter input field.                                                                                                                       | `string`                                                                                      | `undefined` |\n| `filteredData`        | --                     | The currently filtered `calcite-list-item` data.                                                                                                                   | `{ label: string; description: string; metadata: Record<string, unknown>; value: string; }[]` | `[]`        |\n| `filteredItems`       | --                     | The currently filtered `calcite-list-item`s.                                                                                                                       | `HTMLCalciteListItemElement[]`                                                                | `[]`        |\n| `label`               | `label`                | Specifies an accessible name for the component.                                                                                                                    | `string`                                                                                      | `undefined` |\n| `loading`             | `loading`              | When `true`, a busy indicator is displayed.                                                                                                                        | `boolean`                                                                                     | `false`     |\n| `selectedItems`       | --                     | The currently selected items.                                                                                                                                      | `HTMLCalciteListItemElement[]`                                                                | `[]`        |\n| `selectionAppearance` | `selection-appearance` | Specifies the selection appearance - `"icon"` (displays a checkmark or dot) or `"border"` (displays a border).                                                     | `"border" \\| "icon"`                                                                          | `"icon"`    |\n| `selectionMode`       | `selection-mode`       | Specifies the selection mode - `"multiple"` (allow any number of selected items), `"single"` (allows and require one selected item), `"none"` (no selected items). | `"multiple" \\| "none" \\| "single"`                                                            | `"none"`    |\n\n\n## Events\n\n| Event               | Description                                    | Type                |\n| ------------------- | ---------------------------------------------- | ------------------- |\n| `calciteListFilter` | Emits when the component\'s filter has changed. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                                     |\n| ---- | ----------------------------------------------- |\n|      | A slot for adding `calcite-list-item` elements. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-scrim](../scrim)\n- [calcite-filter](../filter)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-list --\x3e calcite-scrim\n  calcite-list --\x3e calcite-filter\n  calcite-scrim --\x3e calcite-loader\n  calcite-filter --\x3e calcite-input\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  style calcite-list fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n','# calcite-list-item\n\nA general purpose list that enables users to construct list items that conform to Calcite styling.\n\nIf you are looking for a list that handles more advanced usage like selection, see the documentation for \'calcite-pick-list\' or \'calcite-value-list\'.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property      | Attribute     | Description                                                                                              | Type                        | Default     |\n| ------------- | ------------- | -------------------------------------------------------------------------------------------------------- | --------------------------- | ----------- |\n| `description` | `description` | A description for the component. Displays below the label text.                                          | `string`                    | `undefined` |\n| `disabled`    | `disabled`    | When `true`, interaction is prevented and the component is displayed with lower opacity.                 | `boolean`                   | `false`     |\n| `label`       | `label`       | The label text of the component. Displays above the description text.                                    | `string`                    | `undefined` |\n| `metadata`    | --            | Provides additional metadata to the component. Primary use is for a filter on the parent `calcite-list`. | `{ [x: string]: unknown; }` | `undefined` |\n| `open`        | `open`        | When `true`, the item is open to show child components.                                                  | `boolean`                   | `false`     |\n| `selected`    | `selected`    | When `true`, the component is selected.                                                                  | `boolean`                   | `false`     |\n| `value`       | `value`       | The component\'s value.                                                                                   | `any`                       | `undefined` |\n\n\n## Events\n\n| Event                   | Description                                | Type                |\n| ----------------------- | ------------------------------------------ | ------------------- |\n| `calciteListItemSelect` | Emits when the item\'s content is selected. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot              | Description                                                                                                    |\n| ----------------- | -------------------------------------------------------------------------------------------------------------- |\n|                   | A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.                                  |\n| `"actions-end"`   | A slot for adding actionable `calcite-action` elements after the content of the component.                     |\n| `"actions-start"` | A slot for adding actionable `calcite-action` elements before the content of the component.                    |\n| `"content"`       | A slot for adding non-actionable, centered content in place of the `label` and `description` of the component. |\n| `"content-end"`   | A slot for adding non-actionable elements after the label and description of the component.                    |\n| `"content-start"` | A slot for adding non-actionable elements before the label and description of the component.                   |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-list-item --\x3e calcite-icon\n  style calcite-list-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',"# calcite-list-item-group\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property   | Attribute  | Description                                                                              | Type      | Default     |\n| ---------- | ---------- | ---------------------------------------------------------------------------------------- | --------- | ----------- |\n| `disabled` | `disabled` | When `true`, interaction is prevented and the component is displayed with lower opacity. | `boolean` | `false`     |\n| `heading`  | `heading`  | The header text for all nested `calcite-list-item` rows.                                 | `string`  | `undefined` |\n\n\n## Slots\n\n| Slot | Description                                                                   |\n| ---- | ----------------------------------------------------------------------------- |\n|      | A slot for adding `calcite-list-item` and `calcite-list-item-group` elements. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"],chromatic:{delay:500}}},Object(helpers.c)()),Object(placeholderImage.a)({width:44,height:44})),knobsHTML=function(){return formatting.a`selection-mode="${Object(dist.select)("selection-mode",["single","multiple","none"],"none")}"
selection-appearance="${Object(dist.select)("selection-appearance",["icon","border"],"icon")}" ${Object(helpers.a)("loading",!1)}
${Object(helpers.a)("filter-enabled",!1)} ${Object(helpers.a)("disabled",!1)} ${Object(dist.text)("label","My List")}`},simple=function(){return formatting.a`
  <calcite-list ${knobsHTML()}>
    <calcite-list-item
      selected
      label="Cras iaculis ultricies nulla."
      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
    ></calcite-list-item>
    <calcite-list-item
      label="Ut aliquam sollicitudin leo."
      description="Aliquam tincidunt mauris eu risus."
    ></calcite-list-item>
    <calcite-list-item
      label="Vestibulum commodo felis quis tortor.
    "
      description="Vestibulum auctor dapibus neque.
    "
    ></calcite-list-item>
    <calcite-list-item
      disabled
      label="Vestibulum commodo felis quis tortor.
    "
      description="Vestibulum auctor dapibus neque.
    "
    ></calcite-list-item>
  </calcite-list>
`},onlyLabelVersusOnlyDescription_TestOnly=function(){return formatting.a`
  <calcite-list ${knobsHTML()}>
    <calcite-list-item label="This has no description."> </calcite-list-item>
  </calcite-list>
  <calcite-list>
    <calcite-list-item description="This has no label."> </calcite-list-item>
  </calcite-list>
`},nestedItems=function(){return formatting.a`
  <calcite-list ${knobsHTML()}>
    <calcite-list-item
      label="Level 1 item 1"
      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
    ></calcite-list-item>
    <calcite-list-item label="Level 1 item 2" description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit.">
      <calcite-list-item label="Level 2 item 1" description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit.">
        <calcite-list-item
          label="Level 3 item 1"
          description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
        ></calcite-list-item>
        <calcite-list-item
          label="Level 3 item 2"
          description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
        >
          <calcite-list-item
            label="Level 4 item 1"
            description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
          >
            <calcite-list-item
              label="Level 5 item 1"
              description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
            ></calcite-list-item>
          </calcite-list-item>
          <calcite-list-item
            label="Level 4 item 2"
            description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
          ></calcite-list-item>
          <calcite-list-item
            label="Level 4 item 3"
            description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
          ></calcite-list-item>
        </calcite-list-item>
        <calcite-list-item
          label="Level 3 item 3"
          description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
        ></calcite-list-item>
      </calcite-list-item>
      <calcite-list-item
        label="Level 2 item 2"
        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
      ></calcite-list-item>
      <calcite-list-item
        label="Level 2 item 3"
        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
      ></calcite-list-item>
    </calcite-list-item>
    <calcite-list-item
      label="Level 1 item 3"
      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
    ></calcite-list-item>
  </calcite-list>
`};nestedItems.parameters={chromatic:{diffThreshold:1}};var groupedItems=function(){return formatting.a`
  <calcite-list ${knobsHTML()}>
    <calcite-list-item-group heading="Nested">
      <calcite-list-item
        expanded
        label="Cras iaculis ultricies nulla."
        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
      >
        <calcite-list-item
          expanded
          label="Ut aliquam sollicitudin leo."
          description="Aliquam tincidunt mauris eu risus."
        >
          <calcite-list-item
            label="Vestibulum commodo felis quis tortor."
            description="Vestibulum auctor dapibus neque."
          ></calcite-list-item></calcite-list-item
      ></calcite-list-item>
    </calcite-list-item-group>
    <calcite-list-item-group heading="Digits">
      <calcite-list-item
        label="One"
        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
      ></calcite-list-item>
      <calcite-list-item label="Two" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>
      <calcite-list-item label="Three" description="Vestibulum auctor dapibus neque."></calcite-list-item>
    </calcite-list-item-group>
    <calcite-list-item-group heading="Letters">
      <calcite-list-item
        label="A"
        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
      ></calcite-list-item>
      <calcite-list-item label="B" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>
      <calcite-list-item
        label="C"
        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
      ></calcite-list-item>
    </calcite-list-item-group>
  </calcite-list>
`};groupedItems.parameters={chromatic:{diffThreshold:1}};var startAndEndContentSlots=function(){return formatting.a`<calcite-list ${knobsHTML()}>
  <calcite-list-item>
    <calcite-action slot="actions-end" icon="ellipsis"> </calcite-action>
    <calcite-icon icon="layers" scale="m" slot="content-start"></calcite-icon>
    <span slot="content-start">Some value or something and a <b>thing</b>.</span>
    <div slot="content-end" style="display: flex; justify-content: flex-end">
      <calcite-chip class="list-chip" icon="ribbon-rosette" scale="s">Review</calcite-chip>
      <calcite-chip class="list-chip" icon="globe" scale="s">Good</calcite-chip>
    </div>
  </calcite-list-item>
  <calcite-list-item>
    <calcite-action slot="actions-end" icon="ellipsis"> </calcite-action>
    <calcite-icon icon="user" scale="m" slot="content-start"></calcite-icon>
    <span slot="content-start">Some value or something and a <b>thing</b>.</span>
    <div slot="content-end" style="display: flex; justify-content: flex-end">
      <calcite-chip class="list-chip" icon="globe" scale="s">Good</calcite-chip>
    </div>
  </calcite-list-item>
  <calcite-list-item>
    <calcite-action slot="actions-end" icon="ellipsis"> </calcite-action>
    <calcite-icon icon="user" scale="m" slot="content-start"></calcite-icon>
    <span slot="content-start">Some value or something and a <b>thing</b>.</span>
    <div slot="content-end" style="display: flex; justify-content: flex-end">
      <calcite-chip class="list-chip" icon="bell" scale="s">Halp!</calcite-chip>
    </div>
  </calcite-list-item>
</calcite-list> `},richContent=function(){return formatting.a`
  <calcite-list ${knobsHTML()}>
    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon
        scale="s"
        icon="exclamation-mark-triangle"
        slot="content-end"
        style="color: var(--calcite-ui-danger)"
      ></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
  </calcite-list>
`},richContentFilterEnabled=function(){return formatting.a`
  <calcite-list filter-enabled>
    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon
        scale="s"
        icon="exclamation-mark-triangle"
        slot="content-end"
        style="color: var(--calcite-ui-danger)"
      ></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
  </calcite-list>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-list class="calcite-mode-dark" dir="rtl" ${knobsHTML()}>
    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">
      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>
      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>
      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>
      <calcite-icon
        scale="s"
        icon="exclamation-mark-triangle"
        slot="content-end"
        style="color: var(--calcite-ui-danger)"
      ></calcite-icon>
      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>
      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>
    </calcite-list-item>
  </calcite-list>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var disabled_TestOnly=function(){return formatting.a`<calcite-list disabled>
  <calcite-list-item
    label="Cras iaculis ultricies nulla."
    description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
  ></calcite-list-item>
  <calcite-list-item
    disabled
    label="Ut aliquam sollicitudin leo."
    description="Aliquam tincidunt mauris eu risus."
  ></calcite-list-item>
  <calcite-list-item
    label="Vestibulum commodo felis quis tortor.
    "
    description="Vestibulum auctor dapibus neque.
    "
  ></calcite-list-item>
</calcite-list>`},customContent_TestOnly=function(){return formatting.a`<calcite-list disabled>
  <calcite-list-item>
    <div slot="content">
      <strong>Cras iaculis ultricies nulla.</strong>
      <div>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</div>
    </div></calcite-list-item
  >
  <calcite-list-item disabled>
    <div slot="content">
      <strong>Cras iaculis ultricies nulla.</strong>
      <div>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</div>
    </div></calcite-list-item
  >
  <calcite-list-item
    ><div slot="content">
      <strong>Cras iaculis ultricies nulla.</strong>
      <div>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</div>
    </div></calcite-list-item
  >
</calcite-list>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list ${knobsHTML()}>\n    <calcite-list-item\n      selected\n      label="Cras iaculis ultricies nulla."\n      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n    ></calcite-list-item>\n    <calcite-list-item\n      label="Ut aliquam sollicitudin leo."\n      description="Aliquam tincidunt mauris eu risus."\n    ></calcite-list-item>\n    <calcite-list-item\n      label="Vestibulum commodo felis quis tortor.\n    "\n      description="Vestibulum auctor dapibus neque.\n    "\n    ></calcite-list-item>\n    <calcite-list-item\n      disabled\n      label="Vestibulum commodo felis quis tortor.\n    "\n      description="Vestibulum auctor dapibus neque.\n    "\n    ></calcite-list-item>\n  </calcite-list>\n`'}},simple.parameters),onlyLabelVersusOnlyDescription_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list ${knobsHTML()}>\n    <calcite-list-item label="This has no description."> </calcite-list-item>\n  </calcite-list>\n  <calcite-list>\n    <calcite-list-item description="This has no label."> </calcite-list-item>\n  </calcite-list>\n`'}},onlyLabelVersusOnlyDescription_TestOnly.parameters),nestedItems.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list ${knobsHTML()}>\n    <calcite-list-item\n      label="Level 1 item 1"\n      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n    ></calcite-list-item>\n    <calcite-list-item label="Level 1 item 2" description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit.">\n      <calcite-list-item label="Level 2 item 1" description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit.">\n        <calcite-list-item\n          label="Level 3 item 1"\n          description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n        ></calcite-list-item>\n        <calcite-list-item\n          label="Level 3 item 2"\n          description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n        >\n          <calcite-list-item\n            label="Level 4 item 1"\n            description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n          >\n            <calcite-list-item\n              label="Level 5 item 1"\n              description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n            ></calcite-list-item>\n          </calcite-list-item>\n          <calcite-list-item\n            label="Level 4 item 2"\n            description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n          ></calcite-list-item>\n          <calcite-list-item\n            label="Level 4 item 3"\n            description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n          ></calcite-list-item>\n        </calcite-list-item>\n        <calcite-list-item\n          label="Level 3 item 3"\n          description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n        ></calcite-list-item>\n      </calcite-list-item>\n      <calcite-list-item\n        label="Level 2 item 2"\n        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n      ></calcite-list-item>\n      <calcite-list-item\n        label="Level 2 item 3"\n        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n      ></calcite-list-item>\n    </calcite-list-item>\n    <calcite-list-item\n      label="Level 1 item 3"\n      description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n    ></calcite-list-item>\n  </calcite-list>\n`'}},nestedItems.parameters),groupedItems.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list ${knobsHTML()}>\n    <calcite-list-item-group heading="Nested">\n      <calcite-list-item\n        expanded\n        label="Cras iaculis ultricies nulla."\n        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n      >\n        <calcite-list-item\n          expanded\n          label="Ut aliquam sollicitudin leo."\n          description="Aliquam tincidunt mauris eu risus."\n        >\n          <calcite-list-item\n            label="Vestibulum commodo felis quis tortor."\n            description="Vestibulum auctor dapibus neque."\n          ></calcite-list-item></calcite-list-item\n      ></calcite-list-item>\n    </calcite-list-item-group>\n    <calcite-list-item-group heading="Digits">\n      <calcite-list-item\n        label="One"\n        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n      ></calcite-list-item>\n      <calcite-list-item label="Two" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>\n      <calcite-list-item label="Three" description="Vestibulum auctor dapibus neque."></calcite-list-item>\n    </calcite-list-item-group>\n    <calcite-list-item-group heading="Letters">\n      <calcite-list-item\n        label="A"\n        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n      ></calcite-list-item>\n      <calcite-list-item label="B" description="Aliquam tincidunt mauris eu risus."></calcite-list-item>\n      <calcite-list-item\n        label="C"\n        description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n      ></calcite-list-item>\n    </calcite-list-item-group>\n  </calcite-list>\n`'}},groupedItems.parameters),startAndEndContentSlots.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-list ${knobsHTML()}>\n  <calcite-list-item>\n    <calcite-action slot="actions-end" icon="ellipsis"> </calcite-action>\n    <calcite-icon icon="layers" scale="m" slot="content-start"></calcite-icon>\n    <span slot="content-start">Some value or something and a <b>thing</b>.</span>\n    <div slot="content-end" style="display: flex; justify-content: flex-end">\n      <calcite-chip class="list-chip" icon="ribbon-rosette" scale="s">Review</calcite-chip>\n      <calcite-chip class="list-chip" icon="globe" scale="s">Good</calcite-chip>\n    </div>\n  </calcite-list-item>\n  <calcite-list-item>\n    <calcite-action slot="actions-end" icon="ellipsis"> </calcite-action>\n    <calcite-icon icon="user" scale="m" slot="content-start"></calcite-icon>\n    <span slot="content-start">Some value or something and a <b>thing</b>.</span>\n    <div slot="content-end" style="display: flex; justify-content: flex-end">\n      <calcite-chip class="list-chip" icon="globe" scale="s">Good</calcite-chip>\n    </div>\n  </calcite-list-item>\n  <calcite-list-item>\n    <calcite-action slot="actions-end" icon="ellipsis"> </calcite-action>\n    <calcite-icon icon="user" scale="m" slot="content-start"></calcite-icon>\n    <span slot="content-start">Some value or something and a <b>thing</b>.</span>\n    <div slot="content-end" style="display: flex; justify-content: flex-end">\n      <calcite-chip class="list-chip" icon="bell" scale="s">Halp!</calcite-chip>\n    </div>\n  </calcite-list-item>\n</calcite-list> `'}},startAndEndContentSlots.parameters),richContent.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list ${knobsHTML()}>\n    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon\n        scale="s"\n        icon="exclamation-mark-triangle"\n        slot="content-end"\n        style="color: var(--calcite-ui-danger)"\n      ></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n  </calcite-list>\n`'}},richContent.parameters),richContentFilterEnabled.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list filter-enabled>\n    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon\n        scale="s"\n        icon="exclamation-mark-triangle"\n        slot="content-end"\n        style="color: var(--calcite-ui-danger)"\n      ></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n  </calcite-list>\n`'}},richContentFilterEnabled.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-list class="calcite-mode-dark" dir="rtl" ${knobsHTML()}>\n    <calcite-list-item label="Princess Bubblegum" description="Ruler of The Candy Kingdom">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="effects" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Finn Mertens" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="running" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon scale="s" icon="check" slot="content-end" style="color: var(--calcite-ui-success)"></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n    <calcite-list-item label="Jake T. Dog" description="Part owner of the Tree House">\n      <calcite-action icon="drag" label="drag" scale="s" slot="actions-start"></calcite-action>\n      <calcite-icon scale="l" icon="walking" slot="content-start"></calcite-icon>\n      <calcite-avatar scale="l" slot="content-start" thumbnail="${thumbnailImage}"></calcite-avatar>\n      <calcite-icon\n        scale="s"\n        icon="exclamation-mark-triangle"\n        slot="content-end"\n        style="color: var(--calcite-ui-danger)"\n      ></calcite-icon>\n      <calcite-action icon="ellipsis" label="menu" slot="actions-end"></calcite-action>\n      <calcite-action icon="x" label="remove" slot="actions-end"></calcite-action>\n    </calcite-list-item>\n  </calcite-list>\n`'}},darkModeRTL_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-list disabled>\n  <calcite-list-item\n    label="Cras iaculis ultricies nulla."\n    description="Lorem ipsum dolor sit amet, consectetuer adipiscing elit."\n  ></calcite-list-item>\n  <calcite-list-item\n    disabled\n    label="Ut aliquam sollicitudin leo."\n    description="Aliquam tincidunt mauris eu risus."\n  ></calcite-list-item>\n  <calcite-list-item\n    label="Vestibulum commodo felis quis tortor.\n    "\n    description="Vestibulum auctor dapibus neque.\n    "\n  ></calcite-list-item>\n</calcite-list>`'}},disabled_TestOnly.parameters),customContent_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-list disabled>\n  <calcite-list-item>\n    <div slot="content">\n      <strong>Cras iaculis ultricies nulla.</strong>\n      <div>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</div>\n    </div></calcite-list-item\n  >\n  <calcite-list-item disabled>\n    <div slot="content">\n      <strong>Cras iaculis ultricies nulla.</strong>\n      <div>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</div>\n    </div></calcite-list-item\n  >\n  <calcite-list-item\n    ><div slot="content">\n      <strong>Cras iaculis ultricies nulla.</strong>\n      <div>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</div>\n    </div></calcite-list-item\n  >\n</calcite-list>`'}},customContent_TestOnly.parameters)},"./src/components/loader/loader.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple_NoTest",(function(){return simple_NoTest})),__webpack_require__.d(__webpack_exports__,"simple_TestOnly",(function(){return simple_TestOnly})),__webpack_require__.d(__webpack_exports__,"inline_NoTest",(function(){return inline_NoTest})),__webpack_require__.d(__webpack_exports__,"inline_TestOnly",(function(){return inline_TestOnly})),__webpack_require__.d(__webpack_exports__,"customTheme_NoTest",(function(){return customTheme_NoTest})),__webpack_require__.d(__webpack_exports__,"customTheme_TestOnly",(function(){return customTheme_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),formatting=__webpack_require__("./support/formatting.ts"),simple_NoTest=(__webpack_exports__.default=Object.assign({title:"Components/Loader",parameters:{notes:'# calcite-loader\n\nThe `calcite-loader` component can act as a determinate or indeterminate loading indicator.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nYou can use the `active` attribute to toggle visibility:\n\n```html\n<calcite-loader text="Fetching data..."></calcite-loader>\n```\n\n\n### Compact\n\nFor instances when you don\'t have room for the full loader, you can use the smaller `inline` version of the loader. The inline version is meant to sit to the left of text:\n\n```html\n<p><calcite-loader inline></calcite-loader> Inline loader</p>\n```\n\n\n### Determinate\n\nIf you can calculate your progress, it\'s best to use the determinate version of the loader. Update the `value` of the element when progress is made. This will display a progress bar along the perimeter of the loader showing 32% complete:\n\n```html\n<calcite-loader type="determinate" value="32"></calcite-loader>\n```\n\n\n\n## Properties\n\n| Property             | Attribute | Description                                                                                          | Type                               | Default     |\n| -------------------- | --------- | ---------------------------------------------------------------------------------------------------- | ---------------------------------- | ----------- |\n| `inline`             | `inline`  | When `true`, displays smaller and appears to the left of the text.                                   | `boolean`                          | `false`     |\n| `label` _(required)_ | `label`   | Accessible name for the component.                                                                   | `string`                           | `undefined` |\n| `scale`              | `scale`   | Specifies the size of the component.                                                                 | `"l" \\| "m" \\| "s"`                | `"m"`       |\n| `text`               | `text`    | Text that displays under the component\'s indicator.                                                  | `string`                           | `""`        |\n| `type`               | `type`    | Specifies the component type.  Use `"indeterminate"` if finding actual progress value is impossible. | `"determinate" \\| "indeterminate"` | `undefined` |\n| `value`              | `value`   | The component\'s value. Valid only for `"determinate"` indicators. Percent complete of 100.           | `number`                           | `0`         |\n\n\n## CSS Custom Properties\n\n| Name                           | Description                                                                     |\n| ------------------------------ | ------------------------------------------------------------------------------- |\n| `--calcite-loader-font-size`   | Specifies the font size of the loading percentage when type is `"determinate"`. |\n| `--calcite-loader-padding`     | Specifies the padding of the loader.                                            |\n| `--calcite-loader-size`        | The width and height of a non-inline loader.                                    |\n| `--calcite-loader-size-inline` | The width and height of an inline loader                                        |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-action](../action)\n - [calcite-block](../block)\n - [calcite-button](../button)\n - [calcite-card](../card)\n - [calcite-scrim](../scrim)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-action --\x3e calcite-loader\n  calcite-block --\x3e calcite-loader\n  calcite-button --\x3e calcite-loader\n  calcite-card --\x3e calcite-loader\n  calcite-scrim --\x3e calcite-loader\n  style calcite-loader fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-loader
    type="${Object(dist.select)("type",["determinate","indeterminate"],"indeterminate")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    value="${Object(dist.number)("value",0,{range:!0,min:0,max:100,step:1})}"
  />
`});simple_NoTest.parameters={chromatic:{disableSnapshot:!0}};var simple_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-loader
    type="${Object(dist.select)("type",["determinate","indeterminate"],"indeterminate")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    value="${Object(dist.number)("value",0,{range:!0,min:0,max:100,step:1})}"
  />
`},inline_NoTest=function(){return formatting.a`
  <div style="display: inline-flex;align-items: center;justify-content: center;width: 100%;">
  <calcite-loader
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    inline
  /></calcite-loader><span style="margin:0 10px">Next to some text</span>
  </div>
`};inline_NoTest.parameters={chromatic:{disableSnapshot:!0}};var inline_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <div style="display: inline-flex;align-items: center;justify-content: center;width: 100%;">
  <calcite-loader
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    inline
  /></calcite-loader><span style="margin:0 10px">Next to some text</span>
  </div>
`},customTheme_NoTest=function(){return formatting.a`
  <calcite-loader
    type="${Object(dist.select)("type",["determinate","indeterminate"],"indeterminate")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    value="${Object(dist.number)("value",0,{range:!0,min:0,max:100,step:1})}"
    style="
    --calcite-ui-brand: ${Object(dist.color)("calcite-ui-blue-1","#50ba5f")};
    --calcite-ui-brand-hover: ${Object(dist.color)("calcite-ui-blue-2","#1a6324")};
    --calcite-ui-brand-press: ${Object(dist.color)("calcite-ui-blue-3","#338033")};"
  />
`};customTheme_NoTest.parameters={chromatic:{disableSnapshot:!0}};var customTheme_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-loader
    type="${Object(dist.select)("type",["determinate","indeterminate"],"indeterminate")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    value="${Object(dist.number)("value",0,{range:!0,min:0,max:100,step:1})}"
    style="
    --calcite-ui-brand: ${Object(dist.color)("calcite-ui-blue-1","#50ba5f")};
    --calcite-ui-brand-hover: ${Object(dist.color)("calcite-ui-blue-2","#1a6324")};
    --calcite-ui-brand-press: ${Object(dist.color)("calcite-ui-blue-3","#338033")};"
  />
`};simple_NoTest.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-loader\n    type="${select("type", ["determinate", "indeterminate"], "indeterminate")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    value="${number("value", 0, { range: true, min: 0, max: 100, step: 1 })}"\n  />\n`'}},simple_NoTest.parameters),simple_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-loader\n    type="${select("type", ["determinate", "indeterminate"], "indeterminate")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    value="${number("value", 0, { range: true, min: 0, max: 100, step: 1 })}"\n  />\n`'}},simple_TestOnly.parameters),inline_NoTest.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="display: inline-flex;align-items: center;justify-content: center;width: 100%;">\n  <calcite-loader\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    inline\n  /></calcite-loader><span style="margin:0 10px">Next to some text</span>\n  </div>\n`'}},inline_NoTest.parameters),inline_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <div style="display: inline-flex;align-items: center;justify-content: center;width: 100%;">\n  <calcite-loader\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    inline\n  /></calcite-loader><span style="margin:0 10px">Next to some text</span>\n  </div>\n`'}},inline_TestOnly.parameters),customTheme_NoTest.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-loader\n    type="${select("type", ["determinate", "indeterminate"], "indeterminate")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    value="${number("value", 0, { range: true, min: 0, max: 100, step: 1 })}"\n    style="\n    --calcite-ui-brand: ${color("calcite-ui-blue-1", "#50ba5f")};\n    --calcite-ui-brand-hover: ${color("calcite-ui-blue-2", "#1a6324")};\n    --calcite-ui-brand-press: ${color("calcite-ui-blue-3", "#338033")};"\n  />\n`'}},customTheme_NoTest.parameters),customTheme_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-loader\n    type="${select("type", ["determinate", "indeterminate"], "indeterminate")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    value="${number("value", 0, { range: true, min: 0, max: 100, step: 1 })}"\n    style="\n    --calcite-ui-brand: ${color("calcite-ui-blue-1", "#50ba5f")};\n    --calcite-ui-brand-hover: ${color("calcite-ui-blue-2", "#1a6324")};\n    --calcite-ui-brand-press: ${color("calcite-ui-blue-3", "#338033")};"\n  />\n`'}},customTheme_TestOnly.parameters)},"./src/components/modal/modal.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"slots",(function(){return slots})),__webpack_require__.d(__webpack_exports__,"darkModeRTLCustomSizeCSSVars_TestOnly",(function(){return darkModeRTLCustomSizeCSSVars_TestOnly})),__webpack_require__.d(__webpack_exports__,"withTooltips_TestOnly",(function(){return withTooltips_TestOnly})),__webpack_require__.d(__webpack_exports__,"withCSSVars_TestOnly",(function(){return withCSSVars_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Modal",parameters:{notes:'# calcite-modal\n\n`calcite-modal` allows you to show a modal/dialog to your users. The modal handles fencing focus and animating in/out.\n\n<style>\n  html {\n      overflow:auto !important;\n  }\n</style>\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nCustomize the modal by passing your content into multiple named slots: `header` (title-area of the modal), `content` (main body of the modal), and up to three modal actions: primary, secondary, and back. Notice below we use the `aria-labelledby` attribute, relating it to the title of the modal. In order to ensure good accessibility, it\'s recommended that you use either an `aria-label` or `aria-labelledby` attribute so screen readers can infer what the subject matter of your modal is.\n\n```html\n<calcite-modal aria-labelledby="modal-title" open>\n  <h3 slot="header" id="modal-title">Title of the modal</h3>\n  <div slot="content">The actual content of the modal</div>\n  <calcite-button slot="back" kind="neutral" appearance="outline" icon="chevron-left" width="full">\n    Back\n  </calcite-button>\n  <calcite-button slot="secondary" width="full" appearance="outline"> Cancel </calcite-button>\n  <calcite-button slot="primary" width="full"> Save </calcite-button>\n</calcite-modal>\n```\n\n\n### Open\n\nTo open a modal, add the `active` prop. Once the opening animation is complete, the `calciteModalOpen` event will be fired.\n\nTo close the modal, simply remove the attribute. This will run your before close method (if provided, see below) and fire the `calciteModalClose` event after the animation and teardown is complete.\n\n```html\n<calcite-modal open></calcite-modal>\n```\n\n\n### Reacting-before-close\n\nIf you\'d like to perform some actions prior to closing (ie. warning users they will lose their changes) you can pass a function to the `beforeClose` property. This method will be called prior to close and should return a [`Promise`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise):\n\n```js\nfunction beforeClose() {\n  return new Promise((resolve) => {\n    // do something async\n    resolve(); // this will trigger the close animation\n  });\n}\n\nconst modal = document.getElementById("my-modal");\nmodal.beforeClose = beforeClose;\n```\n\n\n\n## Properties\n\n| Property               | Attribute                | Description                                                                                                            | Type                                                      | Default                   |\n| ---------------------- | ------------------------ | ---------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------- | ------------------------- |\n| `beforeClose`          | --                       | Passes a function to run before the component closes.                                                                  | `(el: HTMLElement) => Promise<void>`                      | `() => Promise.resolve()` |\n| `closeButtonDisabled`  | `close-button-disabled`  | When `true`, disables the component\'s close button.                                                                    | `boolean`                                                 | `false`                   |\n| `docked`               | `docked`                 | When `true`, prevents the component from expanding to the entire screen on mobile devices.                             | `boolean`                                                 | `undefined`               |\n| `escapeDisabled`       | `escape-disabled`        | When `true`, disables the default close on escape behavior.                                                            | `boolean`                                                 | `false`                   |\n| `focusTrapDisabled`    | `focus-trap-disabled`    | When `true`, prevents focus trapping.                                                                                  | `boolean`                                                 | `false`                   |\n| `fullscreen`           | `fullscreen`             | Sets the component to always be fullscreen (overrides `width` and `--calcite-modal-width` / `--calcite-modal-height`). | `boolean`                                                 | `undefined`               |\n| `kind`                 | `kind`                   | Specifies the kind of the component (will apply to top border).                                                        | `"brand" \\| "danger" \\| "info" \\| "success" \\| "warning"` | `undefined`               |\n| `messageOverrides`     | --                       | Use this property to override individual strings used by the component.                                                | `{ close?: string; }`                                     | `undefined`               |\n| `open`                 | `open`                   | When `true`, displays and positions the component.                                                                     | `boolean`                                                 | `false`                   |\n| `outsideCloseDisabled` | `outside-close-disabled` | When `true`, disables the closing of the component when clicked outside.                                               | `boolean`                                                 | `false`                   |\n| `scale`                | `scale`                  | Specifies the size of the component.                                                                                   | `"l" \\| "m" \\| "s"`                                       | `"m"`                     |\n| `width`                | `width`                  | Specifies the width of the component.                                                                                  | `"l" \\| "m" \\| "s"`                                       | `"m"`                     |\n\n\n## Events\n\n| Event                     | Description                                                                                              | Type                |\n| ------------------------- | -------------------------------------------------------------------------------------------------------- | ------------------- |\n| `calciteModalBeforeClose` | Fires when the component is requested to be closed and before the closing transition begins.             | `CustomEvent<void>` |\n| `calciteModalBeforeOpen`  | Fires when the component is added to the DOM but not rendered, and before the opening transition begins. | `CustomEvent<void>` |\n| `calciteModalClose`       | Fires when the component is closed and animation is complete.                                            | `CustomEvent<void>` |\n| `calciteModalOpen`        | Fires when the component is open and animation is complete.                                              | `CustomEvent<void>` |\n\n\n## Methods\n\n### `scrollContent(top?: number, left?: number) => Promise<void>`\n\nSets the scroll top of the component\'s content.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s "close" button (the first focusable item).\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `updateFocusTrapElements() => Promise<void>`\n\nUpdates the element(s) that are used within the focus-trap of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot               | Description                                                                                                                                  |\n| ------------------ | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| `"back"`           | A slot for adding a back button.                                                                                                             |\n| `"content"`        | A slot for adding the component\'s content.                                                                                                   |\n| `"content-bottom"` | A slot for adding content to the component\'s sticky footer, where content remains at the bottom of the component when scrolling up and down. |\n| `"content-top"`    | A slot for adding content to the component\'s sticky header, where content remains at the top of the component when scrolling up and down.    |\n| `"header"`         | A slot for adding header text.                                                                                                               |\n| `"primary"`        | A slot for adding a primary button.                                                                                                          |\n| `"secondary"`      | A slot for adding a secondary button.                                                                                                        |\n\n\n## CSS Custom Properties\n\n| Name                                 | Description                                                                                                                                                  |\n| ------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `--calcite-modal-content-background` | Specifies the background color of content placed in the `content` slot.                                                                                      |\n| `--calcite-modal-content-padding`    | Specifies the padding of the modal `content` slot.                                                                                                           |\n| `--calcite-modal-height`             | Specifies a height of the modal, using `px`, `em`, `rem`, `vh`, or `%`. Will never exceed the height of the viewport. Will not apply if `fullscreen` if set. |\n| `--calcite-modal-scrim-background`   | Specifies the background color of the modal scrim.                                                                                                           |\n| `--calcite-modal-width`              | Specifies a width of the modal, using `px`, `em`, `rem`, `vw`, or `%`. Will never exceed the width of the viewport. Will not apply if `fullscreen` if set.   |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-scrim](../scrim)\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-modal --\x3e calcite-scrim\n  calcite-modal --\x3e calcite-icon\n  calcite-scrim --\x3e calcite-loader\n  style calcite-modal fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',chromatic:{delay:500}}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-modal
    ${Object(helpers.a)("open",!0)}
    kind="${Object(dist.select)("kind",["brand","danger","info","success","warning"],"")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"s")}"
    ${Object(helpers.a)("fullscreen",!1)}
    ${Object(helpers.a)("docked",!1)}
    ${Object(helpers.a)("escape-disabled",!1)}
  >
    <h3 slot="header">Small Modal</h3>
    <div slot="content">
      The small modal is perfect for short confirmation dialogs or very compact interfaces with few elements.
    </div>
    <calcite-button slot="back" kind="neutral" appearance="outline" icon="chevron-left" width="full"
      >Back</calcite-button
    >
    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>
    <calcite-button slot="primary" width="full">Save</calcite-button>
  </calcite-modal>
`}),mightyLongTextToScroll=formatting.a`
  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non nisi et elit auctor aliquet ac suscipit eros. Sed nec
  nibh viverra, feugiat magna ut, posuere arcu. Curabitur varius erat ut suscipit convallis. Nullam semper pellentesque
  est laoreet accumsan. Aenean eget urna fermentum, porttitor dui et, tincidunt erat. Curabitur lacinia lacus in urna
  lacinia, ac interdum lorem fermentum. Ut accumsan malesuada varius. Lorem ipsum dolor sit amet, consectetur adipiscing
  elit. Phasellus tempus tempor magna, eu dignissim urna ornare non. Integer tempor justo blandit nunc ornare, a
  interdum nisl pharetra. Sed ultricies at augue vel fermentum. Maecenas laoreet odio lorem. Aliquam in pretium turpis.
  Donec quis felis a diam accumsan vehicula efficitur at orci. Donec sollicitudin gravida ultrices.
`,slots=function(){return formatting.a`
  <calcite-modal
    ${Object(helpers.a)("open",!0)}
    kind="${Object(dist.select)("kind",["brand","danger","info","success","warning"],"")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["s","m","l"],"s")}"
    ${Object(helpers.a)("fullscreen",!1)}
    ${Object(helpers.a)("docked",!1)}
    ${Object(helpers.a)("escape-disabled",!1)}
  >
    <h3 slot="header">Slot for a header.</h3>
    <div slot="content-top">Slot for a content-top.</div>
    <div slot="content" style="height: 100px">${mightyLongTextToScroll}</div>
    <div slot="content-bottom">Slot for a content-bottom.</div>
    <calcite-button slot="primary" width="full">Button</calcite-button>
  </calcite-modal>
`},darkModeRTLCustomSizeCSSVars_TestOnly=function(){return formatting.a`
  <calcite-modal
    class="calcite-mode-dark"
    dir="rtl"
    ${Object(helpers.a)("open",!0)}
    kind="${Object(dist.select)("kind",["brand","danger","info","success","warning"],"")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("fullscreen",!1)}
    ${Object(helpers.a)("docked",!1)}
    ${Object(helpers.a)("escape-disabled",!1)}
    style="--calcite-modal-height: 500px; --calcite-modal-width: 600px;"
  >
    <h3 slot="header">Small Modal</h3>
    <div slot="content">
      <p>
        The small modal is perfect for short confirmation dialogs or very compact interfaces with few elements. You can
        customize the size using the width attribute.
      </p>
    </div>
    <calcite-button slot="back" kind="neutral" appearance="outline" icon="chevron-left" width="full"
      >Back</calcite-button
    >
    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>
    <calcite-button slot="primary" width="full">Save</calcite-button>
  </calcite-modal>
`};darkModeRTLCustomSizeCSSVars_TestOnly.parameters={modes:utils.e};var withTooltips_TestOnly=function(){return formatting.a`
  <button id="button">Open</button>
  <calcite-tooltip style="--calcite-tooltip-z-index: 600;" open label="Open modal" reference-element="button"
    >Open modal</calcite-tooltip
  >
  <calcite-modal open aria-labelledby="modal-title" id="modal">
    <div slot="header" id="modal-title">Modal title</div>
    <div slot="content">
      Modal content lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore
      et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
      commodo consequat.
    </div>
    <calcite-button id="back-button-modal" slot="back" kind="neutral" icon="chevron-left" width="full"
      >Back
    </calcite-button>
    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>
    <calcite-button slot="primary" width="full">Save</calcite-button>
  </calcite-modal>
  <calcite-tooltip open label="Back" reference-element="back-button-modal">Back</calcite-tooltip>
`},withCSSVars_TestOnly=function(){return formatting.a`
  <button id="button">Open</button>
  <calcite-modal open aria-labelledby="modal-title" id="modal" style="--calcite-modal-content-background: #ddd;">
    <div slot="header" id="modal-title">Modal title</div>
    <div slot="content">
      Modal content lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore
      et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
      commodo consequat.
    </div>
    <calcite-button id="back-button-modal" slot="back" kind="neutral" icon="chevron-left" width="full"
      >Back
    </calcite-button>
    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>
    <calcite-button slot="primary" width="full">Save</calcite-button>
  </calcite-modal>
`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-modal\n    ${boolean("open", true)}\n    kind="${select("kind", ["brand", "danger", "info", "success", "warning"], "")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "s")}"\n    ${boolean("fullscreen", false)}\n    ${boolean("docked", false)}\n    ${boolean("escape-disabled", false)}\n  >\n    <h3 slot="header">Small Modal</h3>\n    <div slot="content">\n      The small modal is perfect for short confirmation dialogs or very compact interfaces with few elements.\n    </div>\n    <calcite-button slot="back" kind="neutral" appearance="outline" icon="chevron-left" width="full"\n      >Back</calcite-button\n    >\n    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>\n    <calcite-button slot="primary" width="full">Save</calcite-button>\n  </calcite-modal>\n`'}},simple.parameters),slots.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-modal\n    ${boolean("open", true)}\n    kind="${select("kind", ["brand", "danger", "info", "success", "warning"], "")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["s", "m", "l"], "s")}"\n    ${boolean("fullscreen", false)}\n    ${boolean("docked", false)}\n    ${boolean("escape-disabled", false)}\n  >\n    <h3 slot="header">Slot for a header.</h3>\n    <div slot="content-top">Slot for a content-top.</div>\n    <div slot="content" style="height: 100px">${mightyLongTextToScroll}</div>\n    <div slot="content-bottom">Slot for a content-bottom.</div>\n    <calcite-button slot="primary" width="full">Button</calcite-button>\n  </calcite-modal>\n`'}},slots.parameters),darkModeRTLCustomSizeCSSVars_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-modal\n    class="calcite-mode-dark"\n    dir="rtl"\n    ${boolean("open", true)}\n    kind="${select("kind", ["brand", "danger", "info", "success", "warning"], "")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("fullscreen", false)}\n    ${boolean("docked", false)}\n    ${boolean("escape-disabled", false)}\n    style="--calcite-modal-height: 500px; --calcite-modal-width: 600px;"\n  >\n    <h3 slot="header">Small Modal</h3>\n    <div slot="content">\n      <p>\n        The small modal is perfect for short confirmation dialogs or very compact interfaces with few elements. You can\n        customize the size using the width attribute.\n      </p>\n    </div>\n    <calcite-button slot="back" kind="neutral" appearance="outline" icon="chevron-left" width="full"\n      >Back</calcite-button\n    >\n    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>\n    <calcite-button slot="primary" width="full">Save</calcite-button>\n  </calcite-modal>\n`'}},darkModeRTLCustomSizeCSSVars_TestOnly.parameters),withTooltips_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <button id="button">Open</button>\n  <calcite-tooltip style="--calcite-tooltip-z-index: 600;" open label="Open modal" reference-element="button"\n    >Open modal</calcite-tooltip\n  >\n  <calcite-modal open aria-labelledby="modal-title" id="modal">\n    <div slot="header" id="modal-title">Modal title</div>\n    <div slot="content">\n      Modal content lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n      et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n      commodo consequat.\n    </div>\n    <calcite-button id="back-button-modal" slot="back" kind="neutral" icon="chevron-left" width="full"\n      >Back\n    </calcite-button>\n    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>\n    <calcite-button slot="primary" width="full">Save</calcite-button>\n  </calcite-modal>\n  <calcite-tooltip open label="Back" reference-element="back-button-modal">Back</calcite-tooltip>\n`'}},withTooltips_TestOnly.parameters),withCSSVars_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <button id="button">Open</button>\n  <calcite-modal open aria-labelledby="modal-title" id="modal" style="--calcite-modal-content-background: #ddd;">\n    <div slot="header" id="modal-title">Modal title</div>\n    <div slot="content">\n      Modal content lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n      et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n      commodo consequat.\n    </div>\n    <calcite-button id="back-button-modal" slot="back" kind="neutral" icon="chevron-left" width="full"\n      >Back\n    </calcite-button>\n    <calcite-button slot="secondary" width="full" appearance="outline">Cancel</calcite-button>\n    <calcite-button slot="primary" width="full">Save</calcite-button>\n  </calcite-modal>\n`'}},withCSSVars_TestOnly.parameters)},"./src/components/notice/notice.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"customIcon",(function(){return customIcon})),__webpack_require__.d(__webpack_exports__,"withAction",(function(){return withAction})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Notice",parameters:{notes:'# calcite-notice\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-notice scale="l" width="half" open>\n  <div slot="title">Something failed</div>\n  <div slot="message">That thing you wanted to do didn\'t work as expected</div>\n  <calcite-link slot="link" href="/">View details</calcite-link>\n  <calcite-action id="retry-action" slot="actions-end" title="Retry" icon="reset"></calcite-action>\n</calcite-notice>\n```\n\n\n### Set-focus\n\nYou can programmatically focus the close button of a `dismissible` `calcite-notice` with the `setFocus()` method:\n\n```html\n<div onclick="document.querySelector(\'#my-notice\').setFocus();">Focus!</div>\n```\n\n\n\n## Properties\n\n| Property           | Attribute       | Description                                                                                                           | Type                                                      | Default     |\n| ------------------ | --------------- | --------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------- | ----------- |\n| `closable`         | `closable`      | When `true`, a close button is added to the component.                                                                | `boolean`                                                 | `false`     |\n| `icon`             | `icon`          | When `true`, shows a default recommended icon. Alternatively, pass a Calcite UI Icon name to display a specific icon. | `boolean \\| string`                                       | `undefined` |\n| `iconFlipRtl`      | `icon-flip-rtl` | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).                          | `boolean`                                                 | `false`     |\n| `kind`             | `kind`          | Specifies the kind of the component (will apply to top border and icon).                                              | `"brand" \\| "danger" \\| "info" \\| "success" \\| "warning"` | `"brand"`   |\n| `messageOverrides` | --              | Use this property to override individual strings used by the component.                                               | `{ close?: string; }`                                     | `undefined` |\n| `open`             | `open`          | When `true`, the component is visible.                                                                                | `boolean`                                                 | `false`     |\n| `scale`            | `scale`         | Specifies the size of the component.                                                                                  | `"l" \\| "m" \\| "s"`                                       | `"m"`       |\n| `width`            | `width`         | Specifies the width of the component.                                                                                 | `"auto" \\| "full" \\| "half"`                              | `"auto"`    |\n\n\n## Events\n\n| Event                | Description                         | Type                |\n| -------------------- | ----------------------------------- | ------------------- |\n| `calciteNoticeClose` | Fired when the component is closed. | `CustomEvent<void>` |\n| `calciteNoticeOpen`  | Fired when the component is opened. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot            | Description                                                                                                    |\n| --------------- | -------------------------------------------------------------------------------------------------------------- |\n| `"actions-end"` | A slot for adding `calcite-action`s to the end of the component. It is recommended to use two or less actions. |\n| `"link"`        | A slot for adding a `calcite-action` to take, such as: "undo", "try again", "link to page", etc.               |\n| `"message"`     | A slot for adding the message.                                                                                 |\n| `"title"`       | A slot for adding the title.                                                                                   |\n\n\n## CSS Custom Properties\n\n| Name                     | Description                 |\n| ------------------------ | --------------------------- |\n| `--calcite-notice-width` | The width of the component. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-notice --\x3e calcite-icon\n  style calcite-notice fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width:600px;max-width:100%;text-align:center;">
    <calcite-notice
      ${Object(helpers.a)("icon",!0)}
      ${Object(helpers.a)("open",!0)}
      ${Object(helpers.a)("closable",!0)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      kind="${Object(dist.select)("kind",["brand","danger","info","success","warning"],"brand")}"
      icon="${Object(dist.select)("icon",helpers.b,helpers.b[0])}"
    >
      <div slot="title">Your settings area has changed</div>
      <div slot="message">Look around and let us know what you think</div>
      <calcite-link slot="link" title="my action">Learn more</calcite-link>
      <calcite-action
        label="Retry"
        icon="reset"
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        slot="actions-end"
      ></calcite-action>
    </calcite-notice>
  </div>
`}),customIcon=function(){return formatting.a`
  <div style="width:600px;max-width:100%;text-align:center;">
    <calcite-notice
      icon="${Object(dist.select)("icon",helpers.b,helpers.b[0])}"
      ${Object(helpers.a)("open",!0)}
      ${Object(helpers.a)("closable",!0)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      kind="${Object(dist.select)("kind",["brand","danger","info","success","warning"],"brand")}"
    >
      <div slot="title">Your settings area has changed</div>
      <div slot="message">Look around and let us know what you think</div>
      <calcite-link slot="link" title="my action">Learn more</calcite-link>
    </calcite-notice>
  </div>
`},withAction=function(){return formatting.a`
  <div style="width:600px;max-width:100%;text-align:center;">
    <calcite-notice
      ${Object(helpers.a)("icon",!0)}
      ${Object(helpers.a)("open",!0)}
      ${Object(helpers.a)("closable",!1)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      kind="${Object(dist.select)("kind",["brand","danger","info","success","warning"],"danger")}"
    >
      <div slot="title">Notice with action</div>
      <div slot="message">This shows a notice with a custom action</div>
      <calcite-action
        label="Retry"
        icon="reset"
        scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
        slot="actions-end"
      ></calcite-action>
    </calcite-notice>
  </div>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <div style="width:600px;max-width:100%;text-align:center;">
    <calcite-notice
      dir="rtl"
      class="calcite-mode-dark"
      ${Object(helpers.a)("icon",!0)}
      ${Object(helpers.a)("open",!0)}
      ${Object(helpers.a)("closable",!1)}
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      kind="${Object(dist.select)("kind",["brand","danger","info","success","warning"],"danger")}"
    >
      <div slot="title">This is a destructive action</div>
      <div slot="message">Be sure you know what you are doin, folks.</div>
    </calcite-notice>
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:600px;max-width:100%;text-align:center;">\n    <calcite-notice\n      ${boolean("icon", true)}\n      ${boolean("open", true)}\n      ${boolean("closable", true)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      kind="${select("kind", ["brand", "danger", "info", "success", "warning"], "brand")}"\n      icon="${select("icon", iconNames, iconNames[0])}"\n    >\n      <div slot="title">Your settings area has changed</div>\n      <div slot="message">Look around and let us know what you think</div>\n      <calcite-link slot="link" title="my action">Learn more</calcite-link>\n      <calcite-action\n        label="Retry"\n        icon="reset"\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        slot="actions-end"\n      ></calcite-action>\n    </calcite-notice>\n  </div>\n`'}},simple.parameters),customIcon.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:600px;max-width:100%;text-align:center;">\n    <calcite-notice\n      icon="${select("icon", iconNames, iconNames[0])}"\n      ${boolean("open", true)}\n      ${boolean("closable", true)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      kind="${select("kind", ["brand", "danger", "info", "success", "warning"], "brand")}"\n    >\n      <div slot="title">Your settings area has changed</div>\n      <div slot="message">Look around and let us know what you think</div>\n      <calcite-link slot="link" title="my action">Learn more</calcite-link>\n    </calcite-notice>\n  </div>\n`'}},customIcon.parameters),withAction.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:600px;max-width:100%;text-align:center;">\n    <calcite-notice\n      ${boolean("icon", true)}\n      ${boolean("open", true)}\n      ${boolean("closable", false)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      kind="${select("kind", ["brand", "danger", "info", "success", "warning"], "danger")}"\n    >\n      <div slot="title">Notice with action</div>\n      <div slot="message">This shows a notice with a custom action</div>\n      <calcite-action\n        label="Retry"\n        icon="reset"\n        scale="${select("scale", ["s", "m", "l"], "m")}"\n        slot="actions-end"\n      ></calcite-action>\n    </calcite-notice>\n  </div>\n`'}},withAction.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:600px;max-width:100%;text-align:center;">\n    <calcite-notice\n      dir="rtl"\n      class="calcite-mode-dark"\n      ${boolean("icon", true)}\n      ${boolean("open", true)}\n      ${boolean("closable", false)}\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      kind="${select("kind", ["brand", "danger", "info", "success", "warning"], "danger")}"\n    >\n      <div slot="title">This is a destructive action</div>\n      <div slot="message">Be sure you know what you are doin, folks.</div>\n    </calcite-notice>\n  </div>\n`'}},darkModeRTL_TestOnly.parameters)},"./src/components/pagination/pagination.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeFrenchLocaleAndLargeScaleGetsMediumChevron_TestOnly",(function(){return darkModeFrenchLocaleAndLargeScaleGetsMediumChevron_TestOnly})),__webpack_require__.d(__webpack_exports__,"arabicNumberingSystemAndRTL_TestOnly",(function(){return arabicNumberingSystemAndRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),locale=__webpack_require__("./src/utils/locale.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Pagination",parameters:{notes:'# calcite-pagination\n\n`calcite-pagination` allows users to select a page from a paginated API.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nThe component is meant to interface with responses from ArcGIS REST services, so the props share names with [response properties](https://developers.arcgis.com/rest/users-groups-and-items/search.htm) from various search endpoints.\n\nFor example, after querying the search API, you\'ll get back a response similar to JSON below. The response can be passed straight to the `calcite-pagination` component.\n\n```JSON\n{\n  "total": 2021,\n  "start": 1,\n  "num": 100,\n  "results": []\n}\n```\n\n```html\n<calcite-pagination start-item="1" page-size="100" total-items="2021"></calcite-pagination>\n```\n\n\n\n## Properties\n\n| Property           | Attribute          | Description                                                                                                       | Type                                                                                                                                                                                                                                    | Default     |\n| ------------------ | ------------------ | ----------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `groupSeparator`   | `group-separator`  | When `true`, number values are displayed with a group separator corresponding to the language and country format. | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `messageOverrides` | --                 | Use this property to override individual strings used by the component.                                           | `{ next?: string; previous?: string; }`                                                                                                                                                                                                 | `undefined` |\n| `numberingSystem`  | `numbering-system` | Specifies the Unicode numeral system used by the component for localization.                                      | `"arab" \\| "arabext" \\| "bali" \\| "beng" \\| "deva" \\| "fullwide" \\| "gujr" \\| "guru" \\| "hanidec" \\| "khmr" \\| "knda" \\| "laoo" \\| "latn" \\| "limb" \\| "mlym" \\| "mong" \\| "mymr" \\| "orya" \\| "tamldec" \\| "telu" \\| "thai" \\| "tibt"` | `undefined` |\n| `pageSize`         | `page-size`        | Specifies the number of items per page.                                                                           | `number`                                                                                                                                                                                                                                | `20`        |\n| `scale`            | `scale`            | Specifies the size of the component.                                                                              | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                     | `"m"`       |\n| `startItem`        | `start-item`       | Specifies the starting item number.                                                                               | `number`                                                                                                                                                                                                                                | `1`         |\n| `totalItems`       | `total-items`      | Specifies the total number of items.                                                                              | `number`                                                                                                                                                                                                                                | `0`         |\n\n\n## Events\n\n| Event                     | Description                           | Type                |\n| ------------------------- | ------------------------------------- | ------------------- |\n| `calcitePaginationChange` | Emits when the selected page changes. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `nextPage() => Promise<void>`\n\nGo to the next page of results.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `previousPage() => Promise<void>`\n\nGo to the previous page of results.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-pagination --\x3e calcite-icon\n  style calcite-pagination fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',chromatic:{delay:500}}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-pagination
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    start-item="${Object(dist.number)("start-item",1)}"
    lang="${Object(dist.select)("lang",locale.a,"en")}"
    total-items="${Object(dist.number)("total-items",123456789)}"
    page-size="${Object(dist.number)("page-size",10)}"
  >
  </calcite-pagination>
`}),darkModeFrenchLocaleAndLargeScaleGetsMediumChevron_TestOnly=function(){return formatting.a`
  <calcite-pagination
    class="calcite-mode-dark"
    start-item="1"
    lang="fr"
    group-separator
    total-items="123456789"
    page-size="10"
    scale="l"
  >
  </calcite-pagination>
`};darkModeFrenchLocaleAndLargeScaleGetsMediumChevron_TestOnly.parameters={modes:utils.e};var arabicNumberingSystemAndRTL_TestOnly=function(){return formatting.a`<calcite-pagination
  dir="rtl"
  page-sizebering-system="arab"
  start-item="1"
  lang="fr"
  total-items="123456789"
  page-size="10"
>
</calcite-pagination>`};arabicNumberingSystemAndRTL_TestOnly.parameters={chromatic:{diffThreshold:1}},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-pagination\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    start-item="${number("start-item", 1)}"\n    lang="${select("lang", locales, "en")}"\n    total-items="${number("total-items", 123456789)}"\n    page-size="${number("page-size", 10)}"\n  >\n  </calcite-pagination>\n`'}},simple.parameters),darkModeFrenchLocaleAndLargeScaleGetsMediumChevron_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-pagination\n    class="calcite-mode-dark"\n    start-item="1"\n    lang="fr"\n    group-separator\n    total-items="123456789"\n    page-size="10"\n    scale="l"\n  >\n  </calcite-pagination>\n`'}},darkModeFrenchLocaleAndLargeScaleGetsMediumChevron_TestOnly.parameters),arabicNumberingSystemAndRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-pagination\n  dir="rtl"\n  page-sizebering-system="arab"\n  start-item="1"\n  lang="fr"\n  total-items="123456789"\n  page-size="10"\n>\n</calcite-pagination>`'}},arabicNumberingSystemAndRTL_TestOnly.parameters)},"./src/components/panel/panel.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"onlyProps",(function(){return onlyProps})),__webpack_require__.d(__webpack_exports__,"disabledWithStyledSlot_TestOnly",(function(){return disabledWithStyledSlot_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/helpers.ts"),_storybook_resources__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./.storybook/resources.ts"),_storybook_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./.storybook/utils.tsx"),_support_formatting__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./support/formatting.ts"),_readme_md__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/panel/readme.md"),_resources__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/panel/resources.ts");__webpack_exports__.default=Object.assign({title:"Components/Panel",parameters:{notes:_readme_md__WEBPACK_IMPORTED_MODULE_5__.a}},Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.c)());var createAttributes=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,scale=_storybook_resources__WEBPACK_IMPORTED_MODULE_2__.a.scale;return Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.b)([{name:"closed",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("closed",!1),delete this.build,this}},{name:"disabled",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("disabled",!1),delete this.build,this}},{name:"closable",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("closable",!1),delete this.build,this}},{name:"height-scale",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.select)("heightScale",scale.values,scale.defaultValue),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("loading",!1),delete this.build,this}}],exceptions)},headerHTML=`<h3 class="heading" slot="${_resources__WEBPACK_IMPORTED_MODULE_6__.a.headerContent}">Heading</h3>`,contentHTML=_support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`
  <p>
    Enim nascetur erat faucibus ornare varius arcu fames bibendum habitant felis elit ante. Nibh morbi massa curae; leo
    semper diam aenean congue taciti eu porta. Varius faucibus ridiculus donec. Montes sit ligula purus porta ante lacus
    habitasse libero cubilia purus! In quis congue arcu maecenas felis cursus pellentesque nascetur porta donec non.
    Quisque, rutrum ligula pharetra justo habitasse facilisis rutrum neque. Magnis nostra nec nulla dictumst taciti
    consectetur. Non porttitor tempor orci dictumst magna porta vitae.
  </p>
  <p>
    Ipsum nostra tempus etiam augue ullamcorper scelerisque sapien potenti erat nisi gravida. Vehicula sem tristique
    sed. Nullam, sociis imperdiet ullamcorper? Dapibus fames primis ridiculus vulputate, habitant inceptos! Nunc
    torquent lorem urna vehicula volutpat donec nec. Orci massa eu nec donec enim fames, faucibus quam aenean. Laoreet
    tellus tempor quisque ornare lobortis praesent erat senectus natoque consectetur donec imperdiet. Quis sem cum
    gravida dictumst a pretium purus aptent amet id. Orci habitasse, praesent facilisis condimentum. Nec elit turpis
    leo.
  </p>
  <p>
    Tempus per volutpat diam tempor mauris parturient vulputate leo id libero quisque. Mattis aliquam dictum venenatis
    fringilla. Taciti venenatis, ultrices sollicitudin consequat. Sapien fusce est iaculis potenti ut auctor potenti.
    Nisi malesuada feugiat vulputate vitae porttitor. Nullam nullam nullam accumsan quis magna in. Elementum, nascetur
    gravida cras scelerisque inceptos aenean inceptos potenti. Lobortis condimentum accumsan posuere curabitur fermentum
    diam, natoque quisque. Eget placerat sed aptent orci urna fusce magnis. Vel lacus magnis nunc.
  </p>
`,footerHTML=_support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`
  <calcite-button slot="${_resources__WEBPACK_IMPORTED_MODULE_6__.a.footer}" width="half" appearance="outline">Naw.</calcite-button>
  <calcite-button slot="${_resources__WEBPACK_IMPORTED_MODULE_6__.a.footer}" width="half">Yeah!</calcite-button>
`,panelContent=`${headerHTML}\n  <calcite-action text="Action" label="Action" slot="${_resources__WEBPACK_IMPORTED_MODULE_6__.a.headerActionsStart}" icon="bluetooth"></calcite-action>\n  <calcite-action text="Action" label="Action" slot="${_resources__WEBPACK_IMPORTED_MODULE_6__.a.headerActionsEnd}" icon="attachment"></calcite-action>\n  ${contentHTML}\n  ${footerHTML}`,simple=function(){return Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-panel",createAttributes(),_support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`
      ${headerHTML}
      <calcite-action text="Action" label="Action" slot="${_resources__WEBPACK_IMPORTED_MODULE_6__.a.headerActionsStart}" icon="bluetooth"></calcite-action>
      <calcite-action text="Action" label="Action" slot="${_resources__WEBPACK_IMPORTED_MODULE_6__.a.headerActionsEnd}" icon="attachment"></calcite-action>
      ${contentHTML}
      <calcite-fab slot="fab"></calcite-fab>
      ${footerHTML}
    `)},onlyProps=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`
  <div style="width: 300px;">
    <calcite-panel
      height-scale="s"
      heading-level="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("heading-level","2")}"
      description="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("description","Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.")}"
      heading="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("heading","Panel title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum")}"
    />
  </div>
`},disabledWithStyledSlot_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_4__.a`
  <calcite-panel style="height: 100%;" heading="Heading" disabled>
    <div id="content" style="height: 100%;">${contentHTML}</div>
  </calcite-panel>
`},darkModeRTL_TestOnly=function(){return Object(_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.a)("calcite-panel",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}]),panelContent)};darkModeRTL_TestOnly.parameters={modes:_storybook_utils__WEBPACK_IMPORTED_MODULE_3__.e},simple.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-panel",\n    createAttributes(),\n    html`\n      ${headerHTML}\n      <calcite-action text="Action" label="Action" slot="${SLOTS.headerActionsStart}" icon="bluetooth"></calcite-action>\n      <calcite-action text="Action" label="Action" slot="${SLOTS.headerActionsEnd}" icon="attachment"></calcite-action>\n      ${contentHTML}\n      <calcite-fab slot="fab"></calcite-fab>\n      ${footerHTML}\n    `\n  )'}},simple.parameters),onlyProps.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 300px;">\n    <calcite-panel\n      height-scale="s"\n      heading-level="${text("heading-level", "2")}"\n      description="${text(\n        "description",\n        "Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n      )}"\n      heading="${text(\n        "heading",\n        "Panel title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"\n      )}"\n    />\n  </div>\n`'}},onlyProps.parameters),disabledWithStyledSlot_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-panel style="height: 100%;" heading="Heading" disabled>\n    <div id="content" style="height: 100%;">${contentHTML}</div>\n  </calcite-panel>\n`'}},disabledWithStyledSlot_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-panel",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-mode-dark"\n      }\n    ]),\n    panelContent\n  )'}},darkModeRTL_TestOnly.parameters)},"./src/components/panel/readme.md":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.a='# calcite-panel\n\nThe `calcite-panel` component is a container for a header, content and optional footer. The header will have centered content as well as optional leading and trailing content. The panel can also be setup to be dismissible which allows it to be closed by a user.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nRenders a basic panel with a header.\n\n```html\n<calcite-panel>\n  <div slot="header-content">Header!</div>\n  <p>Slotted content!</p>\n</calcite-panel>\n```\n\n\n### Closable\n\nRenders a panel that is closable with a click of the "x".\n\n```html\n<calcite-panel closable id="closable-panel">\n  <div slot="header-content">Closable Header</div>\n  <p>Click the X and I go away!</p>\n</calcite-panel>\n```\n\n\n### Header-with-actions\n\nRenders a panel with leading and trailing `calcite-action`s.\n\n```html\n<calcite-panel>\n  <calcite-action\n    label="Performs my custom action"\n    text="Perform Action!"\n    text-enabled\n    icon="home"\n    slot="header-actions-start"\n  ></calcite-action>\n  <div slot="header-content">Header!</div>\n  <calcite-action\n    label="Performs another custom action"\n    text="Perform Another Action!"\n    text-enabled\n    icon="blog"\n    slot="header-actions-end"\n  ></calcite-action>\n  <p>Actions are in the top left and right.</p>\n</calcite-panel>\n```\n\n\n### With-footer\n\nRenders a panel with a header and a footer.\n\n```html\n<calcite-panel>\n  <div slot="header-content">Header!</div>\n  <p>I have a footer.</p>\n  <div slot="footer">Footer!</div>\n</calcite-panel>\n```\n\n\n\n## Properties\n\n| Property           | Attribute       | Description                                                                              | Type                                    | Default     |\n| ------------------ | --------------- | ---------------------------------------------------------------------------------------- | --------------------------------------- | ----------- |\n| `closable`         | `closable`      | When `true`, displays a close button in the trailing side of the header.                 | `boolean`                               | `false`     |\n| `closed`           | `closed`        | When `true`, the component will be hidden.                                               | `boolean`                               | `false`     |\n| `description`      | `description`   | A description for the component.                                                         | `string`                                | `undefined` |\n| `disabled`         | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity. | `boolean`                               | `false`     |\n| `heading`          | `heading`       | The component header text.                                                               | `string`                                | `undefined` |\n| `headingLevel`     | `heading-level` | Specifies the number at which section headings should start.                             | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`            | `undefined` |\n| `loading`          | `loading`       | When `true`, a busy indicator is displayed.                                              | `boolean`                               | `false`     |\n| `menuOpen`         | `menu-open`     | When `true`, the action menu items in the `header-menu-actions` slot are open.           | `boolean`                               | `false`     |\n| `messageOverrides` | --              | Use this property to override individual strings used by the component.                  | `{ close?: string; options?: string; }` | `undefined` |\n\n\n## Events\n\n| Event                | Description                             | Type                |\n| -------------------- | --------------------------------------- | ------------------- |\n| `calcitePanelClose`  | Fires when the close button is clicked. | `CustomEvent<void>` |\n| `calcitePanelScroll` | Fires when the content is scrolled.     | `CustomEvent<void>` |\n\n\n## Methods\n\n### `scrollContentTo(options?: ScrollToOptions) => Promise<void>`\n\nScrolls the component\'s content to a specified set of coordinates.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot                     | Description                                                                      |\n| ------------------------ | -------------------------------------------------------------------------------- |\n|                          | A slot for adding custom content.                                                |\n| `"fab"`                  | A slot for adding a `calcite-fab` (floating action button) to perform an action. |\n| `"footer"`               | A slot for adding custom content to the footer.                                  |\n| `"footer-actions"`       | A slot for adding buttons to the footer.                                         |\n| `"header-actions-end"`   | A slot for adding actions or content to the end side of the header.              |\n| `"header-actions-start"` | A slot for adding actions or content to the start side of the header.            |\n| `"header-content"`       | A slot for adding custom content to the header.                                  |\n| `"header-menu-actions"`  | A slot for adding an overflow menu with actions inside a `calcite-dropdown`.     |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-flow-item](../flow-item)\n\n### Depends on\n\n- [calcite-action](../action)\n- [calcite-action-menu](../action-menu)\n- [calcite-scrim](../scrim)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-panel --\x3e calcite-action\n  calcite-panel --\x3e calcite-action-menu\n  calcite-panel --\x3e calcite-scrim\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-action-menu --\x3e calcite-action\n  calcite-action-menu --\x3e calcite-popover\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  calcite-scrim --\x3e calcite-loader\n  calcite-flow-item --\x3e calcite-panel\n  style calcite-panel fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'},"./src/components/panel/resources.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return SLOTS}));var SLOTS={headerActionsStart:"header-actions-start",headerActionsEnd:"header-actions-end",headerMenuActions:"header-menu-actions",headerContent:"header-content",fab:"fab",footer:"footer",footerActions:"footer-actions"}},"./src/components/pick-list/pick-list.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"grouped",(function(){return grouped})),__webpack_require__.d(__webpack_exports__,"nested",(function(){return nested})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Pick List",parameters:{notes:['# calcite-pick-list\n\n`calcite-pick-list` lives in a panel and contains `calcite-pick-list-item`s. Each item is able to be be selected via radio button or checkboxes (which have a multiselect and shift-click capability). There is also an option for a filter at the top of the list for searching.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n> **[DEPRECATED]** Use the `list` component instead.\n\n## Usage\n\n### Basic\n\nRenders a basic pick list with radio buttons on the left and actions on the right side.\n\n```html\n<calcite-pick-list>\n  <calcite-pick-list-item label="T. Rex" description="Arm strength impaired" value="trex">\n    <calcite-action slot="actions-end" icon="circle"></calcite-action>\n  </calcite-pick-list-item>\n  <calcite-pick-list-item label="Triceratops" description="3 horn" value="triceratops" selected>\n    <calcite-action slot="actions-end" icon="circle"></calcite-action>\n  </calcite-pick-list-item>\n  <calcite-pick-list-item label="Velociraptor" description="Swift seizer" value="velociraptor">\n    <calcite-action slot="actions-end" icon="circle"></calcite-action>\n  </calcite-pick-list-item>\n</calcite-pick-list>\n```\n\n\n### Multi-select-and-filter-enabled\n\nRenders a pick list with a sticky filter and checkboxes for multiple selection of items.\n\n```html\n<calcite-pick-list multiple filter-enabled>\n  <calcite-pick-list-item label="Chocolate" value="chocolate">\n    <calcite-action slot="actions-end" icon="ellipsis-circle"></calcite-action>\n  </calcite-pick-list-item>\n  <calcite-pick-list-item label="Vanilla" description="Oldie but goodie" value="vanilla">\n    <calcite-action slot="actions-end" icon="ellipsis-circle"></calcite-action>\n  </calcite-pick-list-item>\n  <calcite-pick-list-item label="Strawberry" description="no metadata on this one" value="strawberry">\n    <calcite-action slot="actions-end" icon="ellipsis-circle"></calcite-action>\n  </calcite-pick-list-item>\n</calcite-pick-list>\n```\n\n\n### Sub-groups\n\nRenders groups of pick list items that are visually separated.\n\n```html\n<calcite-pick-list>\n  <calcite-pick-list-group group-title="numbers">\n    <calcite-pick-list-item label="one" description="fish" value="one" icon="grip">\n      <calcite-action slot="actions-end" icon="ellipsis"></calcite-action>\n    </calcite-pick-list-item>\n    <calcite-pick-list-item label="two" description="fish" value="two" icon="grip">\n      <calcite-action slot="actions-end" icon="ellipsis"></calcite-action>\n    </calcite-pick-list-item>\n  </calcite-pick-list-group>\n  <calcite-pick-list-group group-title="colors">\n    <calcite-pick-list-item label="red" description="fish" value="red" icon="grip">\n      <calcite-action slot="actions-end" icon="ellipsis"></calcite-action>\n    </calcite-pick-list-item>\n    <calcite-pick-list-item label="blue" description="fish" value="blue" icon="grip">\n      <calcite-action slot="actions-end" icon="ellipsis"></calcite-action>\n    </calcite-pick-list-item>\n  </calcite-pick-list-group>\n</calcite-pick-list>\n```\n\n\n\n## Properties\n\n| Property                | Attribute                 | Description                                                                                                                                                                                                                                                           | Type                                                                                          | Default     |\n| ----------------------- | ------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------- | ----------- |\n| `disabled`              | `disabled`                | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                                                                                                              | `boolean`                                                                                     | `false`     |\n| `filterEnabled`         | `filter-enabled`          | When `true`, an input appears at the top of the list that can be used by end users to filter items in the list.                                                                                                                                                       | `boolean`                                                                                     | `false`     |\n| `filterPlaceholder`     | `filter-placeholder`      | Placeholder text for the filter input field.                                                                                                                                                                                                                          | `string`                                                                                      | `undefined` |\n| `filterText`            | `filter-text`             | Text for the filter input field.                                                                                                                                                                                                                                      | `string`                                                                                      | `undefined` |\n| `filteredData`          | --                        | The currently filtered data.                                                                                                                                                                                                                                          | `{ label: string; description: string; metadata: Record<string, unknown>; value: string; }[]` | `[]`        |\n| `filteredItems`         | --                        | The currently filtered items.                                                                                                                                                                                                                                         | `HTMLCalcitePickListItemElement[]`                                                            | `[]`        |\n| `headingLevel`          | `heading-level`           | Specifies the number at which section headings should start.                                                                                                                                                                                                          | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`                                                                  | `undefined` |\n| `loading`               | `loading`                 | When `true`, a busy indicator is displayed.                                                                                                                                                                                                                           | `boolean`                                                                                     | `false`     |\n| `multiple`              | `multiple`                | Similar to standard radio buttons and checkboxes. When `true`, a user can select multiple `calcite-pick-list-item`s at a time. When `false`, only a single `calcite-pick-list-item` can be selected at a time, and a new selection will deselect previous selections. | `boolean`                                                                                     | `false`     |\n| `selectionFollowsFocus` | `selection-follows-focus` | When `true` and single selection is enabled, the selection changes when navigating `calcite-pick-list-item`s via keyboard.                                                                                                                                            | `boolean`                                                                                     | `false`     |\n\n\n## Events\n\n| Event               | Description                                                             | Type                                                       |\n| ------------------- | ----------------------------------------------------------------------- | ---------------------------------------------------------- |\n| `calciteListChange` | Emits when any of the `calcite-pick-list-item` selections have changed. | `CustomEvent<Map<string, HTMLCalcitePickListItemElement>>` |\n| `calciteListFilter` | Emits when a filter has changed.                                        | `CustomEvent<void>`                                        |\n\n\n## Methods\n\n### `getSelectedItems() => Promise<Map<string, HTMLCalcitePickListItemElement>>`\n\nReturns the component\'s selected `calcite-pick-list-item`s.\n\n#### Returns\n\nType: `Promise<Map<string, HTMLCalcitePickListItemElement>>`\n\n\n\n### `setFocus(focusId?: ListFocusId) => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot             | Description                                                                                                               |\n| ---------------- | ------------------------------------------------------------------------------------------------------------------------- |\n|                  | A slot for adding `calcite-pick-list-item` or `calcite-pick-list-group` elements. Items are displayed as a vertical list. |\n| `"menu-actions"` | A slot for adding a button and menu combination for performing actions, such as sorting.                                  |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-filter](../filter)\n- [calcite-scrim](../scrim)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-pick-list --\x3e calcite-filter\n  calcite-pick-list --\x3e calcite-scrim\n  calcite-filter --\x3e calcite-input\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  calcite-scrim --\x3e calcite-loader\n  style calcite-pick-list fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n','# calcite-pick-list-item\n\n`calcite-pick-list-item`s are cards contained in a `calcite-pick-list`. They each can have a label and description, an icon, and be set to compact. The developer can disable or preselect each list item and give it a value.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n> **[DEPRECATED]** Use the `list` component instead.\n\n## Properties\n\n| Property             | Attribute           | Description                                                                                                | Type                                                        | Default     |\n| -------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------- | ----------- |\n| `description`        | `description`       | A description for the component that displays below the label text.                                        | `string`                                                    | `undefined` |\n| `deselectDisabled`   | `deselect-disabled` | When `false`, the component cannot be deselected by user interaction.                                      | `boolean`                                                   | `false`     |\n| `disabled`           | `disabled`          | When `true`, interaction is prevented and the component is displayed with lower opacity.                   | `boolean`                                                   | `false`     |\n| `icon`               | `icon`              | Determines the icon SVG symbol that will be shown. Options are `"circle"`, `"square"`, `"grip"` or `null`. | `ICON_TYPES.circle \\| ICON_TYPES.grip \\| ICON_TYPES.square` | `null`      |\n| `iconFlipRtl`        | `icon-flip-rtl`     | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).               | `boolean`                                                   | `false`     |\n| `label` _(required)_ | `label`             | Label and accessible name for the component. Appears next to the icon.                                     | `string`                                                    | `undefined` |\n| `messageOverrides`   | --                  | Use this property to override individual strings used by the component.                                    | `{ remove?: string; }`                                      | `undefined` |\n| `metadata`           | --                  | Provides additional metadata to the component. Primary use is for a filter on the parent list.             | `{ [x: string]: unknown; }`                                 | `undefined` |\n| `removable`          | `removable`         | When `true`, displays a remove action that removes the item from the list.                                 | `boolean`                                                   | `false`     |\n| `selected`           | `selected`          | When `true`, selects an item. Toggles when an item is checked/unchecked.                                   | `boolean`                                                   | `false`     |\n| `value` _(required)_ | `value`             | The component\'s value.                                                                                     | `any`                                                       | `undefined` |\n\n\n## Events\n\n| Event                   | Description                                         | Type                                                                                                           |\n| ----------------------- | --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------- |\n| `calciteListItemChange` | Fires when the component is selected or unselected. | `CustomEvent<{ item: HTMLCalcitePickListItemElement; value: any; selected: boolean; shiftPressed: boolean; }>` |\n| `calciteListItemRemove` | Fires when the remove button is pressed.            | `CustomEvent<void>`                                                                                            |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `toggleSelected(coerce?: boolean) => Promise<void>`\n\nToggles the selection state. By default this won\'t trigger an event.\nThe first argument allows the value to be coerced, rather than swapping values.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot              | Description                                                                        |\n| ----------------- | ---------------------------------------------------------------------------------- |\n| `"actions-end"`   | A slot for adding `calcite-action`s or content to the end side of the component.   |\n| `"actions-start"` | A slot for adding `calcite-action`s or content to the start side of the component. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-value-list-item](../value-list-item)\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-action](../action)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-pick-list-item --\x3e calcite-icon\n  calcite-pick-list-item --\x3e calcite-action\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-value-list-item --\x3e calcite-pick-list-item\n  style calcite-pick-list-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',"# calcite-pick-list-group\n\n`calcite-pick-list-group` is a wrapper for multiple `calcite-pick-list-item`s and lives in `calcite-pick-list`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n> **[DEPRECATED]** Use the `list` component instead.\n\n## Properties\n\n| Property       | Attribute       | Description                                                   | Type                         | Default     |\n| -------------- | --------------- | ------------------------------------------------------------- | ---------------------------- | ----------- |\n| `groupTitle`   | `group-title`   | Specifies the title for all nested `calcite-pick-list-item`s. | `string`                     | `undefined` |\n| `headingLevel` | `heading-level` | Specifies the number at which section headings should start.  | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6` | `undefined` |\n\n\n## Slots\n\n| Slot | Description                                          |\n| ---- | ---------------------------------------------------- |\n|      | A slot for adding `calcite-pick-list-item` elements. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"]}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1),delete this.build,this}},{name:"filter-enabled",commit:function(){return this.value=Object(dist.boolean)("filterEnabled",!1),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1),delete this.build,this}},{name:"multiple",commit:function(){return this.value=Object(dist.boolean)("multiple",!1),delete this.build,this}},{name:"selection-follows-focus",commit:function(){return this.value=Object(dist.boolean)("selection-follows-focus",!1),delete this.build,this}}],exceptions)}),action=formatting.a`
  <calcite-action
    slot="actions-end"
    label="click-me"
    onClick="console.log('clicked');"
    appearance="outline"
    scale="s"
    icon="information"
  ></calcite-action>
`,simple=function(){return Object(utils.a)("calcite-pick-list",createAttributes(),formatting.a`
      <calcite-pick-list-item label="T. Rex" description="arm strength impaired" value="trex">
        ${action}
      </calcite-pick-list-item>
      <calcite-pick-list-item label="Triceratops" description="3 horn" value="triceratops" selected>
        ${action}
      </calcite-pick-list-item>
      <calcite-pick-list-item label="hi" description="there" value="helloWorld"> ${action} </calcite-pick-list-item>
    `)},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-pick-list",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}]),formatting.a`
      <calcite-pick-list-item label="T. Rex" description="arm strength impaired" value="trex">
        ${action}
      </calcite-pick-list-item>
      <calcite-pick-list-item label="Triceratops" description="3 horn" value="triceratops" selected>
        ${action}
      </calcite-pick-list-item>
      <calcite-pick-list-item label="hi" description="there" value="helloWorld"> ${action} </calcite-pick-list-item>
    `)};darkModeRTL_TestOnly.parameters={modes:utils.e};var grouped=function(){return Object(utils.a)("calcite-pick-list",createAttributes(),formatting.a`
      <calcite-pick-list-group group-title="numbers" heading-level="${Object(dist.text)("heading-level","1")}">
        <calcite-pick-list-item label="one" description="fish" value="one" icon="grip">
          ${action}
        </calcite-pick-list-item>
        <calcite-pick-list-item label="two" description="fish" value="two" icon="grip">
          ${action}
        </calcite-pick-list-item>
      </calcite-pick-list-group>
      <calcite-pick-list-group group-title="colors" heading-level="${Object(dist.text)("heading-level","1")}">
        <calcite-pick-list-item label="red" description="fish" value="red" icon="grip">
          ${action}
        </calcite-pick-list-item>
        <calcite-pick-list-item label="blue" description="fish" value="blue" icon="grip">
          ${action}
        </calcite-pick-list-item>
      </calcite-pick-list-group>
    `)},nested=function(){return Object(utils.a)("calcite-pick-list",createAttributes(),formatting.a`
      <calcite-pick-list-group>
        <calcite-pick-list-item label="All the dogs" value="all-dogs" slot="parent-item">
          ${action}
        </calcite-pick-list-item>
        <calcite-pick-list-item label="Husky" value="husky"> ${action} </calcite-pick-list-item>
        <calcite-pick-list-item label="Pomeranian" value="pom"> ${action} </calcite-pick-list-item>
        <calcite-pick-list-item label="Xoloitzcuintle" value="xolo"> ${action} </calcite-pick-list-item>
      </calcite-pick-list-group>
      <calcite-pick-list-group>
        <calcite-pick-list-item label="All the cats" value="all-cats" slot="parent-item">
          ${action}
        </calcite-pick-list-item>
        <calcite-pick-list-item label="Himalayan" value="himalayan"> ${action} </calcite-pick-list-item>
        <calcite-pick-list-item label="Persian" value="persian"> ${action} </calcite-pick-list-item>
        <calcite-pick-list-item label="Spynx" value="spynx"> ${action} </calcite-pick-list-item>
      </calcite-pick-list-group>
    `)},disabled_TestOnly=function(){return formatting.a`<calcite-pick-list disabled>
  <calcite-pick-list-item label="T. Rex" description="arm strength impaired" value="trex"></calcite-pick-list-item>
  <calcite-pick-list-item
    label="Triceratops"
    description="3 horn"
    value="triceratops"
    selected
  ></calcite-pick-list-item>
  <calcite-pick-list-item label="hi" description="there" value="helloWorld"></calcite-pick-list-item>
</calcite-pick-list>`};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-pick-list",\n    createAttributes(),\n    html`\n      <calcite-pick-list-item label="T. Rex" description="arm strength impaired" value="trex">\n        ${action}\n      </calcite-pick-list-item>\n      <calcite-pick-list-item label="Triceratops" description="3 horn" value="triceratops" selected>\n        ${action}\n      </calcite-pick-list-item>\n      <calcite-pick-list-item label="hi" description="there" value="helloWorld"> ${action} </calcite-pick-list-item>\n    `\n  )'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-pick-list",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-mode-dark"\n      }\n    ]),\n    html`\n      <calcite-pick-list-item label="T. Rex" description="arm strength impaired" value="trex">\n        ${action}\n      </calcite-pick-list-item>\n      <calcite-pick-list-item label="Triceratops" description="3 horn" value="triceratops" selected>\n        ${action}\n      </calcite-pick-list-item>\n      <calcite-pick-list-item label="hi" description="there" value="helloWorld"> ${action} </calcite-pick-list-item>\n    `\n  )'}},darkModeRTL_TestOnly.parameters),grouped.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-pick-list",\n    createAttributes(),\n    html`\n      <calcite-pick-list-group group-title="numbers" heading-level="${text("heading-level", "1")}">\n        <calcite-pick-list-item label="one" description="fish" value="one" icon="grip">\n          ${action}\n        </calcite-pick-list-item>\n        <calcite-pick-list-item label="two" description="fish" value="two" icon="grip">\n          ${action}\n        </calcite-pick-list-item>\n      </calcite-pick-list-group>\n      <calcite-pick-list-group group-title="colors" heading-level="${text("heading-level", "1")}">\n        <calcite-pick-list-item label="red" description="fish" value="red" icon="grip">\n          ${action}\n        </calcite-pick-list-item>\n        <calcite-pick-list-item label="blue" description="fish" value="blue" icon="grip">\n          ${action}\n        </calcite-pick-list-item>\n      </calcite-pick-list-group>\n    `\n  )'}},grouped.parameters),nested.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-pick-list",\n    createAttributes(),\n    html`\n      <calcite-pick-list-group>\n        <calcite-pick-list-item label="All the dogs" value="all-dogs" slot="parent-item">\n          ${action}\n        </calcite-pick-list-item>\n        <calcite-pick-list-item label="Husky" value="husky"> ${action} </calcite-pick-list-item>\n        <calcite-pick-list-item label="Pomeranian" value="pom"> ${action} </calcite-pick-list-item>\n        <calcite-pick-list-item label="Xoloitzcuintle" value="xolo"> ${action} </calcite-pick-list-item>\n      </calcite-pick-list-group>\n      <calcite-pick-list-group>\n        <calcite-pick-list-item label="All the cats" value="all-cats" slot="parent-item">\n          ${action}\n        </calcite-pick-list-item>\n        <calcite-pick-list-item label="Himalayan" value="himalayan"> ${action} </calcite-pick-list-item>\n        <calcite-pick-list-item label="Persian" value="persian"> ${action} </calcite-pick-list-item>\n        <calcite-pick-list-item label="Spynx" value="spynx"> ${action} </calcite-pick-list-item>\n      </calcite-pick-list-group>\n    `\n  )'}},nested.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-pick-list disabled>\n  <calcite-pick-list-item label="T. Rex" description="arm strength impaired" value="trex"></calcite-pick-list-item>\n  <calcite-pick-list-item\n    label="Triceratops"\n    description="3 horn"\n    value="triceratops"\n    selected\n  ></calcite-pick-list-item>\n  <calcite-pick-list-item label="hi" description="there" value="helloWorld"></calcite-pick-list-item>\n</calcite-pick-list>`'}},disabled_TestOnly.parameters)},"./src/components/popover/popover.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"nested",(function(){return nested})),__webpack_require__.d(__webpack_exports__,"flipPlacements_TestOnly",(function(){return flipPlacements_TestOnly})),__webpack_require__.d(__webpack_exports__,"scaleConsistencyPopoverHeadingActionSlottedIcon_TestOnly",(function(){return scaleConsistencyPopoverHeadingActionSlottedIcon_TestOnly})),__webpack_require__.d(__webpack_exports__,"smallScaleLayout_TestOnly",(function(){return smallScaleLayout_TestOnly})),__webpack_require__.d(__webpack_exports__,"mediumScaleLayout_TestOnly",(function(){return mediumScaleLayout_TestOnly})),__webpack_require__.d(__webpack_exports__,"largeScaleLayout_TestOnly",(function(){return largeScaleLayout_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),floating_ui=__webpack_require__("./src/utils/floating-ui.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),contentHTML='\n<div style="width: 300px; padding:12px 16px;">\n  <b>I am a title!</b> <br>\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n  <calcite-link>I am an inline link</calcite-link>\n</div>\n',referenceElementHTML='Ut enim ad minim veniam, quis <calcite-button title="Reference Element" id="reference-element">nostrud exercitation</calcite-button> ullamco laboris nisi ut aliquip ex ea commodo consequat.',simple=(__webpack_exports__.default=Object.assign({title:"Components/Popover",parameters:{notes:['# calcite-popover\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-popover reference-element="popover-button">Hello! I am some popover content!</calcite-popover>\n\n<calcite-button id="popover-button">Clickable popover</calcite-button>\n```\n\n\n### Virtual\n\n```html\n\x3c!-- virtually positioned popover --\x3e\n<calcite-popover id="virtual-popover" label="Hello world!" open>\n  <p>Hello! I am some virtual popover content!</p>\n</calcite-popover>\n\n<script>\n  function generateGetBoundingClientRect() {\n    return () => ({\n      width: 0,\n      height: 0,\n      top: 100,\n      right: 100,\n      bottom: 100,\n      left: 600\n    });\n  }\n\n  const virtualElement = {\n    getBoundingClientRect: generateGetBoundingClientRect()\n  };\n\n  const popover = document.getElementById("virtual-popover");\n  popover.referenceElement = virtualElement;\n<\/script>\n```\n\n\n\n## Properties\n\n| Property                        | Attribute             | Description                                                                                                                                                                                                                                                                                                                                                                         | Type                                                                                                                                                                                                                                                                                                              | Default                   |\n| ------------------------------- | --------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------- |\n| `autoClose`                     | `auto-close`          | When `true`, clicking outside of the component automatically closes open `calcite-popover`s.                                                                                                                                                                                                                                                                                        | `boolean`                                                                                                                                                                                                                                                                                                         | `false`                   |\n| `closable`                      | `closable`            | When `true`, display a close button within the component.                                                                                                                                                                                                                                                                                                                           | `boolean`                                                                                                                                                                                                                                                                                                         | `false`                   |\n| `flipDisabled`                  | `flip-disabled`       | When `true`, prevents flipping the component\'s placement when overlapping its `referenceElement`.                                                                                                                                                                                                                                                                                   | `boolean`                                                                                                                                                                                                                                                                                                         | `false`                   |\n| `flipPlacements`                | --                    | Defines the available placements that can be used when a flip occurs.                                                                                                                                                                                                                                                                                                               | `Placement[]`                                                                                                                                                                                                                                                                                                     | `undefined`               |\n| `focusTrapDisabled`             | `focus-trap-disabled` | When `true`, prevents focus trapping.                                                                                                                                                                                                                                                                                                                                               | `boolean`                                                                                                                                                                                                                                                                                                         | `false`                   |\n| `heading`                       | `heading`             | The component header text.                                                                                                                                                                                                                                                                                                                                                          | `string`                                                                                                                                                                                                                                                                                                          | `undefined`               |\n| `headingLevel`                  | `heading-level`       | Specifies the number at which section headings should start.                                                                                                                                                                                                                                                                                                                        | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`                                                                                                                                                                                                                                                                                      | `undefined`               |\n| `label` _(required)_            | `label`               | Accessible name for the component.                                                                                                                                                                                                                                                                                                                                                  | `string`                                                                                                                                                                                                                                                                                                          | `undefined`               |\n| `messageOverrides`              | --                    | Use this property to override individual strings used by the component.                                                                                                                                                                                                                                                                                                             | `{ close?: string; }`                                                                                                                                                                                                                                                                                             | `undefined`               |\n| `offsetDistance`                | `offset-distance`     | Offsets the position of the popover away from the `referenceElement`.                                                                                                                                                                                                                                                                                                               | `number`                                                                                                                                                                                                                                                                                                          | `defaultOffsetDistance`   |\n| `offsetSkidding`                | `offset-skidding`     | Offsets the position of the component along the `referenceElement`.                                                                                                                                                                                                                                                                                                                 | `number`                                                                                                                                                                                                                                                                                                          | `0`                       |\n| `open`                          | `open`                | When `true`, displays and positions the component.                                                                                                                                                                                                                                                                                                                                  | `boolean`                                                                                                                                                                                                                                                                                                         | `false`                   |\n| `overlayPositioning`            | `overlay-positioning` | Determines the type of positioning to use for the overlaid content.  Using `"absolute"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container\'s layout.  `"fixed"` value should be used to escape an overflowing parent container, or when the reference element\'s `position` CSS property is `"fixed"`. | `"absolute" \\| "fixed"`                                                                                                                                                                                                                                                                                           | `"absolute"`              |\n| `placement`                     | `placement`           | Determines where the component will be positioned relative to the `referenceElement`.                                                                                                                                                                                                                                                                                               | `"auto" \\| "top" \\| "right" \\| "bottom" \\| "left" \\| "top-start" \\| "top-end" \\| "right-start" \\| "right-end" \\| "bottom-start" \\| "bottom-end" \\| "left-start" \\| "left-end" \\| "auto-start" \\| "auto-end" \\| "leading-start" \\| "leading" \\| "leading-end" \\| "trailing-end" \\| "trailing" \\| "trailing-start"` | `defaultPopoverPlacement` |\n| `pointerDisabled`               | `pointer-disabled`    | When `true`, removes the caret pointer.                                                                                                                                                                                                                                                                                                                                             | `boolean`                                                                                                                                                                                                                                                                                                         | `false`                   |\n| `referenceElement` _(required)_ | `reference-element`   | The `referenceElement` used to position the component according to its `placement` value. Setting to an `HTMLElement` is preferred so the component does not need to query the DOM. However, a string `id` of the reference element can also be used.                                                                                                                               | `Element \\| VirtualElement \\| string`                                                                                                                                                                                                                                                                             | `undefined`               |\n| `scale`                         | `scale`               | Specifies the size of the component.                                                                                                                                                                                                                                                                                                                                                | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                                                                                               | `"m"`                     |\n| `triggerDisabled`               | `trigger-disabled`    | When `true`, disables automatically toggling the component when its `referenceElement` has been triggered.  This property can be set to `true` to manage when the component is open.                                                                                                                                                                                                | `boolean`                                                                                                                                                                                                                                                                                                         | `false`                   |\n\n\n## Events\n\n| Event                       | Description                                                                                              | Type                |\n| --------------------------- | -------------------------------------------------------------------------------------------------------- | ------------------- |\n| `calcitePopoverBeforeClose` | Fires when the component is requested to be closed and before the closing transition begins.             | `CustomEvent<void>` |\n| `calcitePopoverBeforeOpen`  | Fires when the component is added to the DOM but not rendered, and before the opening transition begins. | `CustomEvent<void>` |\n| `calcitePopoverClose`       | Fires when the component is closed and animation is complete.                                            | `CustomEvent<void>` |\n| `calcitePopoverOpen`        | Fires when the component is open and animation is complete.                                              | `CustomEvent<void>` |\n\n\n## Methods\n\n### `reposition(delayed?: boolean) => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `updateFocusTrapElements() => Promise<void>`\n\nUpdates the element(s) that are used within the focus-trap of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding custom content. |\n\n\n## CSS Custom Properties\n\n| Name                        | Description                               |\n| --------------------------- | ----------------------------------------- |\n| `--calcite-popover-z-index` | Sets the z-index value for the component. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-action-menu](../action-menu)\n - [calcite-input-time-picker](../input-time-picker)\n\n### Depends on\n\n- [calcite-action](../action)\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-popover --\x3e calcite-action\n  calcite-popover --\x3e calcite-icon\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  calcite-action-menu --\x3e calcite-popover\n  calcite-input-time-picker --\x3e calcite-popover\n  style calcite-popover fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'],chromatic:{delay:500}}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width: 400px;">
    ${referenceElementHTML}
    <calcite-popover
      ${Object(helpers.a)("closable",!1)}
      ${Object(helpers.a)("flip-disabled",!1)}
      ${Object(helpers.a)("pointer-disabled",!1)}
      reference-element="reference-element"
      placement="${Object(dist.select)("placement",floating_ui.c,"auto")}"
      offset-distance="${Object(dist.number)("offset-distance",6)}"
      offset-skidding="${Object(dist.number)("offset-skidding",0)}"
      ${Object(helpers.a)("open",!0)}
      text-close="${Object(dist.text)("text-close","Close")}"
    >
      ${contentHTML}
    </calcite-popover>
  </div>
`}),darkModeRTL_TestOnly=function(){return formatting.a` <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <div style="width: 400px;">
    ${referenceElementHTML}
    <calcite-popover
      ${Object(helpers.a)("closable",!1)}
      ${Object(helpers.a)("flip-disabled",!1)}
      ${Object(helpers.a)("pointer-disabled",!1)}
      reference-element="reference-element"
      placement="${Object(dist.select)("placement",floating_ui.c,"auto")}"
      offset-distance="${Object(dist.number)("offset-distance",6)}"
      offset-skidding="${Object(dist.number)("offset-skidding",0)}"
      ${Object(helpers.a)("open",!0)}
      text-close="${Object(dist.text)("text-close","Close")}"
      dir="${Object(dist.select)("dir",["ltr","rtl"],"rtl")}"
      class="calcite-mode-dark"
    >
      ${contentHTML}
    </calcite-popover>
  </div>`};darkModeRTL_TestOnly.parameters={modes:utils.e};var nested=function(){return formatting.a`
  <div style="width: 400px;">
    ${referenceElementHTML}
    <calcite-popover
      ${Object(helpers.a)("closable",!0)}
      reference-element="reference-element"
      placement="${Object(dist.select)("placement",floating_ui.c,"auto")}"
      ${Object(helpers.a)("open",!0)}
    >
      <div style="width: 300px; padding:12px 16px;">${'Ut enim ad minim veniam, quis <calcite-button title="Nested Reference Element" id="reference-element-nested">nostrud exercitation</calcite-button> ullamco laboris nisi ut aliquip ex ea commodo consequat.'}</div>
      <calcite-popover
        heading="${Object(dist.text)("heading","Heading")}"
        ${Object(helpers.a)("closable",!0)}
        reference-element="reference-element-nested"
        placement="${Object(dist.select)("placement",floating_ui.c,"auto")}"
        ${Object(helpers.a)("open",!0)}
      >
        ${contentHTML}
      </calcite-popover>
    </calcite-popover>
  </div>
`};nested.parameters={chromatic:{delay:1500}};var flipPlacements_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <div style="height: 100px; overflow:scroll; width: 200px;">
    <div class="my-popover-reference">
      <calcite-button title="Reference Element" id="reference-element">nostrud exercitation</calcite-button>
    </div>
    <calcite-popover class="my-popover" reference-element="reference-element" open placement="top" heading="Heading">
      ${contentHTML}
    </calcite-popover>
  </div>
  <script>
    document.querySelector(".my-popover").flipPlacements = ["right"];
  </script>
`},scaleConsistencyPopoverHeadingActionSlottedIcon_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <div style="width: 400px;">
    ${referenceElementHTML}
    <calcite-popover
      heading="Dreams didn't make us kings. Dragons did. 🐉"
      reference-element="reference-element"
      placement="auto"
      open
      closable
      scale="m"
    >
      ${contentHTML}
    </calcite-popover>
  </div>
`},smallScaleLayout_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <div style="width: 400px;">
    ${referenceElementHTML}
    <calcite-popover
      heading="these 🥨s are making me thirsty"
      reference-element="reference-element"
      placement="auto"
      open
      closable
      scale="s"
    >
      ${contentHTML}
    </calcite-popover>
  </div>
`},mediumScaleLayout_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <div style="width: 400px;">
    ${referenceElementHTML}
    <calcite-popover
      heading="these 🥨s are making me thirsty"
      reference-element="reference-element"
      placement="auto"
      open
      closable
      scale="m"
    >
      ${contentHTML}
    </calcite-popover>
  </div>
`},largeScaleLayout_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <div style="width: 400px;">
    ${referenceElementHTML}
    <calcite-popover
      heading="these 🥨s are making me thirsty"
      reference-element="reference-element"
      placement="auto"
      open
      closable
      scale="l"
    >
      ${contentHTML}
    </calcite-popover>
  </div>
`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px;">\n    ${referenceElementHTML}\n    <calcite-popover\n      ${boolean("closable", false)}\n      ${boolean("flip-disabled", false)}\n      ${boolean("pointer-disabled", false)}\n      reference-element="reference-element"\n      placement="${select("placement", placements, defaultPopoverPlacement)}"\n      offset-distance="${number("offset-distance", 6)}"\n      offset-skidding="${number("offset-skidding", 0)}"\n      ${boolean("open", true)}\n      text-close="${text("text-close", "Close")}"\n    >\n      ${contentHTML}\n    </calcite-popover>\n  </div>\n`'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <div style="width: 400px;">\n    ${referenceElementHTML}\n    <calcite-popover\n      ${boolean("closable", false)}\n      ${boolean("flip-disabled", false)}\n      ${boolean("pointer-disabled", false)}\n      reference-element="reference-element"\n      placement="${select("placement", placements, defaultPopoverPlacement)}"\n      offset-distance="${number("offset-distance", 6)}"\n      offset-skidding="${number("offset-skidding", 0)}"\n      ${boolean("open", true)}\n      text-close="${text("text-close", "Close")}"\n      dir="${select("dir", ["ltr", "rtl"], "rtl")}"\n      class="calcite-mode-dark"\n    >\n      ${contentHTML}\n    </calcite-popover>\n  </div>`'}},darkModeRTL_TestOnly.parameters),nested.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px;">\n    ${referenceElementHTML}\n    <calcite-popover\n      ${boolean("closable", true)}\n      reference-element="reference-element"\n      placement="${select("placement", placements, defaultPopoverPlacement)}"\n      ${boolean("open", true)}\n    >\n      <div style="width: 300px; padding:12px 16px;">${nestedReferenceElementHTML}</div>\n      <calcite-popover\n        heading="${text("heading", "Heading")}"\n        ${boolean("closable", true)}\n        reference-element="reference-element-nested"\n        placement="${select("placement", placements, defaultPopoverPlacement)}"\n        ${boolean("open", true)}\n      >\n        ${contentHTML}\n      </calcite-popover>\n    </calcite-popover>\n  </div>\n`'}},nested.parameters),flipPlacements_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <div style="height: 100px; overflow:scroll; width: 200px;">\n    <div class="my-popover-reference">\n      <calcite-button title="Reference Element" id="reference-element">nostrud exercitation</calcite-button>\n    </div>\n    <calcite-popover class="my-popover" reference-element="reference-element" open placement="top" heading="Heading">\n      ${contentHTML}\n    </calcite-popover>\n  </div>\n  <script>\n    document.querySelector(".my-popover").flipPlacements = ["right"];\n  <\/script>\n`'}},flipPlacements_TestOnly.parameters),scaleConsistencyPopoverHeadingActionSlottedIcon_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <div style="width: 400px;">\n    ${referenceElementHTML}\n    <calcite-popover\n      heading="Dreams didn\'t make us kings. Dragons did. 🐉"\n      reference-element="reference-element"\n      placement="auto"\n      open\n      closable\n      scale="m"\n    >\n      ${contentHTML}\n    </calcite-popover>\n  </div>\n`'}},scaleConsistencyPopoverHeadingActionSlottedIcon_TestOnly.parameters),smallScaleLayout_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <div style="width: 400px;">\n    ${referenceElementHTML}\n    <calcite-popover\n      heading="these 🥨s are making me thirsty"\n      reference-element="reference-element"\n      placement="auto"\n      open\n      closable\n      scale="s"\n    >\n      ${contentHTML}\n    </calcite-popover>\n  </div>\n`'}},smallScaleLayout_TestOnly.parameters),mediumScaleLayout_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <div style="width: 400px;">\n    ${referenceElementHTML}\n    <calcite-popover\n      heading="these 🥨s are making me thirsty"\n      reference-element="reference-element"\n      placement="auto"\n      open\n      closable\n      scale="m"\n    >\n      ${contentHTML}\n    </calcite-popover>\n  </div>\n`'}},mediumScaleLayout_TestOnly.parameters),largeScaleLayout_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <div style="width: 400px;">\n    ${referenceElementHTML}\n    <calcite-popover\n      heading="these 🥨s are making me thirsty"\n      reference-element="reference-element"\n      placement="auto"\n      open\n      closable\n      scale="l"\n    >\n      ${contentHTML}\n    </calcite-popover>\n  </div>\n`'}},largeScaleLayout_TestOnly.parameters)},"./src/components/progress/progress.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Progress",parameters:{notes:'# calcite-progress\n\nThe `calcite-progress` component is used to show progress on some async task to the user.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-progress type="indeterminate"></calcite-progress>\n```\n\n\n\n## Properties\n\n| Property   | Attribute  | Description                                                                                          | Type                               | Default         |\n| ---------- | ---------- | ---------------------------------------------------------------------------------------------------- | ---------------------------------- | --------------- |\n| `label`    | `label`    | Accessible name for the component.                                                                   | `string`                           | `undefined`     |\n| `reversed` | `reversed` | When `true` and for `"indeterminate"` progress bars, reverses the animation direction.               | `boolean`                          | `false`         |\n| `text`     | `text`     | Text that displays under the component\'s indicator.                                                  | `string`                           | `undefined`     |\n| `type`     | `type`     | Specifies the component type.  Use `"indeterminate"` if finding actual progress value is impossible. | `"determinate" \\| "indeterminate"` | `"determinate"` |\n| `value`    | `value`    | When `type` is `"determinate"`, the component\'s progress value with a range of 0.0 - 1.0.            | `number`                           | `0`             |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-input](../input)\n - [calcite-input-number](../input-number)\n - [calcite-input-text](../input-text)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-input --\x3e calcite-progress\n  calcite-input-number --\x3e calcite-progress\n  calcite-input-text --\x3e calcite-progress\n  style calcite-progress fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-progress
    type="${Object(dist.select)("type",["determinate","indeterminate"],"determinate")}"
    value="${Object(dist.number)("value",.8,{range:!0,min:0,max:1,step:.01})}"
    text="${Object(dist.text)("text","")}"
  ></calcite-progress>
`}),darkModeRTL_TestOnly=function(){return formatting.a`
  <style>
    :root {
      --calcite-duration-factor: 0;
    }
  </style>
  <calcite-progress
    class="calcite-mode-dark"
    type="determinate"
    value="0.2"
    text="% Complete (optional text)"
  ></calcite-progress>
`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-progress\n    type="${select("type", ["determinate", "indeterminate"], "determinate")}"\n    value="${number("value", 0.8, { range: true, min: 0, max: 1, step: 0.01 })}"\n    text="${text("text", "")}"\n  ></calcite-progress>\n`'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    :root {\n      --calcite-duration-factor: 0;\n    }\n  </style>\n  <calcite-progress\n    class="calcite-mode-dark"\n    type="determinate"\n    value="0.2"\n    text="% Complete (optional text)"\n  ></calcite-progress>\n`'}},darkModeRTL_TestOnly.parameters)},"./src/components/radio-button-group/radio-button-group.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Radio/Radio Button Group",parameters:{notes:'# calcite-radio-button-group\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nRenders the radio button group with default horizontal layout\n\n```html\n<calcite-radio-button-group name="basic-group">\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Maps\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Layers\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Data\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Geography\n  </calcite-label>\n</calcite-radio-button-group>\n```\n\n\n### Disabled-checked\n\nRenders all radio button inputs disabled, first one checked\n\n```html\n<calcite-radio-button-group name="disabled-group" disabled>\n  <calcite-label layout="inline">\n    <calcite-radio-button checked></calcite-radio-button>\n    A\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    B\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    C\n  </calcite-label>\n</calcite-radio-button-group>\n```\n\n\n### With-vertical-layout\n\n```html\n<calcite-radio-button-group name="vertical-group" layout="vertical">\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Maps\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Layers\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Data\n  </calcite-label>\n  <calcite-label layout="inline">\n    <calcite-radio-button></calcite-radio-button>\n    Geography\n  </calcite-label>\n</calcite-radio-button-group>\n```\n\n\n\n## Properties\n\n| Property            | Attribute  | Description                                                                                                 | Type                                   | Default        |\n| ------------------- | ---------- | ----------------------------------------------------------------------------------------------------------- | -------------------------------------- | -------------- |\n| `disabled`          | `disabled` | When `true`, interaction is prevented and the component is displayed with lower opacity.                    | `boolean`                              | `false`        |\n| `hidden`            | `hidden`   | When `true`, the component is not displayed and its `calcite-radio-button`s are not focusable or checkable. | `boolean`                              | `false`        |\n| `layout`            | `layout`   | Defines the layout of the component.                                                                        | `"grid" \\| "horizontal" \\| "vertical"` | `"horizontal"` |\n| `name` _(required)_ | `name`     | Specifies the name of the component on form submission. Must be unique to other component instances.        | `string`                               | `undefined`    |\n| `required`          | `required` | When `true`, the component must have a value in order for the form to submit.                               | `boolean`                              | `false`        |\n| `scale`             | `scale`    | Specifies the size of the component.                                                                        | `"l" \\| "m" \\| "s"`                    | `"m"`          |\n| `selectedItem`      | --         | Specifies the component\'s selected item.                                                                    | `HTMLCalciteRadioButtonElement`        | `null`         |\n\n\n## Events\n\n| Event                           | Description                           | Type                |\n| ------------------------------- | ------------------------------------- | ------------------- |\n| `calciteRadioButtonGroupChange` | Fires when the component has changed. | `CustomEvent<void>` |\n\n\n## Slots\n\n| Slot | Description                                |\n| ---- | ------------------------------------------ |\n|      | A slot for adding `calcite-radio-button`s. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-radio-button-group
    name="simple"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    <calcite-label layout="inline">
      <calcite-radio-button value="react"></calcite-radio-button>
      React
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="ember"></calcite-radio-button>
      Ember
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="angular"></calcite-radio-button>
      Angular
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="vue"></calcite-radio-button>
      Vue
    </calcite-label>
  </calcite-radio-button-group>
`}),darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-radio-button-group
    class="calcite-mode-dark"
    dir="rtl"
    name="dark"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    <calcite-label layout="inline">
      <calcite-radio-button value="react"></calcite-radio-button>
      React
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="ember"></calcite-radio-button>
      Ember
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="angular"></calcite-radio-button>
      Angular
    </calcite-label>
    <calcite-label layout="inline">
      <calcite-radio-button value="vue"></calcite-radio-button>
      Vue
    </calcite-label>
  </calcite-radio-button-group>
`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-radio-button-group\n    name="simple"\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    <calcite-label layout="inline">\n      <calcite-radio-button value="react"></calcite-radio-button>\n      React\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="ember"></calcite-radio-button>\n      Ember\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="angular"></calcite-radio-button>\n      Angular\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="vue"></calcite-radio-button>\n      Vue\n    </calcite-label>\n  </calcite-radio-button-group>\n`'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-radio-button-group\n    class="calcite-mode-dark"\n    dir="rtl"\n    name="dark"\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    <calcite-label layout="inline">\n      <calcite-radio-button value="react"></calcite-radio-button>\n      React\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="ember"></calcite-radio-button>\n      Ember\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="angular"></calcite-radio-button>\n      Angular\n    </calcite-label>\n    <calcite-label layout="inline">\n      <calcite-radio-button value="vue"></calcite-radio-button>\n      Vue\n    </calcite-label>\n  </calcite-radio-button-group>\n`'}},darkModeRTL_TestOnly.parameters)},"./src/components/radio-button/radio-button.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Radio/Radio Button",parameters:{notes:'# calcite-radio-button\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-label for="item-a" layout="inline">\n  <calcite-radio-button id="item-a" name="preferred-feature" value="Maps" checked></calcite-radio-button>\n  Maps\n</calcite-label>\n```\n\n\n\n## Properties\n\n| Property             | Attribute  | Description                                                                                                                                                | Type                | Default     |\n| -------------------- | ---------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- | ----------- |\n| `checked`            | `checked`  | When `true`, the component is checked.                                                                                                                     | `boolean`           | `false`     |\n| `disabled`           | `disabled` | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                   | `boolean`           | `false`     |\n| `form`               | `form`     | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any. | `string`            | `undefined` |\n| `guid`               | `guid`     | The `id` of the component. When omitted, a globally unique identifier is used.                                                                             | `string`            | `undefined` |\n| `hidden`             | `hidden`   | When `true`, the component is not displayed and is not focusable or checkable.                                                                             | `boolean`           | `false`     |\n| `name`               | `name`     | Specifies the name of the component. Can be inherited from `calcite-radio-button-group`.  Required to pass the component\'s `value` on form submission.     | `string`            | `undefined` |\n| `required`           | `required` | When `true`, the component must have a value selected from the `calcite-radio-button-group` in order for the form to submit.                               | `boolean`           | `false`     |\n| `scale`              | `scale`    | Specifies the size of the component inherited from the `calcite-radio-button-group`.                                                                       | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `value` _(required)_ | `value`    | The component\'s value.                                                                                                                                     | `any`               | `undefined` |\n\n\n## Events\n\n| Event                      | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                  | Type                |\n| -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------- |\n| `calciteRadioButtonChange` | Fires only when the radio button is checked.  This behavior is identical to the native HTML input element. Since this event does not fire when the radio button is unchecked, it\'s not recommended to attach a listener for this event directly on the element, but instead either attach it to a node that contains all of the radio buttons in the group or use the `calciteRadioButtonGroupChange` event if using this with `calcite-radio-button-group`. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-label layout="inline">
    <calcite-radio-button
      ${Object(helpers.a)("checked",!1)}
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("hidden",!1)}
      ${Object(helpers.a)("focused",!1)}
      name="simple"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      value="value"
    ></calcite-radio-button>
    ${Object(dist.text)("label","Radio Button")}
  </calcite-label>
`}),darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-label layout="inline" class="calcite-mode-dark" dir="rtl">
    <calcite-radio-button
      ${Object(helpers.a)("checked",!1)}
      ${Object(helpers.a)("disabled",!1)}
      ${Object(helpers.a)("hidden",!1)}
      ${Object(helpers.a)("focused",!1)}
      name="dark"
      scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
      value="value"
    >
    </calcite-radio-button>
    ${Object(dist.text)("label","Radio Button")}
  </calcite-label>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var disabled_TestOnly=function(){return formatting.a`<calcite-radio-button checked disabled></calcite-radio-button>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label layout="inline">\n    <calcite-radio-button\n      ${boolean("checked", false)}\n      ${boolean("disabled", false)}\n      ${boolean("hidden", false)}\n      ${boolean("focused", false)}\n      name="simple"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      value="value"\n    ></calcite-radio-button>\n    ${text("label", "Radio Button")}\n  </calcite-label>\n`'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-label layout="inline" class="calcite-mode-dark" dir="rtl">\n    <calcite-radio-button\n      ${boolean("checked", false)}\n      ${boolean("disabled", false)}\n      ${boolean("hidden", false)}\n      ${boolean("focused", false)}\n      name="dark"\n      scale="${select("scale", ["s", "m", "l"], "m")}"\n      value="value"\n    >\n    </calcite-radio-button>\n    ${text("label", "Radio Button")}\n  </calcite-label>\n`'}},darkModeRTL_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:"(): string => html`<calcite-radio-button checked disabled></calcite-radio-button>`"}},disabled_TestOnly.parameters)},"./src/components/rating/rating.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Rating",parameters:{notes:'# calcite-rating\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-rating show-chip scale="m" value="0" average="4.4" count="10"></calcite-rating>\n```\n\n\n\n## Properties\n\n| Property           | Attribute   | Description                                                                                                                                                | Type                                   | Default     |\n| ------------------ | ----------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------- | ----------- |\n| `average`          | `average`   | Specifies a cumulative average from previous ratings to display.                                                                                           | `number`                               | `undefined` |\n| `count`            | `count`     | Specifies the number of previous ratings to display.                                                                                                       | `number`                               | `undefined` |\n| `disabled`         | `disabled`  | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                   | `boolean`                              | `false`     |\n| `form`             | `form`      | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any. | `string`                               | `undefined` |\n| `messageOverrides` | --          | Use this property to override individual strings used by the component.                                                                                    | `{ rating?: string; stars?: string; }` | `undefined` |\n| `name`             | `name`      | Specifies the name of the component.  Required to pass the component\'s `value` on form submission.                                                         | `string`                               | `undefined` |\n| `readOnly`         | `read-only` | When `true`, the component\'s value can be read, but cannot be modified.                                                                                    | `boolean`                              | `false`     |\n| `scale`            | `scale`     | Specifies the size of the component.                                                                                                                       | `"l" \\| "m" \\| "s"`                    | `"m"`       |\n| `showChip`         | `show-chip` | When `true`, and if available, displays the `average` and/or `count` data summary in a `calcite-chip`.                                                     | `boolean`                              | `false`     |\n| `value`            | `value`     | The component\'s value.                                                                                                                                     | `number`                               | `0`         |\n\n\n## Events\n\n| Event                 | Description                               | Type                |\n| --------------------- | ----------------------------------------- | ------------------- |\n| `calciteRatingChange` | Fires when the component\'s value changes. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## CSS Custom Properties\n\n| Name                            | Description                                                           |\n| ------------------------------- | --------------------------------------------------------------------- |\n| `--calcite-rating-spacing-unit` | The amount of left and right margin spacing between each rating star. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-chip](../chip)\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-rating --\x3e calcite-chip\n  calcite-rating --\x3e calcite-icon\n  calcite-chip --\x3e calcite-icon\n  style calcite-rating fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-rating
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    value="${Object(dist.number)("value",1)}"
    ${Object(helpers.a)("show-chip",!0)}
    average="${Object(dist.number)("average",4.4)}"
    count="${Object(dist.number)("count",10)}"
    ${Object(helpers.a)("read-only",!1)}
    ${Object(helpers.a)("disabled",!1)}
  ></calcite-rating>
`}),darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-rating
    class="calcite-mode-dark"
    dir="rtl"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    value="${Object(dist.number)("value",2)}"
    ${Object(helpers.a)("show-chip",!0)}
    average="${Object(dist.number)("average",4.4)}"
    count="${Object(dist.number)("count",10)}"
    ${Object(helpers.a)("read-only",!1)}
    ${Object(helpers.a)("disabled",!1)}
  ></calcite-rating>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var disabled_TestOnly=function(){return formatting.a`<calcite-rating disabled value="3"></calcite-rating>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-rating\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    value="${number("value", 1)}"\n    ${boolean("show-chip", true)}\n    average="${number("average", 4.4)}"\n    count="${number("count", 10)}"\n    ${boolean("read-only", false)}\n    ${boolean("disabled", false)}\n  ></calcite-rating>\n`'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-rating\n    class="calcite-mode-dark"\n    dir="rtl"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    value="${number("value", 2)}"\n    ${boolean("show-chip", true)}\n    average="${number("average", 4.4)}"\n    count="${number("count", 10)}"\n    ${boolean("read-only", false)}\n    ${boolean("disabled", false)}\n  ></calcite-rating>\n`'}},darkModeRTL_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-rating disabled value="3"></calcite-rating>`'}},disabled_TestOnly.parameters)},"./src/components/scrim/scrim.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Scrim",parameters:{notes:'# calcite-scrim\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<div style="position: relative; width: 200px; height: 200px; overflow: auto;">\n  <calcite-scrim>\n    <p>I\'m a panel that is not loading.</p>\n    <p>This content can have any zIndex and it will not be placed above</p>\n    <p>.</p>\n    <p>.</p>\n    <p>.</p>\n    <p>.</p>\n  </calcite-scrim>\n</div>\n```\n\n\n### Loading-scrim-panel\n\n```html\n<div style="position: relative; width: 200px; height: 200px; overflow: auto;">\n  <calcite-scrim loading>\n    <p>I\'m a panel that is not loading.</p>\n    <p>I have a loading spinner over my content.</p>\n    <p>.</p>\n    <p>.</p>\n    <p>.</p>\n    <p>.</p>\n  </calcite-scrim>\n</div>\n```\n\n\n\n## Properties\n\n| Property           | Attribute | Description                                                             | Type                    | Default     |\n| ------------------ | --------- | ----------------------------------------------------------------------- | ----------------------- | ----------- |\n| `loading`          | `loading` | When `true`, a busy indicator is displayed.                             | `boolean`               | `false`     |\n| `messageOverrides` | --        | Use this property to override individual strings used by the component. | `{ loading?: string; }` | `undefined` |\n\n\n## Slots\n\n| Slot | Description                                                      |\n| ---- | ---------------------------------------------------------------- |\n|      | A slot for adding custom content, primarily loading information. |\n\n\n## CSS Custom Properties\n\n| Name                         | Description                                  |\n| ---------------------------- | -------------------------------------------- |\n| `--calcite-scrim-background` | Specifies the background color of the scrim. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-block](../block)\n - [calcite-list](../list)\n - [calcite-modal](../modal)\n - [calcite-panel](../panel)\n - [calcite-pick-list](../pick-list)\n - [calcite-value-list](../value-list)\n\n### Depends on\n\n- [calcite-loader](../loader)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-scrim --\x3e calcite-loader\n  calcite-block --\x3e calcite-scrim\n  calcite-list --\x3e calcite-scrim\n  calcite-modal --\x3e calcite-scrim\n  calcite-panel --\x3e calcite-scrim\n  calcite-pick-list --\x3e calcite-scrim\n  calcite-value-list --\x3e calcite-scrim\n  style calcite-scrim fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div tabindex="0" style="position: relative; width: 400px; height: 400px">
    <calcite-scrim ${Object(helpers.a)("loading",!1)}></calcite-scrim>
    <div style="width: 400px; height: 400px; overflow: auto">
      <p>
        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor
        quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean
        ultricies mi vitae est. Mauris placerat eleifend leo.
      </p>
      <ul>
        <li>
          Morbi in sem quis dui placerat ornare. Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed
          arcu. Cras consequat.
        </li>
        <li>
          Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.
          Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus.
        </li>
        <li>
          Phasellus ultrices nulla quis nibh. Quisque a lectus. Donec consectetuer ligula vulputate sem tristique
          cursus. Nam nulla quam, gravida non, commodo a, sodales sit amet, nisi.
        </li>
        <li>
          Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.
        </li>
      </ul>
    </div>
  </div>
`}),darkModeRTL_TestOnly=function(){return formatting.a`
  <div tabindex="0" style="position: relative; width: 400px; height: 400px">
    <calcite-scrim dir="rtl" class="calcite-mode-dark" ${Object(helpers.a)("loading",!1)}></calcite-scrim>
    <div style="width: 400px; height: 400px; overflow: auto">
      <p>
        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor
        quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean
        ultricies mi vitae est. Mauris placerat eleifend leo.
      </p>
      <ul>
        <li>
          Morbi in sem quis dui placerat ornare. Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed
          arcu. Cras consequat.
        </li>
        <li>
          Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.
          Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus.
        </li>
        <li>
          Phasellus ultrices nulla quis nibh. Quisque a lectus. Donec consectetuer ligula vulputate sem tristique
          cursus. Nam nulla quam, gravida non, commodo a, sodales sit amet, nisi.
        </li>
        <li>
          Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.
        </li>
      </ul>
    </div>
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div tabindex="0" style="position: relative; width: 400px; height: 400px">\n    <calcite-scrim ${boolean("loading", false)}></calcite-scrim>\n    <div style="width: 400px; height: 400px; overflow: auto">\n      <p>\n        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor\n        quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean\n        ultricies mi vitae est. Mauris placerat eleifend leo.\n      </p>\n      <ul>\n        <li>\n          Morbi in sem quis dui placerat ornare. Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed\n          arcu. Cras consequat.\n        </li>\n        <li>\n          Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.\n          Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus.\n        </li>\n        <li>\n          Phasellus ultrices nulla quis nibh. Quisque a lectus. Donec consectetuer ligula vulputate sem tristique\n          cursus. Nam nulla quam, gravida non, commodo a, sodales sit amet, nisi.\n        </li>\n        <li>\n          Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.\n        </li>\n      </ul>\n    </div>\n  </div>\n`'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div tabindex="0" style="position: relative; width: 400px; height: 400px">\n    <calcite-scrim dir="rtl" class="calcite-mode-dark" ${boolean("loading", false)}></calcite-scrim>\n    <div style="width: 400px; height: 400px; overflow: auto">\n      <p>\n        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor\n        quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean\n        ultricies mi vitae est. Mauris placerat eleifend leo.\n      </p>\n      <ul>\n        <li>\n          Morbi in sem quis dui placerat ornare. Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed\n          arcu. Cras consequat.\n        </li>\n        <li>\n          Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat.\n          Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus.\n        </li>\n        <li>\n          Phasellus ultrices nulla quis nibh. Quisque a lectus. Donec consectetuer ligula vulputate sem tristique\n          cursus. Nam nulla quam, gravida non, commodo a, sodales sit amet, nisi.\n        </li>\n        <li>\n          Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.\n        </li>\n      </ul>\n    </div>\n  </div>\n`'}},darkModeRTL_TestOnly.parameters)},"./src/components/segmented-control/segmented-control.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"fullWidthWithIcons",(function(){return fullWidthWithIcons})),__webpack_require__.d(__webpack_exports__,"darkThemeRTL_TestOnly",(function(){return darkThemeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"WithIconStartAndEnd",(function(){return WithIconStartAndEnd}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Radio/Segmented Control",parameters:{notes:['# calcite-segmented-control\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-segmented-control layout="horizontal" appearance="solid" scale="m" width="auto">\n  <calcite-segmented-control-item value="apple" checked>Apple</calcite-segmented-control-item>\n  <calcite-segmented-control-item value="mango">Mango</calcite-segmented-control-item>\n  <calcite-segmented-control-item value="tomato">Tomato</calcite-segmented-control-item>\n  <calcite-segmented-control-item value="banana">Banana</calcite-segmented-control-item>\n</calcite-segmented-control>\n```\n\n\n\n## Properties\n\n| Property       | Attribute    | Description                                                                                                                                                | Type                                     | Default        |\n| -------------- | ------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------- | -------------- |\n| `appearance`   | `appearance` | Specifies the appearance style of the component.                                                                                                           | `"outline" \\| "outline-fill" \\| "solid"` | `"solid"`      |\n| `disabled`     | `disabled`   | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                   | `boolean`                                | `false`        |\n| `form`         | `form`       | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any. | `string`                                 | `undefined`    |\n| `layout`       | `layout`     | Defines the layout of the component.                                                                                                                       | `"grid" \\| "horizontal" \\| "vertical"`   | `"horizontal"` |\n| `name`         | `name`       | Specifies the name of the component.  Required to pass the component\'s `value` on form submission.                                                         | `string`                                 | `undefined`    |\n| `scale`        | `scale`      | Specifies the size of the component.                                                                                                                       | `"l" \\| "m" \\| "s"`                      | `"m"`          |\n| `selectedItem` | --           | The component\'s selected item `HTMLElement`.                                                                                                               | `HTMLCalciteSegmentedControlItemElement` | `undefined`    |\n| `value`        | `value`      | The component\'s `selectedItem` value.                                                                                                                      | `string`                                 | `null`         |\n| `width`        | `width`      | Specifies the width of the component.                                                                                                                      | `"auto" \\| "full"`                       | `"auto"`       |\n\n\n## Events\n\n| Event                           | Description                                                        | Type                |\n| ------------------------------- | ------------------------------------------------------------------ | ------------------- |\n| `calciteSegmentedControlChange` | Fires when the `calcite-segmented-control-item` selection changes. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                                          |\n| ---- | ---------------------------------------------------- |\n|      | A slot for adding `calcite-segmented-control-item`s. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n','# calcite-segmented-control-item\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                  | Type      | Default     |\n| ------------- | --------------- | -------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `checked`     | `checked`       | When `true`, the component is checked.                                                       | `boolean` | `false`     |\n| `iconEnd`     | `icon-end`      | Specifies an icon to display at the end of the component.                                    | `string`  | `undefined` |\n| `iconFlipRtl` | `icon-flip-rtl` | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`). | `boolean` | `false`     |\n| `iconStart`   | `icon-start`    | Specifies an icon to display at the start of the component.                                  | `string`  | `undefined` |\n| `value`       | `value`         | The component\'s value.                                                                       | `any`     | `undefined` |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-segmented-control-item --\x3e calcite-icon\n  style calcite-segmented-control-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n']}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-segmented-control
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill"],"solid")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["auto","full"],"auto")}"
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>
    <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>
    <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>
    <calcite-segmented-control-item value="vue">Vue</calcite-segmented-control-item>
  </calcite-segmented-control>
`}),fullWidthWithIcons=function(){return formatting.a`
  <div style="width:33vw;">
    <calcite-label scale="${Object(dist.select)("scale",["s","m","l"],"m")}">
      My great segmented control
      <calcite-segmented-control
        layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
        appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill"],"solid")}"
        width="${Object(dist.select)("width",["auto","full"],"full")}"
        ${Object(helpers.a)("disabled",!1)}
      >
        <calcite-segmented-control-item icon-start="car" value="car" checked>Car</calcite-segmented-control-item>
        <calcite-segmented-control-item icon-start="plane" value="plane">Plane</calcite-segmented-control-item>
        <calcite-segmented-control-item icon-start="biking" value="bicycle">Bicycle</calcite-segmented-control-item>
      </calcite-segmented-control>
    </calcite-label>
  </div>
`},darkThemeRTL_TestOnly=function(){return formatting.a`
  <calcite-segmented-control
    class="calcite-theme-dark"
    dir="rtl"
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill"],"solid")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    width="${Object(dist.select)("width",["auto","full"],"auto")}"
    ${Object(helpers.a)("disabled",!1)}
  >
    <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>
    <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>
    <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>
    <calcite-segmented-control-item value="vue">Vue</calcite-segmented-control-item>
  </calcite-segmented-control>
`};darkThemeRTL_TestOnly.parameters={themes:utils.themesDarkDefault};var disabled_TestOnly=function(){return formatting.a`<calcite-segmented-control disabled>
  <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>
  <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>
  <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>
  <calcite-segmented-control-item value="vue">Vue</calcite-segmented-control-item>
</calcite-segmented-control>`},WithIconStartAndEnd=function(){return formatting.a` <calcite-segmented-control scale="s">
  <calcite-segmented-control-item icon-start="car" icon-end="car" value="car" checked
    >Car</calcite-segmented-control-item
  >
  <calcite-segmented-control-item icon-start="plane" icon-end="plane" value="plane"
    >Plane</calcite-segmented-control-item
  >
  <calcite-segmented-control-item icon-start="biking" icon-end="biking" value="bicycle"
    >Bicycle</calcite-segmented-control-item
  >
  <calcite-segmented-control-item value="nothing">Nothing</calcite-segmented-control-item>
</calcite-segmented-control>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-segmented-control\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    appearance="${select("appearance", ["solid", "outline", "outline-fill"], "solid")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["auto", "full"], "auto")}"\n    ${boolean("disabled", false)}\n  >\n    <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>\n    <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>\n    <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>\n    <calcite-segmented-control-item value="vue">Vue</calcite-segmented-control-item>\n  </calcite-segmented-control>\n`'}},simple.parameters),fullWidthWithIcons.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:33vw;">\n    <calcite-label scale="${select("scale", ["s", "m", "l"], "m")}">\n      My great segmented control\n      <calcite-segmented-control\n        layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n        appearance="${select("appearance", ["solid", "outline", "outline-fill"], "solid")}"\n        width="${select("width", ["auto", "full"], "full")}"\n        ${boolean("disabled", false)}\n      >\n        <calcite-segmented-control-item icon-start="car" value="car" checked>Car</calcite-segmented-control-item>\n        <calcite-segmented-control-item icon-start="plane" value="plane">Plane</calcite-segmented-control-item>\n        <calcite-segmented-control-item icon-start="biking" value="bicycle">Bicycle</calcite-segmented-control-item>\n      </calcite-segmented-control>\n    </calcite-label>\n  </div>\n`'}},fullWidthWithIcons.parameters),darkThemeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-segmented-control\n    class="calcite-theme-dark"\n    dir="rtl"\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    appearance="${select("appearance", ["solid", "outline", "outline-fill"], "solid")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    width="${select("width", ["auto", "full"], "auto")}"\n    ${boolean("disabled", false)}\n  >\n    <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>\n    <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>\n    <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>\n    <calcite-segmented-control-item value="vue">Vue</calcite-segmented-control-item>\n  </calcite-segmented-control>\n`'}},darkThemeRTL_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-segmented-control disabled>\n  <calcite-segmented-control-item value="react" checked>React</calcite-segmented-control-item>\n  <calcite-segmented-control-item value="ember">Ember</calcite-segmented-control-item>\n  <calcite-segmented-control-item value="angular">Angular</calcite-segmented-control-item>\n  <calcite-segmented-control-item value="vue">Vue</calcite-segmented-control-item>\n</calcite-segmented-control>`'}},disabled_TestOnly.parameters),WithIconStartAndEnd.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-segmented-control scale="s">\n  <calcite-segmented-control-item icon-start="car" icon-end="car" value="car" checked\n    >Car</calcite-segmented-control-item\n  >\n  <calcite-segmented-control-item icon-start="plane" icon-end="plane" value="plane"\n    >Plane</calcite-segmented-control-item\n  >\n  <calcite-segmented-control-item icon-start="biking" icon-end="biking" value="bicycle"\n    >Bicycle</calcite-segmented-control-item\n  >\n  <calcite-segmented-control-item value="nothing">Nothing</calcite-segmented-control-item>\n</calcite-segmented-control>`'}},WithIconStartAndEnd.parameters)},"./src/components/select/select.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"grouped",(function(){return grouped})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabledAndLargeScaleGetsMediumChevron_TestOnly",(function(){return disabledAndLargeScaleGetsMediumChevron_TestOnly}));var utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var createSelectAttributes=function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions,group="select";return Object(utils.b)([{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1,group),delete this.build,this}}],exceptions)},createOptionAttributes=function(){return[{name:"disabled",value:Object(dist.boolean)("disabled",!1,"option")},{name:"label",value:Object(dist.text)("label","fancy label","option")},{name:"selected",value:Object(dist.boolean)("selected",!1,"option")},{name:"value",value:Object(dist.text)("value","value","option")}]},createOptionGroupAttributes=function(){return[{name:"label",value:Object(dist.text)("label","My fancy group label","option-group")}]},simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Select",parameters:{notes:{select:'# calcite-select\n\nThis component represents a menu of options.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-select>\n  <calcite-option>high</calcite-option>\n  <calcite-option>medium</calcite-option>\n  <calcite-option>low</calcite-option>\n</calcite-select>\n```\n\n\n### Content\n\nSpecify the underlying value and content for each option.\n\n```html\n<calcite-select>\n  <calcite-option label="high">1</calcite-option>\n  <calcite-option label="medium">2</calcite-option>\n  <calcite-option label="low">3</calcite-option>\n</calcite-select>\n```\n\n\n### Disable\n\nDisable specific items or groups.\n\n```html\n<calcite-select>\n  <calcite-option-group label="letters">\n    <calcite-option>a</calcite-option>\n    <calcite-option>b</calcite-option>\n    <calcite-option>c</calcite-option>\n    <calcite-option disabled>d (disabled)</calcite-option>\n  </calcite-option-group>\n  <calcite-option-group label="numbers">\n    <calcite-option disabled>1 (disabled)</calcite-option>\n    <calcite-option>2</calcite-option>\n    <calcite-option selected>2</calcite-option>\n  </calcite-option-group>\n  <calcite-option-group label="non-selectable" disabled>\n    <calcite-option>You-Know-Who</calcite-option>\n    <calcite-option selected>Tom Marvolo Riddle</calcite-option>\n    <calcite-option>He-Who-Must-Not-Be-Named</calcite-option>\n    <calcite-option>Voldemort</calcite-option>\n  </calcite-option-group>\n</calcite-select>\n```\n\n\n### Grouped\n\nSeparate the options into groups.\n\n```html\n<calcite-select>\n  <calcite-option-group label="letters">\n    <calcite-option>a</calcite-option>\n    <calcite-option>b</calcite-option>\n    <calcite-option>c</calcite-option>\n  </calcite-option-group>\n  <calcite-option-group label="numbers">\n    <calcite-option>1</calcite-option>\n    <calcite-option selected>2</calcite-option>\n    <calcite-option>3</calcite-option>\n  </calcite-option-group>\n</calcite-select>\n```\n\n\n### Side-by-side\n\nSeparate the options side by side using a flex-box container.\n\n```html\n<div class="demo-side-by-side">\n  <calcite-select width="half" label="half width">\n    <calcite-option>☕️</calcite-option>\n    <calcite-option>🍵</calcite-option>\n    <calcite-option selected>🍻</calcite-option>\n  </calcite-select>\n  <calcite-select width="half" label="half width">\n    <calcite-option selected>🌮</calcite-option>\n    <calcite-option>🍔</calcite-option>\n    <calcite-option>🌯</calcite-option>\n  </calcite-select>\n</div>\n```\n\n\n### Value\n\nSpecify the underlying value for each option.\n\n```html\n<calcite-select>\n  <calcite-option value="high">😃</calcite-option>\n  <calcite-option value="medium">😶</calcite-option>\n  <calcite-option value="low">😭</calcite-option>\n</calcite-select>\n```\n\n\n\n## Properties\n\n| Property             | Attribute  | Description                                                                                                                                                | Type                         | Default     |\n| -------------------- | ---------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `disabled`           | `disabled` | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                   | `boolean`                    | `false`     |\n| `form`               | `form`     | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any. | `string`                     | `undefined` |\n| `label` _(required)_ | `label`    | Accessible name for the component.                                                                                                                         | `string`                     | `undefined` |\n| `name`               | `name`     | Specifies the name of the component.  Required to pass the component\'s `value` on form submission.                                                         | `string`                     | `undefined` |\n| `scale`              | `scale`    | Specifies the size of the component.                                                                                                                       | `"l" \\| "m" \\| "s"`          | `"m"`       |\n| `selectedOption`     | --         | The component\'s selected option `HTMLElement`.                                                                                                             | `HTMLCalciteOptionElement`   | `undefined` |\n| `value`              | `value`    | The component\'s `selectedOption` value.                                                                                                                    | `string`                     | `null`      |\n| `width`              | `width`    | Specifies the width of the component.                                                                                                                      | `"auto" \\| "full" \\| "half"` | `"auto"`    |\n\n\n## Events\n\n| Event                 | Description                              | Type                |\n| --------------------- | ---------------------------------------- | ------------------- |\n| `calciteSelectChange` | Fires when the `selectedOption` changes. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                          |\n| ---- | ------------------------------------ |\n|      | A slot for adding `calcite-option`s. |\n\n\n## CSS Custom Properties\n\n| Name                         | Description                                  |\n| ---------------------------- | -------------------------------------------- |\n| `--calcite-select-font-size` | The font size of items in the component.     |\n| `--calcite-select-spacing`   | The padding around the selected option text. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-select --\x3e calcite-icon\n  style calcite-select fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',option:"# calcite-option\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property   | Attribute  | Description                                                                              | Type      | Default     |\n| ---------- | ---------- | ---------------------------------------------------------------------------------------- | --------- | ----------- |\n| `disabled` | `disabled` | When `true`, interaction is prevented and the component is displayed with lower opacity. | `boolean` | `false`     |\n| `label`    | `label`    | Accessible name for the component.                                                       | `string`  | `undefined` |\n| `selected` | `selected` | When `true`, the component is selected.                                                  | `boolean` | `undefined` |\n| `value`    | `value`    | The component's value.                                                                   | `any`     | `undefined` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n",optionGroup:"# calcite-option-group\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property             | Attribute  | Description                                                                              | Type      | Default     |\n| -------------------- | ---------- | ---------------------------------------------------------------------------------------- | --------- | ----------- |\n| `disabled`           | `disabled` | When `true`, interaction is prevented and the component is displayed with lower opacity. | `boolean` | `false`     |\n| `label` _(required)_ | `label`    | Accessible name for the component.                                                       | `string`  | `undefined` |\n\n\n## Slots\n\n| Slot | Description                          |\n| ---- | ------------------------------------ |\n|      | A slot for adding `calcite-option`s. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"}}},Object(helpers.c)()),function(){return formatting.a`<div style="width:260px">
    ${Object(utils.a)("calcite-select",createSelectAttributes(),formatting.a`
        ${Object(utils.a)("calcite-option",createOptionAttributes())}
        <calcite-option
          selected
          label="some fixed option with a very long label set on it to extend past the end"
          value="some-fixed-value"
        ></calcite-option>
        <calcite-option label="another fixed option" value="another-fixed-value"></calcite-option>
      `)}
  </div>`}),grouped=function(){return Object(utils.a)("calcite-select",createSelectAttributes(),formatting.a`
      ${Object(utils.a)("calcite-option-group",createOptionGroupAttributes(),formatting.a`
          ${Object(utils.a)("calcite-option",createOptionAttributes())}
          <calcite-option label="some fixed option (A)" value="some-fixed-value-a"></calcite-option>
          <calcite-option label="another fixed option (A)" value="another-fixed-value-a"></calcite-option>
        `)}
      <calcite-option-group label="group B (fixed)">
        <calcite-option label="some fixed option (B)" value="some-fixed-value-b"></calcite-option>
        <calcite-option label="another fixed option (B)" value="another-fixed-value-b"></calcite-option>
      </calcite-option-group>
    `)},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-select",[].concat(_toConsumableArray(createSelectAttributes({exceptions:["dir","class"]})),[{name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}]),formatting.a`
      ${Object(utils.a)("calcite-option-group",createOptionGroupAttributes(),formatting.a`
          ${Object(utils.a)("calcite-option",createOptionAttributes())}
          <calcite-option label="some fixed option (A)" value="some-fixed-value-a"></calcite-option>
          <calcite-option label="another fixed option (A)" value="another-fixed-value-a"></calcite-option>
        `)}
      <calcite-option-group label="group B (fixed)">
        <calcite-option label="some fixed option (B)" value="some-fixed-value-b"></calcite-option>
        <calcite-option label="another fixed option (B)" value="another-fixed-value-b"></calcite-option>
      </calcite-option-group>
    `)};darkModeRTL_TestOnly.parameters={modes:utils.e};var disabledAndLargeScaleGetsMediumChevron_TestOnly=function(){return formatting.a`
  <calcite-select disabled scale="l">
    <calcite-option label="first" value="1"></calcite-option>
    <calcite-option label="second" value="2"></calcite-option>
  </calcite-select>
`};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width:260px">\n    ${create(\n      "calcite-select",\n      createSelectAttributes(),\n      html`\n        ${create("calcite-option", createOptionAttributes())}\n        <calcite-option\n          selected\n          label="some fixed option with a very long label set on it to extend past the end"\n          value="some-fixed-value"\n        ></calcite-option>\n        <calcite-option label="another fixed option" value="another-fixed-value"></calcite-option>\n      `\n    )}\n  </div>`'}},simple.parameters),grouped.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-select",\n    createSelectAttributes(),\n    html`\n      ${create(\n        "calcite-option-group",\n        createOptionGroupAttributes(),\n        html`\n          ${create("calcite-option", createOptionAttributes())}\n          <calcite-option label="some fixed option (A)" value="some-fixed-value-a"></calcite-option>\n          <calcite-option label="another fixed option (A)" value="another-fixed-value-a"></calcite-option>\n        `\n      )}\n      <calcite-option-group label="group B (fixed)">\n        <calcite-option label="some fixed option (B)" value="some-fixed-value-b"></calcite-option>\n        <calcite-option label="another fixed option (B)" value="another-fixed-value-b"></calcite-option>\n      </calcite-option-group>\n    `\n  )'}},grouped.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-select",\n    [\n      ...createSelectAttributes({ exceptions: ["dir", "class"] }),\n      {\n        name: "dir",\n        value: "rtl"\n      },\n      {\n        name: "class",\n        value: "calcite-mode-dark"\n      }\n    ],\n    html`\n      ${create(\n        "calcite-option-group",\n        createOptionGroupAttributes(),\n        html`\n          ${create("calcite-option", createOptionAttributes())}\n          <calcite-option label="some fixed option (A)" value="some-fixed-value-a"></calcite-option>\n          <calcite-option label="another fixed option (A)" value="another-fixed-value-a"></calcite-option>\n        `\n      )}\n      <calcite-option-group label="group B (fixed)">\n        <calcite-option label="some fixed option (B)" value="some-fixed-value-b"></calcite-option>\n        <calcite-option label="another fixed option (B)" value="another-fixed-value-b"></calcite-option>\n      </calcite-option-group>\n    `\n  )'}},darkModeRTL_TestOnly.parameters),disabledAndLargeScaleGetsMediumChevron_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-select disabled scale="l">\n    <calcite-option label="first" value="1"></calcite-option>\n    <calcite-option label="second" value="2"></calcite-option>\n  </calcite-select>\n`'}},disabledAndLargeScaleGetsMediumChevron_TestOnly.parameters)},"./src/components/shell/shell.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"closedPanels",(function(){return closedPanels})),__webpack_require__.d(__webpack_exports__,"endPanelOnly",(function(){return endPanelOnly})),__webpack_require__.d(__webpack_exports__,"slottedModalAndAlert",(function(){return slottedModalAndAlert})),__webpack_require__.d(__webpack_exports__,"contentBehind",(function(){return contentBehind}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),placeholderImage=__webpack_require__("./.storybook/placeholderImage.ts"),resources=__webpack_require__("./.storybook/resources.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Shell",parameters:{notes:['# calcite-shell\n\nThe `calcite-shell` component is used for application layout management. It is a container for the view as well as other calcite components like `calcite-shell-panel` and `calcite-tip-manager`.\n\n**Note:** `calcite-shell` supports tablet as the smallest screen size.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Advanced\n\nRenders a shell with leading and trailing floating panels, action bar/pad, block, flow, tip manager, footer.\n\n```html\n<calcite-shell>\n  <calcite-shell-panel slot="panel-start" position="start" detached>\n    <calcite-action-bar slot="action-bar">\n      <calcite-action-group>\n        <calcite-action text="Add" icon="plus"></calcite-action>\n        <calcite-action text="Save" disabled icon="save"></calcite-action>\n        <calcite-action text="Layers" active indicator icon="layers"></calcite-action>\n      </calcite-action-group>\n      <calcite-action-group>\n        <calcite-action text="Add" icon="plus"></calcite-action>\n        <calcite-action text="Layers" indicator icon="layers"></calcite-action>\n      </calcite-action-group>\n    </calcite-action-bar>\n    <calcite-block collapsible  heading="Primary Content" summary="This is the primary.">\n      <calcite-block-content>\n        <calcite-action text="Puppies" text-enabled indicator icon="plus"></calcite-action>\n        <calcite-action text="Kittens" text-enabled icon="save"></calcite-action>\n        <calcite-action text="Birds?" text-enabled icon="banana"></calcite-action>\n      </calcite-block-content>\n    </calcite-block>\n    <calcite-block collapsible  heading="Additional Block" summary="Baby shark doo doo doo doo.">\n      <calcite-block-content>\n          <p>Cool thing.</p>\n      </calcite-block-content>\n    </calcite-block>\n  </calcite-shell-panel>\n\n   <calcite-shell-panel slot="panel-end" position="end" detached height-scale="l">\n      <calcite-action-bar slot="action-bar">\n        <calcite-action-group>\n          <calcite-action text="Add" active icon="plus"></calcite-action>\n          <calcite-action text="Save" disabled icon="save"></calcite-action>\n          <calcite-action text="Layers" icon="layers"></calcite-action>\n        </calcite-action-group>\n        <calcite-action-group>\n          <calcite-action text="Add" icon="plus"></calcite-action>\n          <calcite-action text="Save" disabled icon="save"></calcite-action>\n          <calcite-action text="Layers" icon="layers"></calcite-action>\n        </calcite-action-group>\n        <calcite-action slot="bottom-actions" text="Tips" icon="lightbulb"></calcite-action>\n      </calcite-action-bar>\n      <calcite-flow>\n        <calcite-flow-item heading="Layer settings">\n          <calcite-block collapsible open heading="Contextual Content" summary="Select goodness">\n            <calcite-value-list multiple filter-enabled>\n              <calcite-value-list-item label="2018 Population Density (Esri)" description="{POPDENS_CY}" value="POPDENS_CY">\n                <calcite-action slot="actions-end" icon="camera-flash-on"></calcite-action>\n              </calcite-value-list-item>\n              <calcite-value-list-item label="2018 Population Density [Updated]" description="{POPDENS_CY}" value="POPDENS_CY2">\n                <calcite-action slot="actions-end" icon="banana"></calcite-action>\n              </calcite-value-list-item>\n              <calcite-value-list-item label="2018 Total Households (Esri)" description="{TOTHH_CY}" value="TOTHH_CY">\n                <calcite-action slot="actions-end" icon="person2"></calcite-action>\n              </calcite-value-list-item>\n            </calcite-value-list>\n          </calcite-block>\n        </calcite-flow-item>\n      </calcite-flow>\n  </calcite-shell-panel>\n  <calcite-tip-manager slot="center-row">\n    <calcite-tip heading="The Red Rocks and Blue Water" thumbnail="https://placeimg.com/1000/600" text-thumbnail="This is an image of nature.">\n    <calcite-tip heading="The Long Trees" thumbnail="https://placeimg.com/1000/600" text-thumbnail="This is an image of trees.">\n  </calcite-tip-manager>\n  <footer slot="footer">Footer</footer>\n</calcite-shell>\n```\n\n\n### Basic\n\nRenders a basic shell with a header and a footer.\n\n```html\n<calcite-shell>\n  <div slot="header">\n    <header>\n      <h2>Shell Header: My App</h2>\n    </header>\n  </div>\n  <p>Shell Content</p>\n  \x3c!-- insert map or fillable content here --\x3e\n  <footer slot="footer">Footer</footer>\n</calcite-shell>\n```\n\n\n### With-panel-and-action-bar\n\nRenders a single panel with actions in an action bar.\n\n```html\n<calcite-shell>\n  <calcite-shell-panel slot="panel-start" position="start">\n    <img src="https://via.placeholder.com/300x200" alt="placeholder" />\n    <calcite-action-bar slot="action-bar">\n      <calcite-action text="Add" active icon="plus"></calcite-action>\n      <calcite-action text="Save" disabled icon="save"></calcite-action>\n      <calcite-action text="Layers" icon="layers"></calcite-action>\n    </calcite-action-bar>\n  </calcite-shell-panel>\n</calcite-shell>\n```\n\n\n### With-panels\n\nRenders a shell with a header and panels on the left and right sides of the app.\n\n```html\n<calcite-shell>\n  <calcite-shell-panel slot="panel-start" position="start">\n    Leading panel! (on the left side, since this is a LTR app)\n  </calcite-shell-panel>\n  <calcite-shell-panel slot="panel-end" position="end"> Trailing panel! (right side) </calcite-shell-panel>\n  <calcite-shell-center-row slot="center-row" position="end" height-scale="m">\n    Center Row! (center bottom)\n  </calcite-shell-center-row>\n  <div slot="header">\n    <header>\n      <h2>Shell Header: My App</h2>\n    </header>\n  </div>\n  <p>Shell Content</p>\n  \x3c!-- insert map or fillable content here --\x3e\n</calcite-shell>\n```\n\n\n\n## Properties\n\n| Property        | Attribute        | Description                                                     | Type      | Default |\n| --------------- | ---------------- | --------------------------------------------------------------- | --------- | ------- |\n| `contentBehind` | `content-behind` | Positions the center content behind any `calcite-shell-panel`s. | `boolean` | `false` |\n\n\n## Slots\n\n| Slot            | Description                                                                                                                                |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n|                 | A slot for adding custom content. This content will appear between any leading and trailing panels added to the component, such as a map.  |\n| `"alerts"`      | A slot for adding `calcite-alert` components. When placed in this slot, the alert position will be constrained to the extent of the shell. |\n| `"center-row"`  | A slot for adding content to the center row.                                                                                               |\n| `"footer"`      | A slot for adding footer content. This content will be positioned at the bottom of the component.                                          |\n| `"header"`      | A slot for adding header content. This content will be positioned at the top of the component.                                             |\n| `"modals"`      | A slot for adding `calcite-modal` components. When placed in this slot, the modal position will be constrained to the extent of the shell. |\n| `"panel-end"`   | A slot for adding the ending `calcite-shell-panel`.                                                                                        |\n| `"panel-start"` | A slot for adding the starting `calcite-shell-panel`.                                                                                      |\n\n\n## CSS Custom Properties\n\n| Name                          | Description                                                                            |\n| ----------------------------- | -------------------------------------------------------------------------------------- |\n| `--calcite-shell-tip-spacing` | The left and right spacing of the `calcite-tip-manager` when slotted in the component. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n','# calcite-shell-panel\n\nThe `calcite-shell-panel` is a child component of `calcite-shell` used as a container to display other components like `calcite-block` and `calcite-flow`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nRenders a basic shell panel with text content.\n\n```html\n<calcite-shell-panel>\n  <p>Primary Content</p>\n</calcite-shell-panel>\n```\n\n\n### With-action-bar\n\nRenders a panel with an action bar.\n\n```html\n<calcite-shell-panel>\n  <calcite-action-bar slot="action-bar">\n    <calcite-action text="Add" icon="plus"></calcite-action>\n    <calcite-action text="Save" icon="save"></calcite-action>\n    <calcite-action text="Layers" icon="layers"></calcite-action>\n  </calcite-action-bar>\n</calcite-shell-panel>\n```\n\n\n### With-custom-element\n\nAdd `calcite-match-height` to a wrapping element to ensure proper height, scrolling, and sticky behavior (header, footer, fab). Note that multiple levels of nesting is not supported.\n\n```html\n<calcite-shell-panel>\n  <calcite-action-bar slot="action-bar">\n    <calcite-action text="Add" icon="plus"></calcite-action>\n    <calcite-action text="Save" icon="save"></calcite-action>\n    <calcite-action text="Layers" icon="layers"></calcite-action>\n  </calcite-action-bar>\n  <your-custom-element class="calcite-match-height">\n    <calcite-panel> ... </calcite-panel>\n  </your-custom-element>\n</calcite-shell-panel>\n```\n\n\n### With-flow\n\n```html\n<calcite-shell-panel>\n  <calcite-action-bar slot="action-bar">\n    <calcite-action text="Add" icon="plus"></calcite-action>\n    <calcite-action text="Save" icon="save"></calcite-action>\n    <calcite-action text="Layers" icon="layers"></calcite-action>\n  </calcite-action-bar>\n  <calcite-flow>\n    <calcite-flow-item> ... </calcite-flow-item>\n    <calcite-flow-item> ... </calcite-flow-item>\n  </calcite-flow>\n</calcite-shell-panel>\n```\n\n\n### With-panel\n\n```html\n<calcite-shell-panel>\n  <calcite-action-bar slot="action-bar">\n    <calcite-action text="Add" icon="plus"></calcite-action>\n    <calcite-action text="Save" icon="save"></calcite-action>\n    <calcite-action text="Layers" icon="layers"></calcite-action>\n  </calcite-action-bar>\n  <calcite-panel> ... </calcite-panel>\n</calcite-shell-panel>\n```\n\n\n\n## Properties\n\n| Property              | Attribute               | Description                                                                                                | Type                   | Default     |\n| --------------------- | ----------------------- | ---------------------------------------------------------------------------------------------------------- | ---------------------- | ----------- |\n| `collapsed`           | `collapsed`             | When `true`, hides the component\'s content area.                                                           | `boolean`              | `false`     |\n| `detached`            | `detached`              | When `true`, the content area displays like a floating panel.                                              | `boolean`              | `false`     |\n| `detachedHeightScale` | `detached-height-scale` | When `detached`, specifies the maximum height of the component.                                            | `"l" \\| "m" \\| "s"`    | `"l"`       |\n| `messageOverrides`    | --                      | Use this property to override individual strings used by the component.                                    | `{ resize?: string; }` | `undefined` |\n| `position`            | `position`              | Specifies the component\'s position. Will be flipped when the element direction is right-to-left (`"rtl"`). | `"end" \\| "start"`     | `undefined` |\n| `resizable`           | `resizable`             | When `true` and not `detached`, the component\'s content area is resizable.                                 | `boolean`              | `false`     |\n| `widthScale`          | `width-scale`           | Specifies the width of the component\'s content area.                                                       | `"l" \\| "m" \\| "s"`    | `"m"`       |\n\n\n## Slots\n\n| Slot           | Description                                                |\n| -------------- | ---------------------------------------------------------- |\n|                | A slot for adding custom content.                          |\n| `"action-bar"` | A slot for adding a `calcite-action-bar` to the component. |\n\n\n## CSS Custom Properties\n\n| Name                                        | Description                                                  |\n| ------------------------------------------- | ------------------------------------------------------------ |\n| `--calcite-shell-panel-detached-max-height` | The maximum height of the component when `detached` is true. |\n| `--calcite-shell-panel-max-width`           | The maximum width of the component.                          |\n| `--calcite-shell-panel-min-width`           | The minimum width of the component.                          |\n| `--calcite-shell-panel-width`               | The width of the component.                                  |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n','# calcite-shell-center-row\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property      | Attribute      | Description                                                                                                | Type                | Default |\n| ------------- | -------------- | ---------------------------------------------------------------------------------------------------------- | ------------------- | ------- |\n| `detached`    | `detached`     | When `true`, the content area displays like a floating panel.                                              | `boolean`           | `false` |\n| `heightScale` | `height-scale` | Specifies the maximum height of the component.                                                             | `"l" \\| "m" \\| "s"` | `"s"`   |\n| `position`    | `position`     | Specifies the component\'s position. Will be flipped when the element direction is right-to-left (`"rtl"`). | `"end" \\| "start"`  | `"end"` |\n\n\n## Slots\n\n| Slot           | Description                                                            |\n| -------------- | ---------------------------------------------------------------------- |\n|                | A slot for adding content to the `calcite-shell-panel`.                |\n| `"action-bar"` | A slot for adding a `calcite-action-bar` to the `calcite-shell-panel`. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n']}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([],exceptions)}),createShellPanelAttributes=function(group){var resizable=arguments.length>1&&void 0!==arguments[1]&&arguments[1],position=resources.a.position;return[{name:"slot",value:"Leading Panel"===group?"panel-start":"panel-end"},{name:"collapsed",value:Object(dist.boolean)("collapsed",!1,group)},{name:"detached",value:Object(dist.boolean)("detached",!1,group)},{name:"position",value:Object(dist.select)("position",position.values,"Leading Panel"===group?position.values[0]:position.values[1],group)},{name:"resizable",value:Object(dist.boolean)("resizable",resizable,group)}]},createShellCenterRowAttributes=function(group){var position=resources.a.position,scale=resources.a.scale;return[{name:"detached",value:Object(dist.boolean)("detached",!1,group)},{name:"height-scale",value:Object(dist.select)("heightScale",scale.values,scale.values[0],group)},{name:"position",value:Object(dist.select)("position",position.values,position.values[1],group)},{name:"slot",value:"center-row"}]},actionBarStartContentHTML=formatting.a`
  <calcite-action-group>
    <calcite-action text="Add" label="Add Item" icon="plus"></calcite-action>
    <calcite-action text="Save" label="Save Item" icon="save"></calcite-action>
  </calcite-action-group>
  <calcite-action-group>
    <calcite-action text="Layers" label="View Layers" icon="layers"></calcite-action>
  </calcite-action-group>
`,actionBarEndContentHTML=formatting.a`
  <calcite-action-group>
    <calcite-action text="Idea" label="Add Item" icon="lightbulb"></calcite-action>
    <calcite-action text="Information" label="Save Item" icon="information"></calcite-action>
  </calcite-action-group>
  <calcite-action-group>
    <calcite-action text="Question" label="View Layers" icon="question"></calcite-action>
  </calcite-action-group>
`,actionBarStartHTML=formatting.a`
  <calcite-action-bar class="calcite-mode-dark" slot="action-bar"> ${actionBarStartContentHTML} </calcite-action-bar>
`,actionBarEndHTML=formatting.a`
  <calcite-action-bar slot="action-bar"> ${actionBarEndContentHTML} </calcite-action-bar>
`,leadingPanelHTML=formatting.a`
  ${actionBarStartHTML}
  <p>My Leading Panel</p>
`,centerRowHTML=formatting.a`
  <div
    style="
    width:50vw;
    background-color: var(--calcite-app-background-content);
    padding: var(--calcite-app-cap-spacing) var(--calcite-app-side-spacing);
    "
  >
    <span>My Shell Center Row</span>
  </div>
`,trailingPanelHTML=formatting.a`
  ${actionBarEndHTML}
  <p>My Trailing Panel</p>
`,headerHTML=formatting.a`
  <header slot="header">
    <h2>My Shell Header</h2>
  </header>
`,footerHTML='<footer slot="footer">My Shell Footer</footer>',contentHTML=formatting.a`
  <div
    style="
    width:100%;
    height:100%;
    background-image: linear-gradient(45deg, #ccc 25%, transparent 25%),
      linear-gradient(-45deg, #ccc 25%, transparent 25%),
      linear-gradient(45deg, transparent 75%, #ccc 75%),
      linear-gradient(-45deg, transparent 75%, #ccc 75%);
    background-size: 20px 20px;
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
  "
  ></div>
`,centerRowAdvancedHTML=formatting.a`
  <calcite-tip-manager slot="center-row">
    <calcite-tip-group group-title="Astronomy">
      <calcite-tip heading="The Red Rocks and Blue Water">
        <img slot="thumbnail" src="${Object(placeholderImage.a)({width:1e3,height:600})}" alt="This is an image." />
        <p>
          This tip is how a tip should really look. It has a landscape or square image and a small amount of text
          content. This paragraph is in an "info" slot.
        </p>
        <p>
          This is another paragraph in a subsequent "info" slot. In publishing and graphic design, Lorem ipsum is a
          placeholder text commonly used to demonstrate the visual form of a document without relying on meaningful
          content (also called greeking). Replacing the actual content with placeholder text allows designers to design
          the form of the content before the content itself has been produced.
        </p>
        <a href="http://www.esri.com">This is the "link" slot.</a>
      </calcite-tip>
      <calcite-tip heading="The Long Trees">
        <img slot="thumbnail" src="${Object(placeholderImage.a)({width:1e3,height:600})}" alt="This is an image." />
        <p>This tip has an image that is a pretty tall. And the text will run out before the end of the image.</p>
        <p>In astronomy, the terms object and body are often used interchangeably.</p>
        <a href="http://www.esri.com">View Esri</a>
      </calcite-tip>
    </calcite-tip-group>
    <calcite-tip heading="Square Nature">
      <img slot="thumbnail" src="${Object(placeholderImage.a)({width:1e3,height:1e3})}" alt="This is an image." />
      <p>This tip has an image that is square. And the text will run out before the end of the image.</p>
      <p>In astronomy, the terms object and body are often used interchangeably.</p>
      <p>
        In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form
        of a document without relying on meaningful content (also called greeking). Replacing the actual content with
        placeholder text allows designers to design the form of the content before the content itself has been produced.
      </p>
      <a href="http://www.esri.com">View Esri</a>
    </calcite-tip>
    <calcite-tip heading="The lack of imagery">
      <p>This tip has no image. As such, the content area will take up the entire width of the tip.</p>
      <p>
        This is the next paragraph and should show how wide the content area is now. Of course, the width of the overall
        tip will affect things. In astronomy, the terms object and body are often used interchangeably.
      </p>
      <a href="http://www.esri.com">View Esri</a>
    </calcite-tip>
  </calcite-tip-manager>
`,advancedLeadingPanelHTML=formatting.a`
  ${actionBarStartHTML}
  <calcite-block collapsible open heading="Start Content" summary="This is the primary.">
    <calcite-block-content>
      <calcite-action text="Play" text-enabled indicator icon="play"></calcite-action>
      <calcite-action text="Extent" text-enabled icon="extent"></calcite-action>
      <calcite-action text="Chart" text-enabled icon="arrow-up-right"></calcite-action>
    </calcite-block-content>
  </calcite-block>
  <calcite-block collapsible open heading="Another Block" summary="This is the primary.">
    <calcite-block-content>
      <div style="height: 300px;">
        <p>Cool thing.</p>
      </div>
    </calcite-block-content>
  </calcite-block>
  <calcite-block collapsible open heading="Additional Block" summary="This is the primary.">
    <calcite-block-content>
      <div style="height: 300px;">
        <p>Cool thing.</p>
      </div>
    </calcite-block-content>
  </calcite-block>
  <calcite-block collapsible open heading="More Block" summary="This is the primary.">
    <calcite-block-content>
      <div style="height: 300px;">
        <p>Cool thang.</p>
      </div>
    </calcite-block-content>
  </calcite-block>
`,advancedTrailingPanelHTMl=formatting.a`
  ${actionBarEndHTML}
  <calcite-flow>
    <calcite-flow-item heading="Layer settings">
      <calcite-action slot="header-menu-actions" text="Cool thing" text-enabled></calcite-action>
      <calcite-action slot="header-menu-actions" text="Cool thing" text-enabled></calcite-action>
      <calcite-action slot="header-menu-actions" text="Cool thing" text-enabled></calcite-action>
      <calcite-block collapsible open heading="End Content" summary="Select goodness">
        <calcite-block-content>
          <img alt="demo" src="${Object(placeholderImage.a)({width:640,height:480})}" width="100%" />
          <calcite-block-section text="Cool things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
          <calcite-block-section text="Neat things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
        </calcite-block-content>
      </calcite-block>
      <calcite-button slot="footer-actions" width="half" appearance="outline">Cancel</calcite-button>
      <calcite-button slot="footer-actions" width="half">Save</calcite-button>
    </calcite-flow-item>
    <calcite-flow-item heading="Deeper flow item">
      <calcite-block collapsible open heading="End Content" summary="Select goodness">
        <calcite-block-content>
          <calcite-block-section text="Cool things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
          <img alt="demo" src="${Object(placeholderImage.a)({width:640,height:480})}" width="100%" />
          <calcite-block-section text="Neat things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
        </calcite-block-content>
      </calcite-block>
      <calcite-block collapsible open heading="Even more content" summary="Select goodness">
        <calcite-block-content>
          <calcite-block-section text="Cool things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
          <img alt="demo" src="${Object(placeholderImage.a)({width:640,height:480})}" width="100%" />
          <calcite-block-section text="Neat things">
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
            <calcite-action text="Cool thing" text-enabled></calcite-action>
          </calcite-block-section>
        </calcite-block-content>
      </calcite-block>
      <calcite-button slot="footer-actions" width="half" appearance="outline">Cancel</calcite-button>
      <calcite-button slot="footer-actions" width="half">Save</calcite-button>
    </calcite-flow-item>
  </calcite-flow>
`,simple=function(){return Object(utils.a)("calcite-shell",createAttributes(),formatting.a`
      ${headerHTML}
      ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Leading Panel",!0),advancedLeadingPanelHTML)}
      ${contentHTML} ${Object(utils.a)("calcite-shell-center-row",createShellCenterRowAttributes("Center Row"),centerRowHTML)}
      ${centerRowAdvancedHTML}
      ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Trailing Panel",!0),advancedTrailingPanelHTMl)}
      ${footerHTML}
    `)},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-shell",createAttributes({exceptions:["dir","class"]}).concat({name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}),formatting.a`
      ${headerHTML}
      ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Leading Panel"),advancedLeadingPanelHTML)}
      ${contentHTML} ${Object(utils.a)("calcite-shell-center-row",createShellCenterRowAttributes("Center Row"),centerRowHTML)}
      ${contentHTML} ${centerRowAdvancedHTML}
      ${Object(utils.a)("calcite-shell-panel",createShellPanelAttributes("Trailing Panel"),advancedTrailingPanelHTMl)}
      ${footerHTML}
    `)};darkModeRTL_TestOnly.parameters={modes:utils.e};var closedPanels=function(){return formatting.a`<calcite-shell content-behind>
  <calcite-shell-panel slot="panel-start" detached>
    <calcite-action-bar slot="action-bar">
      <calcite-action data-action-id="layers" icon="layers" text="Layers"></calcite-action>
      <calcite-action data-action-id="basemaps" icon="basemap" text="Basemaps"></calcite-action>
      <calcite-action data-action-id="legend" icon="legend" text="Legend"></calcite-action>
      <calcite-action data-action-id="bookmarks" icon="bookmark" text="Bookmarks"></calcite-action>
      <calcite-action data-action-id="print" icon="print" text="Print"></calcite-action>
    </calcite-action-bar>
    <calcite-panel heading="Layers" height-scale="l" data-panel-id="layers" closable closed>
      <div id="layers-container"></div>
    </calcite-panel>
    <calcite-panel heading="Basemaps" height-scale="l" data-panel-id="basemaps" closable closed>
      <div id="basemaps-container"></div>
    </calcite-panel>
    <calcite-panel heading="Legend" height-scale="l" data-panel-id="legend" closable closed>
      <div id="legend-container"></div>
    </calcite-panel>
    <calcite-panel heading="Bookmarks" height-scale="l" data-panel-id="bookmarks" closable closed>
      <div id="bookmarks-container"></div>
    </calcite-panel>
    <calcite-panel heading="Print" height-scale="l" data-panel-id="print" closable closed>
      <div id="print-container"></div>
    </calcite-panel>
  </calcite-shell-panel>
</calcite-shell>`},endPanelOnly=function(){return formatting.a`<calcite-shell content-behind>
    <header slot="header">
      <h2>My Shell Header</h2>
    </header>
    <div
      style="
width:100%;
height:100%;
background-image: linear-gradient(45deg, #ccc 25%, transparent 25%),
  linear-gradient(-45deg, #ccc 25%, transparent 25%),
  linear-gradient(45deg, transparent 75%, #ccc 75%),
  linear-gradient(-45deg, transparent 75%, #ccc 75%);
background-size: 20px 20px;
background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
"
    ></div>
    <calcite-shell-panel slot="panel-end" position="end" detached>
      <calcite-action-bar slot="action-bar">
        <calcite-action-group layout="vertical">
          <calcite-action text="Idea" label="Add Item" icon="lightbulb" appearance="solid" scale="m"></calcite-action>
          <calcite-action
            text="Information"
            label="Save Item"
            icon="information"
            appearance="solid"
            scale="m"
          ></calcite-action>
        </calcite-action-group>
        <calcite-action-group layout="vertical">
          <calcite-action
            text="Question"
            label="View Layers"
            icon="question"
            appearance="solid"
            scale="m"
          ></calcite-action>
        </calcite-action-group>
      </calcite-action-bar>
      <calcite-flow>
        <calcite-flow-item heading="Layer settings">
          <calcite-action
            slot="header-menu-actions"
            text="Cool thing"
            text-enabled
            appearance="solid"
            scale="m"
          ></calcite-action>
          <calcite-action
            slot="header-menu-actions"
            text="Cool thing"
            text-enabled
            appearance="solid"
            scale="m"
          ></calcite-action>
          <calcite-action
            slot="header-menu-actions"
            text="Cool thing"
            text-enabled
            appearance="solid"
            scale="m"
          ></calcite-action>
          <calcite-block collapsible open heading="End Content" summary="Select goodness">
            <calcite-block-content>
              <img
                alt="demo"
                src="data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22640%22%20height%3D%22480%22%20viewBox%3D%220%200%20640%20480%22%3E%20%3Crect%20fill%3D%22%23ddd%22%20width%3D%22640%22%20height%3D%22480%22%2F%3E%20%3Ctext%20fill%3D%22rgba%280%2C0%2C0%2C0.5%29%22%20font-family%3D%22sans-serif%22%20font-size%3D%2296%22%20dy%3D%2233.599999999999994%22%20font-weight%3D%22bold%22%20x%3D%2250%25%22%20y%3D%2250%25%22%20text-anchor%3D%22middle%22%3E640%C3%97480%3C%2Ftext%3E%20%3C%2Fsvg%3E"
                width="100%"
              />
              <calcite-block-section text="Cool things" toggle-display="button">
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
              </calcite-block-section>
              <calcite-block-section text="Neat things" toggle-display="button">
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
              </calcite-block-section>
            </calcite-block-content>
          </calcite-block>
          <calcite-button
            slot="footer-actions"
            width="half"
            appearance="outline"
            alignment="center"
            kind="brand"
            scale="m"
          >
            Cancel
          </calcite-button>
          <calcite-button
            slot="footer-actions"
            width="half"
            alignment="center"
            appearance="solid"
            kind="brand"
            scale="m"
          >
            Save
          </calcite-button>
        </calcite-flow-item>
        <calcite-flow-item heading="Deeper flow item" show-back-button>
          <calcite-block collapsible open heading="End Content" summary="Select goodness">
            <calcite-block-content>
              <calcite-block-section text="Cool things" toggle-display="button">
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
              </calcite-block-section>
              <img
                alt="demo"
                src="data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22640%22%20height%3D%22480%22%20viewBox%3D%220%200%20640%20480%22%3E%20%3Crect%20fill%3D%22%23ddd%22%20width%3D%22640%22%20height%3D%22480%22%2F%3E%20%3Ctext%20fill%3D%22rgba%280%2C0%2C0%2C0.5%29%22%20font-family%3D%22sans-serif%22%20font-size%3D%2296%22%20dy%3D%2233.599999999999994%22%20font-weight%3D%22bold%22%20x%3D%2250%25%22%20y%3D%2250%25%22%20text-anchor%3D%22middle%22%3E640%C3%97480%3C%2Ftext%3E%20%3C%2Fsvg%3E"
                width="100%"
              />
              <calcite-block-section text="Neat things" toggle-display="button">
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
              </calcite-block-section>
            </calcite-block-content>
          </calcite-block>
          <calcite-block collapsible open heading="Even more content" summary="Select goodness">
            <calcite-block-content>
              <calcite-block-section text="Cool things" toggle-display="button">
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
              </calcite-block-section>
              <img
                alt="demo"
                src="data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22640%22%20height%3D%22480%22%20viewBox%3D%220%200%20640%20480%22%3E%20%3Crect%20fill%3D%22%23ddd%22%20width%3D%22640%22%20height%3D%22480%22%2F%3E%20%3Ctext%20fill%3D%22rgba%280%2C0%2C0%2C0.5%29%22%20font-family%3D%22sans-serif%22%20font-size%3D%2296%22%20dy%3D%2233.599999999999994%22%20font-weight%3D%22bold%22%20x%3D%2250%25%22%20y%3D%2250%25%22%20text-anchor%3D%22middle%22%3E640%C3%97480%3C%2Ftext%3E%20%3C%2Fsvg%3E"
                width="100%"
              />
              <calcite-block-section text="Neat things" toggle-display="button">
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>
              </calcite-block-section>
            </calcite-block-content>
          </calcite-block>
          <calcite-button
            slot="footer-actions"
            width="half"
            appearance="outline"
            alignment="center"
            kind="brand"
            scale="m"
          >
            Cancel
          </calcite-button>
          <calcite-button
            slot="footer-actions"
            width="half"
            alignment="center"
            appearance="solid"
            kind="brand"
            scale="m"
          >
            Save
          </calcite-button>
        </calcite-flow-item>
      </calcite-flow>
    </calcite-shell-panel>
    <footer slot="footer">My Shell Footer</footer>
  </calcite-shell>`},slottedModalAndAlert=function(){return formatting.a` <main>
  <p class="padded-content">
    <calcite-notice width="full" open><span slot="title">Other page content outside of shell</span></calcite-notice>
    Master cleanse occupy lo-fi meh. Green juice williamsburg XOXO man bun ascot fit. Knausgaard heirloom four dollar
    toast DSA chicharrones, typewriter chia raw denim. Bicycle rights mustache humblebrag, mixtape slow-carb retro
    vibecession franzen chia. Bespoke coloring book hot chicken literally bushwick succulents wayfarers. Dreamcatcher
    taiyaki celiac pork belly migas, fashion axe beard shabby chic. Forage chia twee bushwick readymade yuccie praxis
    enamel pin cred mukbang bicycle rights VHS iPhone pour-over subway tile.
  </p>
  <calcite-shell
    style="
    width:100%;
    height:500px;
    max-height:80%;
    position:relative;
    "
  >
    <div class="gnav" slot="header">Header Example</div>
    <calcite-modal open slot="modals" docked><span slot="header">Modal slotted in Shell</span></calcite-modal>
    <calcite-alert open slot="alerts" placement="top-end"
      ><span slot="title">Alert slotted in Shell</span>
    </calcite-alert>
    <calcite-shell-panel id="primary-panel" slot="panel-start" position="start">
      <calcite-action-bar slot="action-bar">
        <calcite-action-group>
          <calcite-action text="Save" icon="save" indicator> </calcite-action>
          <calcite-action text-enabled icon="map" text="New" slot="menu-actions"> </calcite-action>
          <calcite-action text-enabled icon="collection" text="Open" slot="menu-actions"> </calcite-action>
        </calcite-action-group>
        <calcite-action-group>
          <calcite-action icon="layers" text="Layers" active> </calcite-action>
          <calcite-action icon="basemap" text="Basemaps"> </calcite-action>
          <calcite-action icon="legend" text="Legend"> </calcite-action>
          <calcite-action icon="bookmark" text="Bookmarks"> </calcite-action>
        </calcite-action-group>
      </calcite-action-bar>
      <calcite-panel heading="Panel">
        <div class="padded-content">Panel content<br />Padding is fake.</div>
      </calcite-panel>
    </calcite-shell-panel>

    <calcite-shell-panel slot="panel-end" position="end">
      <calcite-action-bar slot="action-bar">
        <calcite-tooltip slot="expand-tooltip" label="tooltip" disable-pointer>Add layers</calcite-tooltip>
        <calcite-action-group>
          <calcite-action text="Layer properties" icon="sliders-horizontal"> </calcite-action>
          <calcite-action text="Styles" icon="shapes"> </calcite-action>
          <calcite-action text="Filter" icon="layer-filter"> </calcite-action>
          <calcite-action text="Configure pop-ups" icon="popup" active> </calcite-action>
          <calcite-action text-enabled text="Configure attributes" icon="feature-details" slot="menu-actions">
          </calcite-action>
          <calcite-action text-enabled text="Labels" icon="label" slot="menu-actions"> </calcite-action>
          <calcite-action text-enabled text="Tablew" icon="table" slot="menu-actions"> </calcite-action>
        </calcite-action-group>
      </calcite-action-bar>
      <calcite-flow>
        <calcite-flow-item heading="Flow 01">
          <div class="padded-content">Flow 01 content<br />Padding is fake.</div>
        </calcite-flow-item>
        <calcite-flow-item heading="Flow 02">
          <div class="padded-content">Flow 02 content<br />Padding is fake.</div>
        </calcite-flow-item>
      </calcite-flow>
    </calcite-shell-panel>

    <calcite-panel heading="Main content">
      <div class="padded-content">The borders are only applied to "known" components.<br />Padding is fake.</div>
    </calcite-panel>
    <footer slot="footer">Footer Example</footer>
  </calcite-shell>
  <p class="padded-content">
    <calcite-notice width="full" open><span slot="title">Notice outside of shell</span></calcite-notice>
    Edison bulb iceland narwhal fit DSA. Activated charcoal dreamcatcher shabby chic, microdosing gluten-free locavore
    chambray tumblr hella sus ugh cronut tofu. Vibecession air plant etsy, vape church-key narwhal activated charcoal
    offal kombucha hella. Actually mumblecore butcher, iceland man bun prism blog taiyaki roof party portland hashtag.
  </p>
</main>`},contentBehind=function(){return formatting.a`<calcite-shell content-behind>
  ${headerHTML}
  <calcite-shell-panel slot="panel-start">${leadingPanelHTML}</calcite-shell-panel>
  ${contentHTML}
  <calcite-shell-center-row slot="center-row">${centerRowHTML}</calcite-shell-center-row>
  <calcite-shell-panel slot="panel-end">${trailingPanelHTML}</calcite-shell-panel>
  ${footerHTML}
</calcite-shell>`};simple.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-shell",\n    createAttributes(),\n    html`\n      ${headerHTML}\n      ${create("calcite-shell-panel", createShellPanelAttributes("Leading Panel", true), advancedLeadingPanelHTML)}\n      ${contentHTML} ${create("calcite-shell-center-row", createShellCenterRowAttributes("Center Row"), centerRowHTML)}\n      ${centerRowAdvancedHTML}\n      ${create("calcite-shell-panel", createShellPanelAttributes("Trailing Panel", true), advancedTrailingPanelHTMl)}\n      ${footerHTML}\n    `\n  )'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-shell",\n    createAttributes({ exceptions: ["dir", "class"] }).concat(\n      { name: "dir", value: "rtl" },\n      { name: "class", value: "calcite-mode-dark" }\n    ),\n    html`\n      ${headerHTML}\n      ${create("calcite-shell-panel", createShellPanelAttributes("Leading Panel"), advancedLeadingPanelHTML)}\n      ${contentHTML} ${create("calcite-shell-center-row", createShellCenterRowAttributes("Center Row"), centerRowHTML)}\n      ${contentHTML} ${centerRowAdvancedHTML}\n      ${create("calcite-shell-panel", createShellPanelAttributes("Trailing Panel"), advancedTrailingPanelHTMl)}\n      ${footerHTML}\n    `\n  )'}},darkModeRTL_TestOnly.parameters),closedPanels.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-shell content-behind>\n  <calcite-shell-panel slot="panel-start" detached>\n    <calcite-action-bar slot="action-bar">\n      <calcite-action data-action-id="layers" icon="layers" text="Layers"></calcite-action>\n      <calcite-action data-action-id="basemaps" icon="basemap" text="Basemaps"></calcite-action>\n      <calcite-action data-action-id="legend" icon="legend" text="Legend"></calcite-action>\n      <calcite-action data-action-id="bookmarks" icon="bookmark" text="Bookmarks"></calcite-action>\n      <calcite-action data-action-id="print" icon="print" text="Print"></calcite-action>\n    </calcite-action-bar>\n    <calcite-panel heading="Layers" height-scale="l" data-panel-id="layers" closable closed>\n      <div id="layers-container"></div>\n    </calcite-panel>\n    <calcite-panel heading="Basemaps" height-scale="l" data-panel-id="basemaps" closable closed>\n      <div id="basemaps-container"></div>\n    </calcite-panel>\n    <calcite-panel heading="Legend" height-scale="l" data-panel-id="legend" closable closed>\n      <div id="legend-container"></div>\n    </calcite-panel>\n    <calcite-panel heading="Bookmarks" height-scale="l" data-panel-id="bookmarks" closable closed>\n      <div id="bookmarks-container"></div>\n    </calcite-panel>\n    <calcite-panel heading="Print" height-scale="l" data-panel-id="print" closable closed>\n      <div id="print-container"></div>\n    </calcite-panel>\n  </calcite-shell-panel>\n</calcite-shell>`'}},closedPanels.parameters),endPanelOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-shell content-behind>\n    <header slot="header">\n      <h2>My Shell Header</h2>\n    </header>\n    <div\n      style="\nwidth:100%;\nheight:100%;\nbackground-image: linear-gradient(45deg, #ccc 25%, transparent 25%),\n  linear-gradient(-45deg, #ccc 25%, transparent 25%),\n  linear-gradient(45deg, transparent 75%, #ccc 75%),\n  linear-gradient(-45deg, transparent 75%, #ccc 75%);\nbackground-size: 20px 20px;\nbackground-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n"\n    ></div>\n    <calcite-shell-panel slot="panel-end" position="end" detached>\n      <calcite-action-bar slot="action-bar">\n        <calcite-action-group layout="vertical">\n          <calcite-action text="Idea" label="Add Item" icon="lightbulb" appearance="solid" scale="m"></calcite-action>\n          <calcite-action\n            text="Information"\n            label="Save Item"\n            icon="information"\n            appearance="solid"\n            scale="m"\n          ></calcite-action>\n        </calcite-action-group>\n        <calcite-action-group layout="vertical">\n          <calcite-action\n            text="Question"\n            label="View Layers"\n            icon="question"\n            appearance="solid"\n            scale="m"\n          ></calcite-action>\n        </calcite-action-group>\n      </calcite-action-bar>\n      <calcite-flow>\n        <calcite-flow-item heading="Layer settings">\n          <calcite-action\n            slot="header-menu-actions"\n            text="Cool thing"\n            text-enabled\n            appearance="solid"\n            scale="m"\n          ></calcite-action>\n          <calcite-action\n            slot="header-menu-actions"\n            text="Cool thing"\n            text-enabled\n            appearance="solid"\n            scale="m"\n          ></calcite-action>\n          <calcite-action\n            slot="header-menu-actions"\n            text="Cool thing"\n            text-enabled\n            appearance="solid"\n            scale="m"\n          ></calcite-action>\n          <calcite-block collapsible open heading="End Content" summary="Select goodness">\n            <calcite-block-content>\n              <img\n                alt="demo"\n                src="data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22640%22%20height%3D%22480%22%20viewBox%3D%220%200%20640%20480%22%3E%20%3Crect%20fill%3D%22%23ddd%22%20width%3D%22640%22%20height%3D%22480%22%2F%3E%20%3Ctext%20fill%3D%22rgba%280%2C0%2C0%2C0.5%29%22%20font-family%3D%22sans-serif%22%20font-size%3D%2296%22%20dy%3D%2233.599999999999994%22%20font-weight%3D%22bold%22%20x%3D%2250%25%22%20y%3D%2250%25%22%20text-anchor%3D%22middle%22%3E640%C3%97480%3C%2Ftext%3E%20%3C%2Fsvg%3E"\n                width="100%"\n              />\n              <calcite-block-section text="Cool things" toggle-display="button">\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n              </calcite-block-section>\n              <calcite-block-section text="Neat things" toggle-display="button">\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n              </calcite-block-section>\n            </calcite-block-content>\n          </calcite-block>\n          <calcite-button\n            slot="footer-actions"\n            width="half"\n            appearance="outline"\n            alignment="center"\n            kind="brand"\n            scale="m"\n          >\n            Cancel\n          </calcite-button>\n          <calcite-button\n            slot="footer-actions"\n            width="half"\n            alignment="center"\n            appearance="solid"\n            kind="brand"\n            scale="m"\n          >\n            Save\n          </calcite-button>\n        </calcite-flow-item>\n        <calcite-flow-item heading="Deeper flow item" show-back-button>\n          <calcite-block collapsible open heading="End Content" summary="Select goodness">\n            <calcite-block-content>\n              <calcite-block-section text="Cool things" toggle-display="button">\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n              </calcite-block-section>\n              <img\n                alt="demo"\n                src="data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22640%22%20height%3D%22480%22%20viewBox%3D%220%200%20640%20480%22%3E%20%3Crect%20fill%3D%22%23ddd%22%20width%3D%22640%22%20height%3D%22480%22%2F%3E%20%3Ctext%20fill%3D%22rgba%280%2C0%2C0%2C0.5%29%22%20font-family%3D%22sans-serif%22%20font-size%3D%2296%22%20dy%3D%2233.599999999999994%22%20font-weight%3D%22bold%22%20x%3D%2250%25%22%20y%3D%2250%25%22%20text-anchor%3D%22middle%22%3E640%C3%97480%3C%2Ftext%3E%20%3C%2Fsvg%3E"\n                width="100%"\n              />\n              <calcite-block-section text="Neat things" toggle-display="button">\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n              </calcite-block-section>\n            </calcite-block-content>\n          </calcite-block>\n          <calcite-block collapsible open heading="Even more content" summary="Select goodness">\n            <calcite-block-content>\n              <calcite-block-section text="Cool things" toggle-display="button">\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n              </calcite-block-section>\n              <img\n                alt="demo"\n                src="data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22640%22%20height%3D%22480%22%20viewBox%3D%220%200%20640%20480%22%3E%20%3Crect%20fill%3D%22%23ddd%22%20width%3D%22640%22%20height%3D%22480%22%2F%3E%20%3Ctext%20fill%3D%22rgba%280%2C0%2C0%2C0.5%29%22%20font-family%3D%22sans-serif%22%20font-size%3D%2296%22%20dy%3D%2233.599999999999994%22%20font-weight%3D%22bold%22%20x%3D%2250%25%22%20y%3D%2250%25%22%20text-anchor%3D%22middle%22%3E640%C3%97480%3C%2Ftext%3E%20%3C%2Fsvg%3E"\n                width="100%"\n              />\n              <calcite-block-section text="Neat things" toggle-display="button">\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n                <calcite-action text="Cool thing" text-enabled appearance="solid" scale="m"></calcite-action>\n              </calcite-block-section>\n            </calcite-block-content>\n          </calcite-block>\n          <calcite-button\n            slot="footer-actions"\n            width="half"\n            appearance="outline"\n            alignment="center"\n            kind="brand"\n            scale="m"\n          >\n            Cancel\n          </calcite-button>\n          <calcite-button\n            slot="footer-actions"\n            width="half"\n            alignment="center"\n            appearance="solid"\n            kind="brand"\n            scale="m"\n          >\n            Save\n          </calcite-button>\n        </calcite-flow-item>\n      </calcite-flow>\n    </calcite-shell-panel>\n    <footer slot="footer">My Shell Footer</footer>\n  </calcite-shell>`'}},endPanelOnly.parameters),slottedModalAndAlert.parameters=Object.assign({storySource:{source:'(): string => html` <main>\n  <p class="padded-content">\n    <calcite-notice width="full" open><span slot="title">Other page content outside of shell</span></calcite-notice>\n    Master cleanse occupy lo-fi meh. Green juice williamsburg XOXO man bun ascot fit. Knausgaard heirloom four dollar\n    toast DSA chicharrones, typewriter chia raw denim. Bicycle rights mustache humblebrag, mixtape slow-carb retro\n    vibecession franzen chia. Bespoke coloring book hot chicken literally bushwick succulents wayfarers. Dreamcatcher\n    taiyaki celiac pork belly migas, fashion axe beard shabby chic. Forage chia twee bushwick readymade yuccie praxis\n    enamel pin cred mukbang bicycle rights VHS iPhone pour-over subway tile.\n  </p>\n  <calcite-shell\n    style="\n    width:100%;\n    height:500px;\n    max-height:80%;\n    position:relative;\n    "\n  >\n    <div class="gnav" slot="header">Header Example</div>\n    <calcite-modal open slot="modals" docked><span slot="header">Modal slotted in Shell</span></calcite-modal>\n    <calcite-alert open slot="alerts" placement="top-end"\n      ><span slot="title">Alert slotted in Shell</span>\n    </calcite-alert>\n    <calcite-shell-panel id="primary-panel" slot="panel-start" position="start">\n      <calcite-action-bar slot="action-bar">\n        <calcite-action-group>\n          <calcite-action text="Save" icon="save" indicator> </calcite-action>\n          <calcite-action text-enabled icon="map" text="New" slot="menu-actions"> </calcite-action>\n          <calcite-action text-enabled icon="collection" text="Open" slot="menu-actions"> </calcite-action>\n        </calcite-action-group>\n        <calcite-action-group>\n          <calcite-action icon="layers" text="Layers" active> </calcite-action>\n          <calcite-action icon="basemap" text="Basemaps"> </calcite-action>\n          <calcite-action icon="legend" text="Legend"> </calcite-action>\n          <calcite-action icon="bookmark" text="Bookmarks"> </calcite-action>\n        </calcite-action-group>\n      </calcite-action-bar>\n      <calcite-panel heading="Panel">\n        <div class="padded-content">Panel content<br />Padding is fake.</div>\n      </calcite-panel>\n    </calcite-shell-panel>\n\n    <calcite-shell-panel slot="panel-end" position="end">\n      <calcite-action-bar slot="action-bar">\n        <calcite-tooltip slot="expand-tooltip" label="tooltip" disable-pointer>Add layers</calcite-tooltip>\n        <calcite-action-group>\n          <calcite-action text="Layer properties" icon="sliders-horizontal"> </calcite-action>\n          <calcite-action text="Styles" icon="shapes"> </calcite-action>\n          <calcite-action text="Filter" icon="layer-filter"> </calcite-action>\n          <calcite-action text="Configure pop-ups" icon="popup" active> </calcite-action>\n          <calcite-action text-enabled text="Configure attributes" icon="feature-details" slot="menu-actions">\n          </calcite-action>\n          <calcite-action text-enabled text="Labels" icon="label" slot="menu-actions"> </calcite-action>\n          <calcite-action text-enabled text="Tablew" icon="table" slot="menu-actions"> </calcite-action>\n        </calcite-action-group>\n      </calcite-action-bar>\n      <calcite-flow>\n        <calcite-flow-item heading="Flow 01">\n          <div class="padded-content">Flow 01 content<br />Padding is fake.</div>\n        </calcite-flow-item>\n        <calcite-flow-item heading="Flow 02">\n          <div class="padded-content">Flow 02 content<br />Padding is fake.</div>\n        </calcite-flow-item>\n      </calcite-flow>\n    </calcite-shell-panel>\n\n    <calcite-panel heading="Main content">\n      <div class="padded-content">The borders are only applied to "known" components.<br />Padding is fake.</div>\n    </calcite-panel>\n    <footer slot="footer">Footer Example</footer>\n  </calcite-shell>\n  <p class="padded-content">\n    <calcite-notice width="full" open><span slot="title">Notice outside of shell</span></calcite-notice>\n    Edison bulb iceland narwhal fit DSA. Activated charcoal dreamcatcher shabby chic, microdosing gluten-free locavore\n    chambray tumblr hella sus ugh cronut tofu. Vibecession air plant etsy, vape church-key narwhal activated charcoal\n    offal kombucha hella. Actually mumblecore butcher, iceland man bun prism blog taiyaki roof party portland hashtag.\n  </p>\n</main>`'}},slottedModalAndAlert.parameters),contentBehind.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-shell content-behind>\n  ${headerHTML}\n  <calcite-shell-panel slot="panel-start">${leadingPanelHTML}</calcite-shell-panel>\n  ${contentHTML}\n  <calcite-shell-center-row slot="center-row">${centerRowHTML}</calcite-shell-center-row>\n  <calcite-shell-panel slot="panel-end">${trailingPanelHTML}</calcite-shell-panel>\n  ${footerHTML}\n</calcite-shell>`'}},contentBehind.parameters)},"./src/components/slider/readme.md":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.a='# calcite-slider\n\nRange selection component for selecting single or multiple numeric values inside a given range.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-slider min="1" max="100" value="50" step="1"></calcite-slider>\n```\n\n\n### Two-handles\n\nIf you\'d like to allow an upper and lower value selection (two handles), you can set `min-value` and `max-value` rather than `value`. Note: these are mutually exclusive.\n\n```html\n<calcite-slider\n  min="1"\n  max="100"\n  min-value="50"\n  max-value="85"\n  step="1"\n  min-label="Temperature (lower)"\n  max-label="Temperature (upper)"\n></calcite-slider>\n```\n\n\n\n## Properties\n\n| Property          | Attribute          | Description                                                                                                                                                | Type                                                                                                                                                                                                                                    | Default     |\n| ----------------- | ------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `disabled`        | `disabled`         | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                   | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `form`            | `form`             | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any. | `string`                                                                                                                                                                                                                                | `undefined` |\n| `groupSeparator`  | `group-separator`  | When `true`, number values are displayed with a group separator corresponding to the language and country format.                                          | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `hasHistogram`    | `has-histogram`    | When `true`, indicates a histogram is present.                                                                                                             | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `histogram`       | --                 | A list of the histogram\'s x,y coordinates within the component\'s `min` and `max`. Displays above the component\'s track.                                    | `Point[]`                                                                                                                                                                                                                               | `undefined` |\n| `histogramStops`  | --                 | A set of single color stops for a histogram, sorted by offset ascending.                                                                                   | `ColorStop[]`                                                                                                                                                                                                                           | `undefined` |\n| `labelHandles`    | `label-handles`    | When `true`, displays label handles with their numeric value.                                                                                              | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `labelTicks`      | `label-ticks`      | When `true` and `ticks` is specified, displays label tick marks with their numeric value.                                                                  | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `max`             | `max`              | The component\'s maximum selectable value.                                                                                                                  | `number`                                                                                                                                                                                                                                | `100`       |\n| `maxLabel`        | `max-label`        | For multiple selections, the accessible name for the second handle, such as `"Temperature, upper bound"`.                                                  | `string`                                                                                                                                                                                                                                | `undefined` |\n| `maxValue`        | `max-value`        | For multiple selections, the component\'s upper value.                                                                                                      | `number`                                                                                                                                                                                                                                | `undefined` |\n| `min`             | `min`              | The component\'s minimum selectable value.                                                                                                                  | `number`                                                                                                                                                                                                                                | `0`         |\n| `minLabel`        | `min-label`        | Accessible name for first (or only) handle, such as `"Temperature, lower bound"`.                                                                          | `string`                                                                                                                                                                                                                                | `undefined` |\n| `minValue`        | `min-value`        | For multiple selections, the component\'s lower value.                                                                                                      | `number`                                                                                                                                                                                                                                | `undefined` |\n| `mirrored`        | `mirrored`         | When `true`, the slider will display values from high to low.  Note that this value will be ignored if the slider has an associated histogram.             | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `name`            | `name`             | Specifies the name of the component.  Required to pass the component\'s `value` on form submission.                                                         | `string`                                                                                                                                                                                                                                | `undefined` |\n| `numberingSystem` | `numbering-system` | Specifies the Unicode numeral system used by the component for localization.                                                                               | `"arab" \\| "arabext" \\| "bali" \\| "beng" \\| "deva" \\| "fullwide" \\| "gujr" \\| "guru" \\| "hanidec" \\| "khmr" \\| "knda" \\| "laoo" \\| "latn" \\| "limb" \\| "mlym" \\| "mong" \\| "mymr" \\| "orya" \\| "tamldec" \\| "telu" \\| "thai" \\| "tibt"` | `undefined` |\n| `pageStep`        | `page-step`        | Specifies the interval to move with the page up, or page down keys.                                                                                        | `number`                                                                                                                                                                                                                                | `undefined` |\n| `precise`         | `precise`          | When `true`, sets a finer point for handles.                                                                                                               | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `required`        | `required`         | When `true`, the component must have a value in order for the form to submit.                                                                              | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `scale`           | `scale`            | Specifies the size of the component.                                                                                                                       | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                     | `"m"`       |\n| `snap`            | `snap`             | When `true`, enables snap selection in coordination with `step` via a mouse.                                                                               | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `step`            | `step`             | Specifies the interval to move with the up, or down keys.                                                                                                  | `number`                                                                                                                                                                                                                                | `1`         |\n| `ticks`           | `ticks`            | Displays tick marks on the number line at a specified interval.                                                                                            | `number`                                                                                                                                                                                                                                | `undefined` |\n| `value`           | `value`            | The component\'s value.                                                                                                                                     | `number \\| number[]`                                                                                                                                                                                                                    | `0`         |\n\n\n## Events\n\n| Event                 | Description                                                                                                                                                                                                       | Type                |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- |\n| `calciteSliderChange` | Fires when the thumb is released on the component.  **Note:** If you need to constantly listen to the drag event, use `calciteSliderInput` instead.                                                               | `CustomEvent<void>` |\n| `calciteSliderInput`  | Fires on all updates to the component.  **Note:** Will be fired frequently during drag. If you are performing any expensive operations consider using a debounce or throttle to avoid locking up the main thread. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-graph](../graph)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-slider --\x3e calcite-graph\n  style calcite-slider fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'},"./src/components/slider/slider.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(process){__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"range",(function(){return range})),__webpack_require__.d(__webpack_exports__,"darkModeMirroredRange_TestOnly",(function(){return darkModeMirroredRange_TestOnly})),__webpack_require__.d(__webpack_exports__,"rangeLabeledTicks_TestOnly",(function(){return rangeLabeledTicks_TestOnly})),__webpack_require__.d(__webpack_exports__,"rangeLabeledTicksOverlappingAtMax_TestOnly",(function(){return rangeLabeledTicksOverlappingAtMax_TestOnly})),__webpack_require__.d(__webpack_exports__,"rangeLabeledTicksOverlappingAtMin_TestOnly",(function(){return rangeLabeledTicksOverlappingAtMin_TestOnly})),__webpack_require__.d(__webpack_exports__,"rangeLabeledTicksEdgePositioningAtMax_TestOnly",(function(){return rangeLabeledTicksEdgePositioningAtMax_TestOnly})),__webpack_require__.d(__webpack_exports__,"rangeLabeledTicksEdgePositioningAtMin_TestOnly",(function(){return rangeLabeledTicksEdgePositioningAtMin_TestOnly})),__webpack_require__.d(__webpack_exports__,"Histogram",(function(){return Histogram})),__webpack_require__.d(__webpack_exports__,"HistogramWithColors",(function(){return HistogramWithColors})),__webpack_require__.d(__webpack_exports__,"darkModeHistogramRTL_TestOnly",(function(){return darkModeHistogramRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"wordBreakDoesNotAffectLabels_TestOnly",(function(){return wordBreakDoesNotAffectLabels_TestOnly})),__webpack_require__.d(__webpack_exports__,"WithLabelHandlesAndNoValue_TestOnly",(function(){return WithLabelHandlesAndNoValue_TestOnly})),__webpack_require__.d(__webpack_exports__,"WithLargeFontSize_TestOnly",(function(){return WithLargeFontSize_TestOnly}));var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/helpers.ts"),_storybook_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./.storybook/utils.tsx"),_support_formatting__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./support/formatting.ts"),_readme_md__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/slider/readme.md");__webpack_exports__.default=Object.assign({title:"Components/Controls/Slider",parameters:{notes:_readme_md__WEBPACK_IMPORTED_MODULE_4__.a,chromatic:{diffThreshold:Number(process.env.CHROMATIC_DIFF_THRESHOLD)||.3,delay:500}}},Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.c)());var simple=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a`
  <calcite-slider
    min="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min",0)}"
    max="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max",100)}"
    value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("value",50)}"
    step="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("step",1)}"
    min-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("min-label","Temperature")}"
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("disabled",!1)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-handles",!1)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-ticks",!1)}
    ticks="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("ticks",0)}"
    page-step="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("page-step",5)}"
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("precise",!1)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("mirrored",!1)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("snap",!0)}
    scale="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.select)("scale",["s","m","l"],"m")}"
  ></calcite-slider>
`},range=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a`
  <calcite-slider
    min="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min",0)}"
    min-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min-value",25)}"
    max="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max",100)}"
    max-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max-value",75)}"
    step="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("step",1)}"
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-handles",!1)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-ticks",!1)}
    ticks="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("ticks",20)}"
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("precise",!1)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("snap",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("mirrored",!1)}
    scale="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.select)("scale",["s","m","l"],"m")}"
  ></calcite-slider>
`},darkModeMirroredRange_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a`
  <calcite-slider
    class="calcite-mode-dark"
    mirrored
    min="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min",0)}"
    min-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min-value",25)}"
    max="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max",100)}"
    max-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max-value",75)}"
    step="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("step",1)}"
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-handles",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-ticks",!0)}
    ticks="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("ticks",20)}"
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("precise",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("snap",!0)}
    scale="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.select)("scale",["s","m","l"],"m")}"
  ></calcite-slider>
`};darkModeMirroredRange_TestOnly.story={parameters:{modes:_storybook_utils__WEBPACK_IMPORTED_MODULE_2__.e}};var rangeLabeledTicks_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a`
  <calcite-slider
    min="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min",5)}"
    min-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min-value",95)}"
    max="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max",100)}"
    max-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max-value",100)}"
    step="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("step",10)}"
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-handles",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-ticks",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("precise",!1)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("snap",!0)}
  ></calcite-slider>
`};rangeLabeledTicks_TestOnly.parameters={chromatic:{diffThreshold:1}};var rangeLabeledTicksOverlappingAtMax_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a`
  <calcite-slider
    min="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min",5)}"
    min-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min-value",100)}"
    max="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max",100)}"
    max-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max-value",100)}"
    step="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("step",10)}"
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-handles",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-ticks",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("precise",!1)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("snap",!0)}
  ></calcite-slider>
`};rangeLabeledTicksOverlappingAtMax_TestOnly.parameters={chromatic:{diffThreshold:1}};var rangeLabeledTicksOverlappingAtMin_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a`
  <calcite-slider
    min="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min",5)}"
    min-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min-value",5)}"
    max="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max",100)}"
    max-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max-value",5)}"
    step="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("step",10)}"
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-handles",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-ticks",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("precise",!1)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("snap",!0)}
  ></calcite-slider>
`};rangeLabeledTicksOverlappingAtMin_TestOnly.parameters={chromatic:{diffThreshold:1}};var rangeLabeledTicksEdgePositioningAtMax_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a`
  <calcite-slider
    min="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min",5)}"
    min-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min-value",99.5)}"
    max="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max",100)}"
    max-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max-value",100)}"
    step="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("step",10)}"
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-handles",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-ticks",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("precise",!1)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("snap",!0)}
  ></calcite-slider>
`};rangeLabeledTicksEdgePositioningAtMax_TestOnly.parameters={chromatic:{diffThreshold:1}};var rangeLabeledTicksEdgePositioningAtMin_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a`
  <calcite-slider
    min="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min",5)}"
    min-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("min-label","Temperature, lower bound")}"
    min-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min-value",5)}"
    max="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max",100)}"
    max-label="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.text)("max-label","Temperature, upper bound")}"
    max-value="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max-value",5.5)}"
    step="${Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("step",10)}"
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-handles",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("label-ticks",!0)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("precise",!1)}
    ${Object(_storybook_helpers__WEBPACK_IMPORTED_MODULE_1__.a)("snap",!0)}
  ></calcite-slider>
`};rangeLabeledTicksEdgePositioningAtMin_TestOnly.parameters={chromatic:{diffThreshold:1}};var Histogram=function(){var slider=document.createElement("calcite-slider");return slider.min=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min",-100),slider.minValue=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min-value",-33.32),slider.max=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max",100),slider.maxValue=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max-value",30.87),slider.histogram=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.array)("histogram",[[-90,0],[-60,12],[-20,25],[20,55],[60,10],[90,0]],"  "),slider.labelHandles=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("label-handles",!1),slider.labelTicks=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("label-ticks",!1),slider.ticks=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("ticks",10),slider.precise=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("precise",!1),slider.snap=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("snap",!1),slider.scale=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.select)("scale",["s","m","l"],"m"),slider.style.minWidth="60vw",slider},HistogramWithColors=function(){var slider=document.createElement("calcite-slider");slider.min=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min",0),slider.minValue=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min-value",35),slider.max=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max",100),slider.maxValue=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max-value",55),slider.histogram=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.array)("histogram",[[0,0],[20,12],[40,25],[60,55],[80,10],[100,0]],"  "),slider.style.minWidth="60vw";var colors=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.array)("histogram colors",["red","green","blue"]),offsets=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.array)("histogram color offsets",colors.map((function(_,i){return""+1/(colors.length-1)*i})));return slider.histogramStops=colors.map((function(color,i){return{offset:parseFloat(offsets[i]),color:color}})),slider.scale=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.select)("scale",["s","m","l"],"m"),slider},darkModeHistogramRTL_TestOnly=function(){var slider=document.createElement("calcite-slider");return slider.min=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min",0),slider.minValue=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("min-value",25),slider.max=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max",100),slider.maxValue=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("max-value",75),slider.histogram=[[0,0],[20,12],[40,25],[60,55],[80,10],[100,0]],slider.labelHandles=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("label-handles",!1),slider.labelTicks=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("label-ticks",!1),slider.ticks=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.number)("ticks",10),slider.precise=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("precise",!1),slider.snap=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.boolean)("snap",!1),slider.scale=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.select)("scale",["s","m","l"],"m"),slider.style.minWidth="60vw",slider.className="calcite-mode-dark",slider};darkModeHistogramRTL_TestOnly.parameters={modes:_storybook_utils__WEBPACK_IMPORTED_MODULE_2__.e};var disabled_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a`<calcite-slider disabled value="5"></calcite-slider>`},wordBreakDoesNotAffectLabels_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a`<calcite-slider
    min="-100"
    max="100"
    min-value="-100"
    max-value="100"
    step="10"
    ticks="10"
    label-handles
    label-ticks
    style="word-break: break-all"
  ></calcite-slider>`},WithLabelHandlesAndNoValue_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a` <calcite-slider max="750"></calcite-slider> `},WithLargeFontSize_TestOnly=function(){return _support_formatting__WEBPACK_IMPORTED_MODULE_3__.a`<html lang="en">
  <head>
    <style>
      html {
        font-size: 24px;
      }
      calcite-label {
        padding: 10px;
      }
    </style>
  </head>
  <body>
    <div style="width: 400px; padding: 20px">
      <calcite-label>
        precise with label-handles
        <calcite-slider scale="s" min="10" max="100" value="50" step="10" precise label-handles></calcite-slider
      ></calcite-label>
      <calcite-label>
        precise with label-handles mirrored
        <calcite-slider
          scale="s"
          min="10"
          max="100"
          value="50"
          step="10"
          label-handles
          precise
          mirrored
        ></calcite-slider>
      </calcite-label>
      <calcite-label>
        precise with label-handles & label-ticks
        <calcite-slider
          min="0"
          max="100"
          value="40"
          step="10"
          ticks="10"
          scale="s"
          label-handles
          label-ticks
          precise
        ></calcite-slider>
      </calcite-label>
      <calcite-label>
        precise with label-handles & label-ticks mirrored
        <calcite-slider
          min="0"
          max="100"
          value="40"
          step="10"
          ticks="10"
          scale="s"
          label-handles
          precise
          mirrored
          label-ticks
        ></calcite-slider>
      </calcite-label>
      <calcite-label>
        range slider with label-handles & label-ticks
        <calcite-slider
          min="10"
          max="100"
          min-value="20"
          max-value="90"
          step="10"
          min-label="Temperature range (lower)"
          max-label="Temperature range (upper)"
          scale="s"
          label-handles
          ticks="10"
          label-ticks
        ></calcite-slider>
      </calcite-label>
      <calcite-label>
        precise range slider with label-handles & label-ticks
        <calcite-slider
          min="10"
          max="100"
          min-value="20"
          max-value="90"
          step="10"
          min-label="Temperature range (lower)"
          max-label="Temperature range (upper)"
          scale="s"
          label-handles
          ticks="10"
          precise
          label-ticks
        ></calcite-slider>
      </calcite-label>
      <calcite-label>
        precise range slider with label-handles & label-ticks mirrored
        <calcite-slider
          min="10"
          max="100"
          min-value="20"
          max-value="90"
          step="10"
          min-label="Temperature range (lower)"
          max-label="Temperature range (upper)"
          scale="s"
          label-handles
          ticks="10"
          precise
          label-ticks
          mirrored
        ></calcite-slider>
      </calcite-label>
    </div>
  </body>
</html>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 0)}"\n    max="${number("max", 100)}"\n    value="${number("value", 50)}"\n    step="${number("step", 1)}"\n    min-label="${text("min-label", "Temperature")}"\n    ${boolean("disabled", false)}\n    ${boolean("label-handles", false)}\n    ${boolean("label-ticks", false)}\n    ticks="${number("ticks", 0)}"\n    page-step="${number("page-step", 5)}"\n    ${boolean("precise", false)}\n    ${boolean("mirrored", false)}\n    ${boolean("snap", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-slider>\n`'}},simple.parameters),range.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 0)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 25)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 75)}"\n    step="${number("step", 1)}"\n    ${boolean("label-handles", false)}\n    ${boolean("label-ticks", false)}\n    ticks="${number("ticks", 20)}"\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n    ${boolean("mirrored", false)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-slider>\n`'}},range.parameters),darkModeMirroredRange_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    class="calcite-mode-dark"\n    mirrored\n    min="${number("min", 0)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 25)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 75)}"\n    step="${number("step", 1)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ticks="${number("ticks", 20)}"\n    ${boolean("precise", true)}\n    ${boolean("snap", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-slider>\n`'}},darkModeMirroredRange_TestOnly.parameters),rangeLabeledTicks_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 5)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 95)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 100)}"\n    step="${number("step", 10)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n  ></calcite-slider>\n`'}},rangeLabeledTicks_TestOnly.parameters),rangeLabeledTicksOverlappingAtMax_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 5)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 100)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 100)}"\n    step="${number("step", 10)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n  ></calcite-slider>\n`'}},rangeLabeledTicksOverlappingAtMax_TestOnly.parameters),rangeLabeledTicksOverlappingAtMin_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 5)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 5)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 5)}"\n    step="${number("step", 10)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n  ></calcite-slider>\n`'}},rangeLabeledTicksOverlappingAtMin_TestOnly.parameters),rangeLabeledTicksEdgePositioningAtMax_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 5)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 99.5)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 100)}"\n    step="${number("step", 10)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n  ></calcite-slider>\n`'}},rangeLabeledTicksEdgePositioningAtMax_TestOnly.parameters),rangeLabeledTicksEdgePositioningAtMin_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-slider\n    min="${number("min", 5)}"\n    min-label="${text("min-label", "Temperature, lower bound")}"\n    min-value="${number("min-value", 5)}"\n    max="${number("max", 100)}"\n    max-label="${text("max-label", "Temperature, upper bound")}"\n    max-value="${number("max-value", 5.5)}"\n    step="${number("step", 10)}"\n    ${boolean("label-handles", true)}\n    ${boolean("label-ticks", true)}\n    ${boolean("precise", false)}\n    ${boolean("snap", true)}\n  ></calcite-slider>\n`'}},rangeLabeledTicksEdgePositioningAtMin_TestOnly.parameters),Histogram.parameters=Object.assign({storySource:{source:'(): HTMLCalciteSliderElement => {\n  const slider = document.createElement("calcite-slider") as HTMLCalciteSliderElement;\n  slider.min = number("min", -100);\n  slider.minValue = number("min-value", -33.32);\n  slider.max = number("max", 100);\n  slider.maxValue = number("max-value", 30.87);\n  slider.histogram = array(\n    "histogram",\n    [\n      [-90, 0],\n      [-60, 12],\n      [-20, 25],\n      [20, 55],\n      [60, 10],\n      [90, 0]\n    ] as any,\n    "  "\n  ) as any;\n  slider.labelHandles = booleanFn("label-handles", false);\n  slider.labelTicks = booleanFn("label-ticks", false);\n  slider.ticks = number("ticks", 10);\n  slider.precise = booleanFn("precise", false);\n  slider.snap = booleanFn("snap", false);\n  slider.scale = select("scale", ["s", "m", "l"], "m");\n  slider.style.minWidth = "60vw";\n  return slider;\n}'}},Histogram.parameters),HistogramWithColors.parameters=Object.assign({storySource:{source:'(): HTMLCalciteSliderElement => {\n  const slider = document.createElement("calcite-slider") as HTMLCalciteSliderElement;\n  slider.min = number("min", 0);\n  slider.minValue = number("min-value", 35);\n  slider.max = number("max", 100);\n  slider.maxValue = number("max-value", 55);\n  slider.histogram = array(\n    "histogram",\n    [\n      [0, 0],\n      [20, 12],\n      [40, 25],\n      [60, 55],\n      [80, 10],\n      [100, 0]\n    ] as any,\n    "  "\n  ) as any;\n  slider.style.minWidth = "60vw";\n  const colors = array("histogram colors", ["red", "green", "blue"]);\n  const offsets = array(\n    "histogram color offsets",\n    colors.map((_, i) => `${(1 / (colors.length - 1)) * i}`)\n  );\n  slider.histogramStops = colors.map((color, i) => ({ offset: parseFloat(offsets[i]), color }));\n  slider.scale = select("scale", ["s", "m", "l"], "m");\n  return slider;\n}'}},HistogramWithColors.parameters),darkModeHistogramRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): HTMLCalciteSliderElement => {\n  const slider = document.createElement("calcite-slider") as HTMLCalciteSliderElement;\n  slider.min = number("min", 0);\n  slider.minValue = number("min-value", 25);\n  slider.max = number("max", 100);\n  slider.maxValue = number("max-value", 75);\n  slider.histogram = [\n    [0, 0],\n    [20, 12],\n    [40, 25],\n    [60, 55],\n    [80, 10],\n    [100, 0]\n  ];\n  slider.labelHandles = booleanFn("label-handles", false);\n  slider.labelTicks = booleanFn("label-ticks", false);\n  slider.ticks = number("ticks", 10);\n  slider.precise = booleanFn("precise", false);\n  slider.snap = booleanFn("snap", false);\n  slider.scale = select("scale", ["s", "m", "l"], "m");\n  slider.style.minWidth = "60vw";\n  slider.className = "calcite-mode-dark";\n  return slider;\n}'}},darkModeHistogramRTL_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-slider disabled value="5"></calcite-slider>`'}},disabled_TestOnly.parameters),wordBreakDoesNotAffectLabels_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-slider\n    min="-100"\n    max="100"\n    min-value="-100"\n    max-value="100"\n    step="10"\n    ticks="10"\n    label-handles\n    label-ticks\n    style="word-break: break-all"\n  ></calcite-slider>`'}},wordBreakDoesNotAffectLabels_TestOnly.parameters),WithLabelHandlesAndNoValue_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-slider max="750"></calcite-slider> `'}},WithLabelHandlesAndNoValue_TestOnly.parameters),WithLargeFontSize_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<html lang="en">\n  <head>\n    <style>\n      html {\n        font-size: 24px;\n      }\n      calcite-label {\n        padding: 10px;\n      }\n    </style>\n  </head>\n  <body>\n    <div style="width: 400px; padding: 20px">\n      <calcite-label>\n        precise with label-handles\n        <calcite-slider scale="s" min="10" max="100" value="50" step="10" precise label-handles></calcite-slider\n      ></calcite-label>\n      <calcite-label>\n        precise with label-handles mirrored\n        <calcite-slider\n          scale="s"\n          min="10"\n          max="100"\n          value="50"\n          step="10"\n          label-handles\n          precise\n          mirrored\n        ></calcite-slider>\n      </calcite-label>\n      <calcite-label>\n        precise with label-handles & label-ticks\n        <calcite-slider\n          min="0"\n          max="100"\n          value="40"\n          step="10"\n          ticks="10"\n          scale="s"\n          label-handles\n          label-ticks\n          precise\n        ></calcite-slider>\n      </calcite-label>\n      <calcite-label>\n        precise with label-handles & label-ticks mirrored\n        <calcite-slider\n          min="0"\n          max="100"\n          value="40"\n          step="10"\n          ticks="10"\n          scale="s"\n          label-handles\n          precise\n          mirrored\n          label-ticks\n        ></calcite-slider>\n      </calcite-label>\n      <calcite-label>\n        range slider with label-handles & label-ticks\n        <calcite-slider\n          min="10"\n          max="100"\n          min-value="20"\n          max-value="90"\n          step="10"\n          min-label="Temperature range (lower)"\n          max-label="Temperature range (upper)"\n          scale="s"\n          label-handles\n          ticks="10"\n          label-ticks\n        ></calcite-slider>\n      </calcite-label>\n      <calcite-label>\n        precise range slider with label-handles & label-ticks\n        <calcite-slider\n          min="10"\n          max="100"\n          min-value="20"\n          max-value="90"\n          step="10"\n          min-label="Temperature range (lower)"\n          max-label="Temperature range (upper)"\n          scale="s"\n          label-handles\n          ticks="10"\n          precise\n          label-ticks\n        ></calcite-slider>\n      </calcite-label>\n      <calcite-label>\n        precise range slider with label-handles & label-ticks mirrored\n        <calcite-slider\n          min="10"\n          max="100"\n          min-value="20"\n          max-value="90"\n          step="10"\n          min-label="Temperature range (lower)"\n          max-label="Temperature range (upper)"\n          scale="s"\n          label-handles\n          ticks="10"\n          precise\n          label-ticks\n          mirrored\n        ></calcite-slider>\n      </calcite-label>\n    </div>\n  </body>\n</html>`'}},WithLargeFontSize_TestOnly.parameters)}.call(this,__webpack_require__("./node_modules/process/browser.js"))},"./src/components/split-button/split-button.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"iconEnd_TestOnly",(function(){return iconEnd_TestOnly})),__webpack_require__.d(__webpack_exports__,"iconStartAndIconEnd",(function(){return iconStartAndIconEnd})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"transparentWithInverseKind_TestOnly",(function(){return transparentWithInverseKind_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Buttons/Split Button",parameters:{notes:'# calcite-split-button\n\nThe calcite-split-button control is one that combines a button with a dropdown menu in order to provide a primary action along with one or more related secondary options / actions. It\'s useful for grouping related actions or options for users, while elevating a commonly-used or default action for easier access. Its inner content populates the control\'s dropdown menu, and is thus expected to be valid `calcite-dropdown` content.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-split-button primary-icon-start="save" primary-text="Primary Option">\n  <calcite-dropdown-group selection-mode="none">\n    <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n    <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n    <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n  </calcite-dropdown-group>\n</calcite-split-button>\n```\n\n\n\n## Properties\n\n| Property             | Attribute               | Description                                                                                                                                                                                                                                                                                                                                                                   | Type                                                      | Default      |\n| -------------------- | ----------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------- | ------------ |\n| `appearance`         | `appearance`            | Specifies the appearance style of the component.                                                                                                                                                                                                                                                                                                                              | `"outline" \\| "outline-fill" \\| "solid" \\| "transparent"` | `"solid"`    |\n| `disabled`           | `disabled`              | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                                                                                                                                                                                                                      | `boolean`                                                 | `false`      |\n| `dropdownIconType`   | `dropdown-icon-type`    | Specifies the icon used for the dropdown menu.                                                                                                                                                                                                                                                                                                                                | `"caret" \\| "chevron" \\| "ellipsis" \\| "overflow"`        | `"chevron"`  |\n| `dropdownLabel`      | `dropdown-label`        | Accessible name for the dropdown menu.                                                                                                                                                                                                                                                                                                                                        | `string`                                                  | `undefined`  |\n| `kind`               | `kind`                  | Specifies the kind of the component (will apply to border and background if applicable).                                                                                                                                                                                                                                                                                      | `"brand" \\| "danger" \\| "inverse" \\| "neutral"`           | `"brand"`    |\n| `loading`            | `loading`               | When `true`, a busy indicator is displayed on the primary button.                                                                                                                                                                                                                                                                                                             | `boolean`                                                 | `false`      |\n| `overlayPositioning` | `overlay-positioning`   | Determines the type of positioning to use for the overlaid content.  Using `"absolute"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container\'s layout.  `"fixed"` should be used to escape an overflowing parent container, or when the reference element\'s `position` CSS property is `"fixed"`. | `"absolute" \\| "fixed"`                                   | `"absolute"` |\n| `primaryIconEnd`     | `primary-icon-end`      | Specifies an icon to display at the end of the primary button.                                                                                                                                                                                                                                                                                                                | `string`                                                  | `undefined`  |\n| `primaryIconFlipRtl` | `primary-icon-flip-rtl` | Displays the `primaryIconStart` and/or `primaryIconEnd` as flipped when the element direction is right-to-left (`"rtl"`).                                                                                                                                                                                                                                                     | `"both" \\| "end" \\| "start"`                              | `undefined`  |\n| `primaryIconStart`   | `primary-icon-start`    | Specifies an icon to display at the start of the primary button.                                                                                                                                                                                                                                                                                                              | `string`                                                  | `undefined`  |\n| `primaryLabel`       | `primary-label`         | Accessible name for the primary button.                                                                                                                                                                                                                                                                                                                                       | `string`                                                  | `undefined`  |\n| `primaryText`        | `primary-text`          | Text displayed in the primary button.                                                                                                                                                                                                                                                                                                                                         | `string`                                                  | `undefined`  |\n| `scale`              | `scale`                 | Specifies the size of the component.                                                                                                                                                                                                                                                                                                                                          | `"l" \\| "m" \\| "s"`                                       | `"m"`        |\n| `width`              | `width`                 | Specifies the width of the component.                                                                                                                                                                                                                                                                                                                                         | `"auto" \\| "full" \\| "half"`                              | `"auto"`     |\n\n\n## Events\n\n| Event                              | Description                               | Type                |\n| ---------------------------------- | ----------------------------------------- | ------------------- |\n| `calciteSplitButtonPrimaryClick`   | Fires when the primary button is clicked. | `CustomEvent<void>` |\n| `calciteSplitButtonSecondaryClick` | Fires when the dropdown menu is clicked.  | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                                   |\n| ---- | --------------------------------------------- |\n|      | A slot for adding `calcite-dropdown` content. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-button](../button)\n- [calcite-dropdown](../dropdown)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-split-button --\x3e calcite-button\n  calcite-split-button --\x3e calcite-dropdown\n  calcite-button --\x3e calcite-loader\n  calcite-button --\x3e calcite-icon\n  style calcite-split-button fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width:70vw;">
    <calcite-split-button
      active
      appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill","transparent"],"solid")}"
      kind="${Object(dist.select)("kind",["brand","danger","inverse","neutral"],"brand")}"
      scale="${Object(dist.select)("size",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("disabled",!1)}
      primary-icon-start="${Object(dist.select)("primary-icon-start",helpers.b,helpers.b[0])}"
      primary-text="${Object(dist.text)("primary-text","Primary Option")}"
      primary-label="${Object(dist.text)("primary-label","Primary Option")}"
      dropdown-label="${Object(dist.text)("dropdown-label","Additional Options")}"
      dropdown-icon-type="${Object(dist.select)("dropdown-icon-type",["chevron","caret","ellipsis","overflow"],"chevron")}"
    >
      <calcite-dropdown-group selection-mode="none">
        <calcite-dropdown-item>Option 2</calcite-dropdown-item>
        <calcite-dropdown-item>Option 3</calcite-dropdown-item>
        <calcite-dropdown-item>Option 4</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-split-button>
  </div>
`}),iconEnd_TestOnly=function(){return formatting.a`
  <div style="width:70vw;">
    <calcite-split-button
      appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill","transparent"],"solid")}"
      kind="${Object(dist.select)("kind",["brand","danger","inverse","neutral"],"brand")}"
      scale="${Object(dist.select)("size",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("disabled",!1)}
      primary-icon-end="${Object(dist.select)("primary-icon-end",helpers.b,helpers.b[0])}"
      primary-text="${Object(dist.text)("primary-text","Primary Option")}"
      primary-label="${Object(dist.text)("primary-label","Primary Option")}"
      dropdown-label="${Object(dist.text)("dropdown-label","Additional Options")}"
      dropdown-icon-type="${Object(dist.select)("dropdown-icon-type",["chevron","caret","ellipsis","overflow"],"chevron")}"
    >
      <calcite-dropdown-group selection-mode="none">
        <calcite-dropdown-item>Option 2</calcite-dropdown-item>
        <calcite-dropdown-item>Option 3</calcite-dropdown-item>
        <calcite-dropdown-item>Option 4</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-split-button>
  </div>
`},iconStartAndIconEnd=function(){return formatting.a`
  <div style="width:70vw;">
    <calcite-split-button
      appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill","transparent"],"solid")}"
      kind="${Object(dist.select)("kind",["brand","danger","inverse","neutral"],"brand")}"
      scale="${Object(dist.select)("size",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("disabled",!1)}
      primary-icon-start="${Object(dist.select)("primary-icon-end",helpers.b,helpers.b[0])}"
      primary-icon-end="${Object(dist.select)("primary-icon-end",helpers.b,helpers.b[0])}"
      primary-text="${Object(dist.text)("primary-text","Primary Option")}"
      primary-label="${Object(dist.text)("primary-label","Primary Option")}"
      dropdown-label="${Object(dist.text)("dropdown-label","Additional Options")}"
      dropdown-icon-type="${Object(dist.select)("dropdown-icon-type",["chevron","caret","ellipsis","overflow"],"chevron")}"
    >
      <calcite-dropdown-group selection-mode="none">
        <calcite-dropdown-item>Option 2</calcite-dropdown-item>
        <calcite-dropdown-item>Option 3</calcite-dropdown-item>
        <calcite-dropdown-item>Option 4</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-split-button>
  </div>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <div style="width:70vw;">
    <calcite-split-button
      appearance="${Object(dist.select)("appearance",["solid","outline","outline-fill","transparent"],"solid")}"
      kind="${Object(dist.select)("kind",["brand","danger","inverse","neutral"],"brand")}"
      scale="${Object(dist.select)("size",["s","m","l"],"m")}"
      width="${Object(dist.select)("width",["auto","half","full"],"auto")}"
      ${Object(helpers.a)("loading",!1)}
      ${Object(helpers.a)("disabled",!1)}
      primary-icon-start="${Object(dist.select)("primary-icon-start",helpers.b,helpers.b[0])}"
      primary-text="${Object(dist.text)("primary-text","Primary Option")}"
      dropdown-label="${Object(dist.text)("dropdown-label","Additional Options")}"
      dropdown-icon-type="${Object(dist.select)("dropdown-icon-type",["chevron","caret","ellipsis","overflow"],"chevron")}"
      class="calcite-mode-dark"
    >
      <calcite-dropdown-group selection-mode="none">
        <calcite-dropdown-item>Option 2</calcite-dropdown-item>
        <calcite-dropdown-item>Option 3</calcite-dropdown-item>
        <calcite-dropdown-item>Option 4</calcite-dropdown-item>
      </calcite-dropdown-group>
    </calcite-split-button>
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var disabled_TestOnly=function(){return formatting.a`<calcite-split-button disabled>
  <calcite-dropdown-group selection-mode="none">
    <calcite-dropdown-item>Option 2</calcite-dropdown-item>
    <calcite-dropdown-item>Option 3</calcite-dropdown-item>
    <calcite-dropdown-item>Option 4</calcite-dropdown-item>
  </calcite-dropdown-group>
</calcite-split-button>`},transparentWithInverseKind_TestOnly=function(){return formatting.a`<calcite-split-button scale="s" primary-text="Button" appearance="transparent" kind="inverse">
  </calcite-split-button>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:70vw;">\n    <calcite-split-button\n      active\n      appearance="${select("appearance", ["solid", "outline", "outline-fill", "transparent"], "solid")}"\n      kind="${select("kind", ["brand", "danger", "inverse", "neutral"], "brand")}"\n      scale="${select("size", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      ${boolean("loading", false)}\n      ${boolean("disabled", false)}\n      primary-icon-start="${select("primary-icon-start", iconNames, iconNames[0])}"\n      primary-text="${text("primary-text", "Primary Option")}"\n      primary-label="${text("primary-label", "Primary Option")}"\n      dropdown-label="${text("dropdown-label", "Additional Options")}"\n      dropdown-icon-type="${select("dropdown-icon-type", ["chevron", "caret", "ellipsis", "overflow"], "chevron")}"\n    >\n      <calcite-dropdown-group selection-mode="none">\n        <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-split-button>\n  </div>\n`'}},simple.parameters),iconEnd_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:70vw;">\n    <calcite-split-button\n      appearance="${select("appearance", ["solid", "outline", "outline-fill", "transparent"], "solid")}"\n      kind="${select("kind", ["brand", "danger", "inverse", "neutral"], "brand")}"\n      scale="${select("size", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      ${boolean("loading", false)}\n      ${boolean("disabled", false)}\n      primary-icon-end="${select("primary-icon-end", iconNames, iconNames[0])}"\n      primary-text="${text("primary-text", "Primary Option")}"\n      primary-label="${text("primary-label", "Primary Option")}"\n      dropdown-label="${text("dropdown-label", "Additional Options")}"\n      dropdown-icon-type="${select("dropdown-icon-type", ["chevron", "caret", "ellipsis", "overflow"], "chevron")}"\n    >\n      <calcite-dropdown-group selection-mode="none">\n        <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-split-button>\n  </div>\n`'}},iconEnd_TestOnly.parameters),iconStartAndIconEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:70vw;">\n    <calcite-split-button\n      appearance="${select("appearance", ["solid", "outline", "outline-fill", "transparent"], "solid")}"\n      kind="${select("kind", ["brand", "danger", "inverse", "neutral"], "brand")}"\n      scale="${select("size", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      ${boolean("loading", false)}\n      ${boolean("disabled", false)}\n      primary-icon-start="${select("primary-icon-end", iconNames, iconNames[0])}"\n      primary-icon-end="${select("primary-icon-end", iconNames, iconNames[0])}"\n      primary-text="${text("primary-text", "Primary Option")}"\n      primary-label="${text("primary-label", "Primary Option")}"\n      dropdown-label="${text("dropdown-label", "Additional Options")}"\n      dropdown-icon-type="${select("dropdown-icon-type", ["chevron", "caret", "ellipsis", "overflow"], "chevron")}"\n    >\n      <calcite-dropdown-group selection-mode="none">\n        <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-split-button>\n  </div>\n`'}},iconStartAndIconEnd.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width:70vw;">\n    <calcite-split-button\n      appearance="${select("appearance", ["solid", "outline", "outline-fill", "transparent"], "solid")}"\n      kind="${select("kind", ["brand", "danger", "inverse", "neutral"], "brand")}"\n      scale="${select("size", ["s", "m", "l"], "m")}"\n      width="${select("width", ["auto", "half", "full"], "auto")}"\n      ${boolean("loading", false)}\n      ${boolean("disabled", false)}\n      primary-icon-start="${select("primary-icon-start", iconNames, iconNames[0])}"\n      primary-text="${text("primary-text", "Primary Option")}"\n      dropdown-label="${text("dropdown-label", "Additional Options")}"\n      dropdown-icon-type="${select("dropdown-icon-type", ["chevron", "caret", "ellipsis", "overflow"], "chevron")}"\n      class="calcite-mode-dark"\n    >\n      <calcite-dropdown-group selection-mode="none">\n        <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n        <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n      </calcite-dropdown-group>\n    </calcite-split-button>\n  </div>\n`'}},darkModeRTL_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-split-button disabled>\n  <calcite-dropdown-group selection-mode="none">\n    <calcite-dropdown-item>Option 2</calcite-dropdown-item>\n    <calcite-dropdown-item>Option 3</calcite-dropdown-item>\n    <calcite-dropdown-item>Option 4</calcite-dropdown-item>\n  </calcite-dropdown-group>\n</calcite-split-button>`'}},disabled_TestOnly.parameters),transparentWithInverseKind_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-split-button scale="s" primary-text="Button" appearance="transparent" kind="inverse">\n  </calcite-split-button>`'}},transparentWithInverseKind_TestOnly.parameters)},"./src/components/stepper/stepper.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"overriddenWidth_TestOnly",(function(){return overriddenWidth_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"arabicNumberingSystem_TestOnly",(function(){return arabicNumberingSystem_TestOnly})),__webpack_require__.d(__webpack_exports__,"verticalLayout_TestOnly",(function(){return verticalLayout_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Stepper",parameters:{notes:['# calcite-stepper\n\nCalcite stepper can be used to present a stepper workflow to a user. It has configurable display options for layout (horizontal or vertical), and the ability to automatically render status icons, and step numbers.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-stepper icon numbered id="my-example-stepper">\n  <calcite-stepper-item heading="Choose method" description="Add members without sending invitations" complete>\n    Step 1 Content Goes Here\n  </calcite-stepper-item>\n  <calcite-stepper-item heading="Compile member list" error> Step 2 Content Goes Here </calcite-stepper-item>\n  <calcite-stepper-item heading="Set member properties" description="Some subtext" selected>\n    Step 3 Content Goes Here\n  </calcite-stepper-item>\n  <calcite-stepper-item heading="Confirm and complete" description="Disabled example" disabled>\n    Step 4 Content Goes Here\n  </calcite-stepper-item>\n</calcite-stepper>\n```\n\n\n\n## Properties\n\n| Property          | Attribute          | Description                                                                  | Type                                                                                                                                                                                                                                    | Default        |\n| ----------------- | ------------------ | ---------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------- |\n| `icon`            | `icon`             | When `true`, displays a status icon in the `calcite-stepper-item` heading.   | `boolean`                                                                                                                                                                                                                               | `false`        |\n| `layout`          | `layout`           | Defines the layout of the component.                                         | `"horizontal" \\| "vertical"`                                                                                                                                                                                                            | `"horizontal"` |\n| `numbered`        | `numbered`         | When `true`, displays the step number in the `calcite-stepper-item` heading. | `boolean`                                                                                                                                                                                                                               | `false`        |\n| `numberingSystem` | `numbering-system` | Specifies the Unicode numeral system used by the component for localization. | `"arab" \\| "arabext" \\| "bali" \\| "beng" \\| "deva" \\| "fullwide" \\| "gujr" \\| "guru" \\| "hanidec" \\| "khmr" \\| "knda" \\| "laoo" \\| "latn" \\| "limb" \\| "mlym" \\| "mong" \\| "mymr" \\| "orya" \\| "tamldec" \\| "telu" \\| "thai" \\| "tibt"` | `undefined`    |\n| `scale`           | `scale`            | Specifies the size of the component.                                         | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                     | `"m"`          |\n| `selectedItem`    | --                 | Specifies the component\'s selected item.                                     | `HTMLCalciteStepperItemElement`                                                                                                                                                                                                         | `null`         |\n\n\n## Events\n\n| Event                      | Description                                           | Type                |\n| -------------------------- | ----------------------------------------------------- | ------------------- |\n| `calciteStepperItemChange` | Fires when the active `calcite-stepper-item` changes. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `endStep() => Promise<void>`\n\nSet the last `calcite-stepper-item` as active.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `goToStep(step: number) => Promise<void>`\n\nSet a specified `calcite-stepper-item` as active.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `nextStep() => Promise<void>`\n\nSet the next `calcite-stepper-item` as active.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `prevStep() => Promise<void>`\n\nSet the previous `calcite-stepper-item` as active.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `startStep() => Promise<void>`\n\nSet the first `calcite-stepper-item` as active.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                                        |\n| ---- | -------------------------------------------------- |\n|      | A slot for adding `calcite-stepper-item` elements. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n','# calcite-stepper-item\n\nindividual `calcite-stepper-item` item\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                  | Type      | Default     |\n| ------------- | --------------- | -------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `complete`    | `complete`      | When `true`, the step has been completed.                                                    | `boolean` | `false`     |\n| `description` | `description`   | A description for the component. Displays below the header text.                             | `string`  | `undefined` |\n| `disabled`    | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity.     | `boolean` | `false`     |\n| `error`       | `error`         | When `true`, the component contains an error that requires resolution from the user.         | `boolean` | `false`     |\n| `heading`     | `heading`       | The component header text.                                                                   | `string`  | `undefined` |\n| `iconFlipRtl` | `icon-flip-rtl` | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`). | `boolean` | `false`     |\n| `selected`    | `selected`      | When `true`, the component is selected.                                                      | `boolean` | `false`     |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding custom content. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-stepper-item --\x3e calcite-icon\n  style calcite-stepper-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n']}},Object(helpers.c)()),function(){return formatting.a`
  <h1>Default</h1>
  <calcite-stepper
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("numbered",!0)}
    ${Object(helpers.a)("icon",!0)}
  >
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-1","Choose method")}"
      description="${Object(dist.text)("description-1","Add members without sending invitations")}"
      complete
    >
      <calcite-notice open width="full"><div slot="message">Step 1 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-2","Compile member list")}"
      description="${Object(dist.text)("description-2","")}"
      complete
      error
    >
      <calcite-notice open width="full"><div slot="message">Step 2 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-3","Set member properties")}"
      description="${Object(dist.text)("description-3","")}"
      selected
    >
      <calcite-notice open width="full"><div slot="message">Step 3 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-4","Confirm and complete")}"
      description="${Object(dist.text)("description-4","Disabled example")}"
      disabled
    >
      <calcite-notice open width="full"><div slot="message">Step 4 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
  </calcite-stepper>
  <h1>No Content</h1>
  <calcite-stepper
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("numbered",!0)}
    ${Object(helpers.a)("icon",!0)}
  >
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-1","Choose method")}"
      description="${Object(dist.text)("description-1","Add members without sending invitations")}"
      complete
    >
    </calcite-stepper-item>
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-2","Compile member list")}"
      description="${Object(dist.text)("description-2","")}"
      complete
      error
    >
    </calcite-stepper-item>
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-3","Set member properties")}"
      description="${Object(dist.text)("description-3","")}"
      selected
    >
    </calcite-stepper-item>
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-4","Confirm and complete")}"
      description="${Object(dist.text)("description-4","Disabled example")}"
      disabled
    >
    </calcite-stepper-item>
  </calcite-stepper>
`}),darkModeRTL_TestOnly=function(){return formatting.a`
<div dir="rtl">
  <calcite-stepper
  class="calcite-mode-dark"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    ${Object(helpers.a)("numbered",!0)}
    ${Object(helpers.a)("icon",!0)}
  >
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-1","Choose method")}"
      description="${Object(dist.text)("description-1","Add members without sending invitations")}"
      complete
    >
      <calcite-notice open width="full"><div slot=message">Step 1 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-2","Compile member list")}"
      description="${Object(dist.text)("description-2","")}"
      complete
      error
    >
      <calcite-notice open width="full"><div slot="message">Step 2 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-3","Set member properties")}"
      description="${Object(dist.text)("description-3","")}"
      selected
    >
      <calcite-notice open width="full"><div slot="message">Step 3 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
    <calcite-stepper-item
      heading="${Object(dist.text)("heading-4","Confirm and complete")}"
      description="${Object(dist.text)("description-4","Disabled example")}"
      disabled
    >
      <calcite-notice open width="full"><div slot="message">Step 4 Content Goes Here</div></calcite-notice>
    </calcite-stepper-item>
  </calcite-stepper>
</div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var overriddenWidth_TestOnly=function(){return formatting.a` <calcite-stepper numbered style="width: 50vw">
  <calcite-stepper-item heading="Choose method" description="Add members without sending invitations" complete>
    <calcite-notice open width="full">
      <div slot="message">Step 1 Content Goes Here</div>
    </calcite-notice>
  </calcite-stepper-item>
  <calcite-stepper-item heading="Compile member list" complete error>
    <calcite-notice open width="full">
      <div slot="message">Step 2 Content Goes Here</div>
    </calcite-notice>
  </calcite-stepper-item>
  <calcite-stepper-item heading="Set member properties" description="" selected>
    <calcite-notice open width="full">
      <div slot="message">Step 3 Content Goes Here</div>
    </calcite-notice>
  </calcite-stepper-item>
  <calcite-stepper-item heading="Confirm and complete" description="Disabled example" disabled="">
    <calcite-notice open width="full">
      <div slot="message">Step 4 Content Goes Here</div>
    </calcite-notice>
  </calcite-stepper-item>
</calcite-stepper>`},disabled_TestOnly=function(){return formatting.a`<calcite-stepper>
  <calcite-stepper-item heading="item1" complete>1</calcite-stepper-item>
  <calcite-stepper-item heading="item2">2</calcite-stepper-item>
  <calcite-stepper-item heading="item3" selected>3</calcite-stepper-item>
  <calcite-stepper-item heading="item4" disabled>4</calcite-stepper-item>
</calcite-stepper>`},arabicNumberingSystem_TestOnly=function(){return formatting.a` <calcite-stepper
  numbered
  numbering-system="arab"
  lang="ar"
  dir="rtl"
  scale="s"
>
  <calcite-stepper-item heading="الخطوةالاولى" complete>
    <calcite-notice open width="full">
      <div slot="message">الخطوة الأولى للمحتوى هنا</div>
    </calcite-notice>
  </calcite-stepper-item>
  <calcite-stepper-item heading="الخطوة الثانية" complete>
    <calcite-notice open width="full">
      <div slot="message">الخطوة الثانية للمحتوى هنا</div>
    </calcite-notice>
  </calcite-stepper-item>
  <calcite-stepper-item heading="الخطوة الثالثة" description="بعض النصوص الفرعية" selected>
    <calcite-notice open width="full">
      <div slot="message">الخطوة الثالثة المحتوى يذهب هنا</div>
    </calcite-notice>
  </calcite-stepper-item>
  <calcite-stepper-item heading="الخطوة الرابعة">
    <calcite-notice open width="full">
      <div slot="message">الخطوة الرابعة المحتوى يذهب هنا</div>
    </calcite-notice>
  </calcite-stepper-item>
</calcite-stepper>`},verticalLayout_TestOnly=function(){return formatting.a`<calcite-stepper layout="vertical" scale="s">
    <calcite-stepper-item heading="Scale s" description="Add members without sending invitations"
      >Step 1 Content Goes Here</calcite-stepper-item
    >
  </calcite-stepper>

  <calcite-stepper layout="vertical">
    <calcite-stepper-item heading="Scale m" description="Add members without sending invitations"
      >Step 1 Content Goes Here</calcite-stepper-item
    >
  </calcite-stepper>

  <calcite-stepper layout="vertical" scale="l">
    <calcite-stepper-item heading="Scale l" description="Add members without sending invitations"
      >Step 1 Content Goes Here</calcite-stepper-item
    >
  </calcite-stepper>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <h1>Default</h1>\n  <calcite-stepper\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("numbered", true)}\n    ${boolean("icon", true)}\n  >\n    <calcite-stepper-item\n      heading="${text("heading-1", "Choose method")}"\n      description="${text("description-1", "Add members without sending invitations")}"\n      complete\n    >\n      <calcite-notice open width="full"><div slot="message">Step 1 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      heading="${text("heading-2", "Compile member list")}"\n      description="${text("description-2", "")}"\n      complete\n      error\n    >\n      <calcite-notice open width="full"><div slot="message">Step 2 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      heading="${text("heading-3", "Set member properties")}"\n      description="${text("description-3", "")}"\n      selected\n    >\n      <calcite-notice open width="full"><div slot="message">Step 3 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      heading="${text("heading-4", "Confirm and complete")}"\n      description="${text("description-4", "Disabled example")}"\n      disabled\n    >\n      <calcite-notice open width="full"><div slot="message">Step 4 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n  </calcite-stepper>\n  <h1>No Content</h1>\n  <calcite-stepper\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("numbered", true)}\n    ${boolean("icon", true)}\n  >\n    <calcite-stepper-item\n      heading="${text("heading-1", "Choose method")}"\n      description="${text("description-1", "Add members without sending invitations")}"\n      complete\n    >\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      heading="${text("heading-2", "Compile member list")}"\n      description="${text("description-2", "")}"\n      complete\n      error\n    >\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      heading="${text("heading-3", "Set member properties")}"\n      description="${text("description-3", "")}"\n      selected\n    >\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      heading="${text("heading-4", "Confirm and complete")}"\n      description="${text("description-4", "Disabled example")}"\n      disabled\n    >\n    </calcite-stepper-item>\n  </calcite-stepper>\n`'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n<div dir="rtl">\n  <calcite-stepper\n  class="calcite-mode-dark"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    ${boolean("numbered", true)}\n    ${boolean("icon", true)}\n  >\n    <calcite-stepper-item\n      heading="${text("heading-1", "Choose method")}"\n      description="${text("description-1", "Add members without sending invitations")}"\n      complete\n    >\n      <calcite-notice open width="full"><div slot=message">Step 1 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      heading="${text("heading-2", "Compile member list")}"\n      description="${text("description-2", "")}"\n      complete\n      error\n    >\n      <calcite-notice open width="full"><div slot="message">Step 2 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      heading="${text("heading-3", "Set member properties")}"\n      description="${text("description-3", "")}"\n      selected\n    >\n      <calcite-notice open width="full"><div slot="message">Step 3 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n    <calcite-stepper-item\n      heading="${text("heading-4", "Confirm and complete")}"\n      description="${text("description-4", "Disabled example")}"\n      disabled\n    >\n      <calcite-notice open width="full"><div slot="message">Step 4 Content Goes Here</div></calcite-notice>\n    </calcite-stepper-item>\n  </calcite-stepper>\n</div>\n`'}},darkModeRTL_TestOnly.parameters),overriddenWidth_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-stepper numbered style="width: 50vw">\n  <calcite-stepper-item heading="Choose method" description="Add members without sending invitations" complete>\n    <calcite-notice open width="full">\n      <div slot="message">Step 1 Content Goes Here</div>\n    </calcite-notice>\n  </calcite-stepper-item>\n  <calcite-stepper-item heading="Compile member list" complete error>\n    <calcite-notice open width="full">\n      <div slot="message">Step 2 Content Goes Here</div>\n    </calcite-notice>\n  </calcite-stepper-item>\n  <calcite-stepper-item heading="Set member properties" description="" selected>\n    <calcite-notice open width="full">\n      <div slot="message">Step 3 Content Goes Here</div>\n    </calcite-notice>\n  </calcite-stepper-item>\n  <calcite-stepper-item heading="Confirm and complete" description="Disabled example" disabled="">\n    <calcite-notice open width="full">\n      <div slot="message">Step 4 Content Goes Here</div>\n    </calcite-notice>\n  </calcite-stepper-item>\n</calcite-stepper>`'}},overriddenWidth_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-stepper>\n  <calcite-stepper-item heading="item1" complete>1</calcite-stepper-item>\n  <calcite-stepper-item heading="item2">2</calcite-stepper-item>\n  <calcite-stepper-item heading="item3" selected>3</calcite-stepper-item>\n  <calcite-stepper-item heading="item4" disabled>4</calcite-stepper-item>\n</calcite-stepper>`'}},disabled_TestOnly.parameters),arabicNumberingSystem_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-stepper\n  numbered\n  numbering-system="arab"\n  lang="ar"\n  dir="rtl"\n  scale="s"\n>\n  <calcite-stepper-item heading="الخطوةالاولى" complete>\n    <calcite-notice open width="full">\n      <div slot="message">الخطوة الأولى للمحتوى هنا</div>\n    </calcite-notice>\n  </calcite-stepper-item>\n  <calcite-stepper-item heading="الخطوة الثانية" complete>\n    <calcite-notice open width="full">\n      <div slot="message">الخطوة الثانية للمحتوى هنا</div>\n    </calcite-notice>\n  </calcite-stepper-item>\n  <calcite-stepper-item heading="الخطوة الثالثة" description="بعض النصوص الفرعية" selected>\n    <calcite-notice open width="full">\n      <div slot="message">الخطوة الثالثة المحتوى يذهب هنا</div>\n    </calcite-notice>\n  </calcite-stepper-item>\n  <calcite-stepper-item heading="الخطوة الرابعة">\n    <calcite-notice open width="full">\n      <div slot="message">الخطوة الرابعة المحتوى يذهب هنا</div>\n    </calcite-notice>\n  </calcite-stepper-item>\n</calcite-stepper>`'}},arabicNumberingSystem_TestOnly.parameters),verticalLayout_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-stepper layout="vertical" scale="s">\n    <calcite-stepper-item heading="Scale s" description="Add members without sending invitations"\n      >Step 1 Content Goes Here</calcite-stepper-item\n    >\n  </calcite-stepper>\n\n  <calcite-stepper layout="vertical">\n    <calcite-stepper-item heading="Scale m" description="Add members without sending invitations"\n      >Step 1 Content Goes Here</calcite-stepper-item\n    >\n  </calcite-stepper>\n\n  <calcite-stepper layout="vertical" scale="l">\n    <calcite-stepper-item heading="Scale l" description="Add members without sending invitations"\n      >Step 1 Content Goes Here</calcite-stepper-item\n    >\n  </calcite-stepper>`'}},verticalLayout_TestOnly.parameters)},"./src/components/switch/switch.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Controls/Switch",parameters:{notes:'# calcite-switch\n\n`calcite-switch` is used to toggle a value on or off.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<label> <calcite-switch checked></calcite-switch> Switch is on </label>\n```\n\n\n\n## Properties\n\n| Property   | Attribute  | Description                                                                                                                                                | Type                | Default     |\n| ---------- | ---------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- | ----------- |\n| `checked`  | `checked`  | When `true`, the component is checked.                                                                                                                     | `boolean`           | `false`     |\n| `disabled` | `disabled` | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                   | `boolean`           | `false`     |\n| `form`     | `form`     | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any. | `string`            | `undefined` |\n| `label`    | `label`    | Accessible name for the component.                                                                                                                         | `string`            | `undefined` |\n| `name`     | `name`     | Specifies the name of the component.  Required to pass the component\'s `value` on form submission.                                                         | `string`            | `undefined` |\n| `scale`    | `scale`    | Specifies the size of the component.                                                                                                                       | `"l" \\| "m" \\| "s"` | `"m"`       |\n| `value`    | `value`    | The component\'s value.                                                                                                                                     | `any`               | `undefined` |\n\n\n## Events\n\n| Event                 | Description                                 | Type                |\n| --------------------- | ------------------------------------------- | ------------------- |\n| `calciteSwitchChange` | Fires when the `checked` value has changed. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-block-section](../block-section)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-block-section --\x3e calcite-switch\n  style calcite-switch fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-switch
    name="setting"
    value="enabled"
    ${Object(helpers.a)("checked",!0)}
    ${Object(helpers.a)("disabled",!1)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  ></calcite-switch>
`}),darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-switch
    class="calcite-mode-dark"
    name="setting"
    value="enabled"
    ${Object(helpers.a)("checked",!0)}
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  ></calcite-switch>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var disabled_TestOnly=function(){return formatting.a`<calcite-switch disabled checked></calcite-switch>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-switch\n    name="setting"\n    value="enabled"\n    ${boolean("checked", true)}\n    ${boolean("disabled", false)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-switch>\n`'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-switch\n    class="calcite-mode-dark"\n    name="setting"\n    value="enabled"\n    ${boolean("checked", true)}\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  ></calcite-switch>\n`'}},darkModeRTL_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:"(): string => html`<calcite-switch disabled checked></calcite-switch>`"}},disabled_TestOnly.parameters)},"./src/components/tabs/tabs.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simpleDarkModeRTL_TestOnly",(function(){return simpleDarkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"bordered",(function(){return bordered})),__webpack_require__.d(__webpack_exports__,"borderedDarkModeRTL_TestOnly",(function(){return borderedDarkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"withIcons",(function(){return withIcons})),__webpack_require__.d(__webpack_exports__,"setWidth",(function(){return setWidth})),__webpack_require__.d(__webpack_exports__,"justTabNav",(function(){return justTabNav})),__webpack_require__.d(__webpack_exports__,"disabledTabsAndMediumIconsForLargeTabsTitle_TestOnly",(function(){return disabledTabsAndMediumIconsForLargeTabsTitle_TestOnly})),__webpack_require__.d(__webpack_exports__,"TabChildrenWithPercentageHeights",(function(){return TabChildrenWithPercentageHeights}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),placeholderImage=__webpack_require__("./.storybook/placeholderImage.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simpleDarkModeRTL_TestOnly=(__webpack_exports__.default=Object.assign({title:"Components/Tabs",parameters:{notes:['# calcite-tabs\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n`calcite-tabs` uses several sub-components ([calcite-tab-nav](../tab-nav), [calcite-tab](../tab), [calcite-tab-title](../tab-title)) to create a tabbed interface with optional client side storage. Place your content inside of the `<calcite-tab>` element:\n\n```html\n<calcite-tabs>\n  <calcite-tab-nav slot="title-group">\n    <calcite-tab-title selected>Tab 1 Title</calcite-tab-title>\n    <calcite-tab-title>Tab 2 Title</calcite-tab-title>\n  </calcite-tab-nav>\n\n  <calcite-tab selected>Tab 1 Content</calcite-tab>\n  <calcite-tab>Tab 2 Content</calcite-tab>\n</calcite-tabs>\n```\n\n\n### Bordered\n\n```html\n<calcite-tabs bordered>\n  <calcite-tab-nav slot="title-group">\n    <calcite-tab-title tab="tab1">Tab 1 Title</calcite-tab-title>\n    <calcite-tab-title tab="tab2">Tab 2 Title</calcite-tab-title>\n    <calcite-tab-title tab="tab3">Tab 3 Title</calcite-tab-title>\n    <calcite-tab-title tab="tab4" selected>Tab 4 Title</calcite-tab-title>\n  </calcite-tab-nav>\n  <calcite-tab tab="tab1">Tab 1 Content</calcite-tab>\n  <calcite-tab tab="tab2">Tab 2 Content</calcite-tab>\n  <calcite-tab tab="tab3">Tab 3 Content</calcite-tab>\n  <calcite-tab tab="tab4" selected>Tab 4 Content</calcite-tab>\n</calcite-tabs>\n```\n\n\n\n## Properties\n\n| Property   | Attribute  | Description                                                                                                                                        | Type                   | Default    |\n| ---------- | ---------- | -------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------- | ---------- |\n| `bordered` | `bordered` | When `true`, the component will display with a folder style menu.                                                                                  | `boolean`              | `false`    |\n| `layout`   | `layout`   | Specifies the layout of the `calcite-tab-nav`, justifying the `calcite-tab-title`s to the start (`"inline"`), or across and centered (`"center"`). | `"center" \\| "inline"` | `"inline"` |\n| `position` | `position` | Specifies the position of the component in relation to the `calcite-tab`s.                                                                         | `"bottom" \\| "top"`    | `"top"`    |\n| `scale`    | `scale`    | Specifies the size of the component.                                                                                                               | `"l" \\| "m" \\| "s"`    | `"m"`      |\n\n\n## Slots\n\n| Slot            | Description                            |\n| --------------- | -------------------------------------- |\n|                 | A slot for adding `calcite-tab`s.      |\n| `"title-group"` | A slot for adding a `calcite-tab-nav`. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-color-picker](../color-picker)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-color-picker --\x3e calcite-tabs\n  style calcite-tabs fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',"# calcite-tab\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n`calcite-tab` wraps the content you would like to appear when that tab is selected:\n\n```html\n<calcite-tab>My stuff!</calcite-tab>\n```\n\n\n\n## Properties\n\n| Property   | Attribute  | Description                                                                                                         | Type      | Default     |\n| ---------- | ---------- | ------------------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `selected` | `selected` | When `true`, the component's contents are selected.  Only one tab can be selected within the `calcite-tabs` parent. | `boolean` | `false`     |\n| `tab`      | `tab`      | Specifies a unique name for the component.  When specified, use the same value on the `calcite-tab-title`.          | `string`  | `undefined` |\n\n\n## Methods\n\n### `getTabIndex() => Promise<number>`\n\nReturns the index of the component item within the tab array.\n\n#### Returns\n\nType: `Promise<number>`\n\n\n\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding custom content. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-color-picker](../color-picker)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-color-picker --\x3e calcite-tab\n  style calcite-tab fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n",'# calcite-tab-nav\n\nThe tab-nav groups several [calcite-tab-title](../tab-title) components and builds out the navigation. You can optionally use attibutes on the tab-nav to configure client side storage of the selected tab.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nWhen tab-nav is the only parent, tab-title can inherit its `scale` and `position` from tab-nav:\n\n```html\n<calcite-tab-nav scale="l" position="bottom">\n  <calcite-tab-title>Layers</calcite-tab-title>\n  <calcite-tab-title>Maps</calcite-tab-title>\n  <calcite-tab-title selected>Data</calcite-tab-title>\n</calcite-tab-nav>\n```\n\n\n\n## Properties\n\n| Property        | Attribute    | Description                                                                   | Type                         | Default     |\n| --------------- | ------------ | ----------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `selectedTitle` | --           | Specifies the component\'s selected tab-title.                                 | `HTMLCalciteTabTitleElement` | `null`      |\n| `storageId`     | `storage-id` | Specifies the name when saving selected `calcite-tab` data to `localStorage`. | `string`                     | `undefined` |\n| `syncId`        | `sync-id`    | Specifies text to update multiple components to keep in sync if one changes.  | `string`                     | `undefined` |\n\n\n## Events\n\n| Event              | Description                                    | Type                |\n| ------------------ | ---------------------------------------------- | ------------------- |\n| `calciteTabChange` | Emits when the selected `calcite-tab` changes. | `CustomEvent<void>` |\n\n\n## Slots\n\n| Slot | Description                             |\n| ---- | --------------------------------------- |\n|      | A slot for adding `calcite-tab-title`s. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-color-picker](../color-picker)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-color-picker --\x3e calcite-tab-nav\n  style calcite-tab-nav fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n','# calcite-tab-title\n\nThe tab-title is the link that switches between panes in [calcite-tabs](../tabs).\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                                                                        | Type                         | Default     |\n| ------------- | --------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `disabled`    | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                           | `boolean`                    | `false`     |\n| `iconEnd`     | `icon-end`      | Specifies an icon to display at the end of the component.                                                                                          | `string`                     | `undefined` |\n| `iconFlipRtl` | `icon-flip-rtl` | Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`"rtl"`).                                        | `"both" \\| "end" \\| "start"` | `undefined` |\n| `iconStart`   | `icon-start`    | Specifies an icon to display at the start of the component.                                                                                        | `string`                     | `undefined` |\n| `selected`    | `selected`      | When `true`, the component and its respective `calcite-tab` contents are selected.  Only one tab can be selected within the `calcite-tabs` parent. | `boolean`                    | `false`     |\n| `tab`         | `tab`           | Specifies a unique name for the component.  When specified, use the same value on the `calcite-tab`.                                               | `string`                     | `undefined` |\n\n\n## Events\n\n| Event                 | Description                             | Type                |\n| --------------------- | --------------------------------------- | ------------------- |\n| `calciteTabsActivate` | Fires when a `calcite-tab` is selected. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `getTabIndex() => Promise<number>`\n\nReturns the index of the title within the `calcite-tab-nav`.\n\n#### Returns\n\nType: `Promise<number>`\n\n\n\n\n## Slots\n\n| Slot | Description             |\n| ---- | ----------------------- |\n|      | A slot for adding text. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-color-picker](../color-picker)\n\n### Depends on\n\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-tab-title --\x3e calcite-icon\n  calcite-color-picker --\x3e calcite-tab-title\n  style calcite-tab-title fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n']}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-tabs
    dir="rtl"
    class="calcite-mode-dark"
    layout="${Object(dist.select)("layout",["inline","center"],"inline")}"
    position="${Object(dist.select)("position",["top","bottom"],"top")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    <calcite-tab-nav slot="title-group">
      <calcite-tab-title selected>Tab 1 Title</calcite-tab-title>
      <calcite-tab-title>Tab 2 Title</calcite-tab-title>
      <calcite-tab-title disabled>Disabled Tab</calcite-tab-title>
      <calcite-tab-title>Tab 4 Title</calcite-tab-title>
    </calcite-tab-nav>
    <calcite-tab selected><p>Tab 1 Content</p></calcite-tab>
    <calcite-tab><p>Tab 2 Content</p></calcite-tab>
    <calcite-tab><p>Tab 3 Content</p></calcite-tab>
    <calcite-tab><p>Tab 4 Content</p></calcite-tab>
  </calcite-tabs>
`});simpleDarkModeRTL_TestOnly.parameters={modes:utils.e};var bordered=function(){return formatting.a`
  <calcite-tabs
    layout="${Object(dist.select)("layout",["inline","center"],"inline")}"
    position="${Object(dist.select)("position",["top","bottom"],"top")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    bordered
  >
    <calcite-tab-nav slot="title-group">
      <calcite-tab-title tab="tab1">Tab 1 Title</calcite-tab-title>
      <calcite-tab-title tab="tab2">Tab 2 Title</calcite-tab-title>
      <calcite-tab-title tab="tab3">Tab 3 Title</calcite-tab-title>
      <calcite-tab-title tab="tab4" selected>Tab 4 Title</calcite-tab-title>
    </calcite-tab-nav>
    <calcite-tab tab="tab1">Tab 1 Content</calcite-tab>
    <calcite-tab tab="tab2">Tab 2 Content</calcite-tab>
    <calcite-tab tab="tab3">Tab 3 Content</calcite-tab>
    <calcite-tab tab="tab4" selected>Tab 4 Content</calcite-tab>
  </calcite-tabs>
`},borderedDarkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-tabs
    layout="inline"
    position="${Object(dist.select)("position",["top","bottom"],"top")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    bordered
    dir="rtl"
    class="calcite-mode-dark"
  >
    <calcite-tab-nav slot="title-group">
      <calcite-tab-title tab="tab1">Tab 1 Title</calcite-tab-title>
      <calcite-tab-title tab="tab2">Tab 2 Title</calcite-tab-title>
      <calcite-tab-title tab="tab3">Tab 3 Title</calcite-tab-title>
      <calcite-tab-title tab="tab4" selected>Tab 4 Title</calcite-tab-title>
    </calcite-tab-nav>
    <calcite-tab tab="tab1">Tab 1 Content</calcite-tab>
    <calcite-tab tab="tab2">Tab 2 Content</calcite-tab>
    <calcite-tab tab="tab3">Tab 3 Content</calcite-tab>
    <calcite-tab tab="tab4" selected>Tab 4 Content</calcite-tab>
  </calcite-tabs>
`};borderedDarkModeRTL_TestOnly.parameters={modes:utils.e};var selectedIcon=helpers.b[0],withIcons=function(){return formatting.a`
  <calcite-tabs
    layout="${Object(dist.select)("layout",["inline","center"],"inline")}"
    position="${Object(dist.select)("position",["top","bottom"],"top")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    <calcite-tab-nav slot="title-group">
      <calcite-tab-title selected icon-start="${Object(dist.select)("tab 1 icon-start",helpers.b,selectedIcon)}"
        >Tab 1 Title</calcite-tab-title
      >
      <calcite-tab-title icon-end="${Object(dist.select)("tab 2 icon-end",helpers.b,selectedIcon)}">Tab 2 Title</calcite-tab-title>
      <calcite-tab-title
        icon-start="${Object(dist.select)("tab 3 icon-start",helpers.b,selectedIcon)}"
        icon-end="${Object(dist.select)("tab 3 icon-end",helpers.b,selectedIcon)}"
        >Tab 3 Title</calcite-tab-title
      >
      <calcite-tab-title icon-start="${Object(dist.select)("tab 4 icon-start",helpers.b,selectedIcon)}"></calcite-tab-title>
    </calcite-tab-nav>

    <calcite-tab selected><p>Tab 1 Content</p></calcite-tab>
    <calcite-tab><p>Tab 2 Content</p></calcite-tab>
    <calcite-tab><p>Tab 3 Content</p></calcite-tab>
    <calcite-tab><p>Tab 4 Content</p></calcite-tab>
  </calcite-tabs>
`},setWidth=function(){return formatting.a`
  <div style="width: 400px;">
    <calcite-tabs
    layout="${Object(dist.select)("layout",["inline","center"],"inline")}"
    position="${Object(dist.select)("position",["top","bottom"],"top")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    >
    <calcite-tab-nav slot="title-group">
      <calcite-tab-title selected>Tab 1 Title</calcite-tab-title>
      <calcite-tab-title id="reference-element">Tab 2 Title</calcite-tab-title>
      <calcite-tab-title>Tab 3 Title</calcite-tab-title>
      <calcite-tab-title>Tab 4 Title</calcite-tab-title>
    </calcite-tab-nav>

    <calcite-tab selected>
      <p>Tab 1 Content</p><br />
    </calcite-tab>
    <calcite-tab><p>Tab 2 Content</p>
    <img src="${Object(placeholderImage.a)({width:1e3,height:200})}"></img>
    </calcite-tab>
    <calcite-tab><p>Tab 3 Content</p></calcite-tab>
    <calcite-tab><p>Tab 4 Content</p></calcite-tab>
    </calcite-tabs>
  </div>
`},justTabNav=function(){return formatting.a`
  <calcite-tab-nav
    position="${Object(dist.select)("position",["top","bottom"],"top")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"l")}"
  >
    <calcite-tab-title>Tab 1 Title</calcite-tab-title>
    <calcite-tab-title>Tab 2 Title</calcite-tab-title>
    <calcite-tab-title>Tab 3 Title</calcite-tab-title>
    <calcite-tab-title selected>Tab 4 Title</calcite-tab-title>
  </calcite-tab-nav>
`},disabledTabsAndMediumIconsForLargeTabsTitle_TestOnly=function(){return formatting.a`
  <calcite-tabs scale="l">
    <calcite-tab-nav slot="title-group">
      <calcite-tab-title selected>Tab 1 Title</calcite-tab-title>
      <calcite-tab-title disabled icon-start="arrow-left">Tab 2 Title</calcite-tab-title>
      <calcite-tab-title disabled icon-start="arrow-left" icon-end="arrow-right">Tab 3 Title</calcite-tab-title>
    </calcite-tab-nav>

    <calcite-tab><p>Tab 1 Content</p></calcite-tab>
    <calcite-tab><p>Tab 2 Content</p></calcite-tab>
    <calcite-tab><p>Tab 3 Content</p></calcite-tab>
  </calcite-tabs>
`},TabChildrenWithPercentageHeights=function(){return formatting.a`
  <calcite-tabs style="height: 250px;">
    <calcite-tab-nav slot="title-group">
      <calcite-tab-title selected>Boats</calcite-tab-title>
    </calcite-tab-nav>
    <calcite-tab style="background: pink;">
      <div style="background: red; height: 100%;">Tab 1 content</div>
    </calcite-tab>
  </calcite-tabs>
`};TabChildrenWithPercentageHeights.parameters={chromatic:{delay:1e3}},simpleDarkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tabs\n    dir="rtl"\n    class="calcite-mode-dark"\n    layout="${select("layout", ["inline", "center"], "inline")}"\n    position="${select("position", ["top", "bottom"], "top")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    <calcite-tab-nav slot="title-group">\n      <calcite-tab-title selected>Tab 1 Title</calcite-tab-title>\n      <calcite-tab-title>Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title disabled>Disabled Tab</calcite-tab-title>\n      <calcite-tab-title>Tab 4 Title</calcite-tab-title>\n    </calcite-tab-nav>\n    <calcite-tab selected><p>Tab 1 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 2 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 3 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 4 Content</p></calcite-tab>\n  </calcite-tabs>\n`'}},simpleDarkModeRTL_TestOnly.parameters),bordered.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tabs\n    layout="${select("layout", ["inline", "center"], "inline")}"\n    position="${select("position", ["top", "bottom"], "top")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    bordered\n  >\n    <calcite-tab-nav slot="title-group">\n      <calcite-tab-title tab="tab1">Tab 1 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab2">Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab3">Tab 3 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab4" selected>Tab 4 Title</calcite-tab-title>\n    </calcite-tab-nav>\n    <calcite-tab tab="tab1">Tab 1 Content</calcite-tab>\n    <calcite-tab tab="tab2">Tab 2 Content</calcite-tab>\n    <calcite-tab tab="tab3">Tab 3 Content</calcite-tab>\n    <calcite-tab tab="tab4" selected>Tab 4 Content</calcite-tab>\n  </calcite-tabs>\n`'}},bordered.parameters),borderedDarkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tabs\n    layout="inline"\n    position="${select("position", ["top", "bottom"], "top")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    bordered\n    dir="rtl"\n    class="calcite-mode-dark"\n  >\n    <calcite-tab-nav slot="title-group">\n      <calcite-tab-title tab="tab1">Tab 1 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab2">Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab3">Tab 3 Title</calcite-tab-title>\n      <calcite-tab-title tab="tab4" selected>Tab 4 Title</calcite-tab-title>\n    </calcite-tab-nav>\n    <calcite-tab tab="tab1">Tab 1 Content</calcite-tab>\n    <calcite-tab tab="tab2">Tab 2 Content</calcite-tab>\n    <calcite-tab tab="tab3">Tab 3 Content</calcite-tab>\n    <calcite-tab tab="tab4" selected>Tab 4 Content</calcite-tab>\n  </calcite-tabs>\n`'}},borderedDarkModeRTL_TestOnly.parameters),withIcons.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tabs\n    layout="${select("layout", ["inline", "center"], "inline")}"\n    position="${select("position", ["top", "bottom"], "top")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    <calcite-tab-nav slot="title-group">\n      <calcite-tab-title selected icon-start="${select("tab 1 icon-start", iconNames, selectedIcon)}"\n        >Tab 1 Title</calcite-tab-title\n      >\n      <calcite-tab-title icon-end="${select("tab 2 icon-end", iconNames, selectedIcon)}">Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title\n        icon-start="${select("tab 3 icon-start", iconNames, selectedIcon)}"\n        icon-end="${select("tab 3 icon-end", iconNames, selectedIcon)}"\n        >Tab 3 Title</calcite-tab-title\n      >\n      <calcite-tab-title icon-start="${select("tab 4 icon-start", iconNames, selectedIcon)}"></calcite-tab-title>\n    </calcite-tab-nav>\n\n    <calcite-tab selected><p>Tab 1 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 2 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 3 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 4 Content</p></calcite-tab>\n  </calcite-tabs>\n`'}},withIcons.parameters),setWidth.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px;">\n    <calcite-tabs\n    layout="${select("layout", ["inline", "center"], "inline")}"\n    position="${select("position", ["top", "bottom"], "top")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    >\n    <calcite-tab-nav slot="title-group">\n      <calcite-tab-title selected>Tab 1 Title</calcite-tab-title>\n      <calcite-tab-title id="reference-element">Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title>Tab 3 Title</calcite-tab-title>\n      <calcite-tab-title>Tab 4 Title</calcite-tab-title>\n    </calcite-tab-nav>\n\n    <calcite-tab selected>\n      <p>Tab 1 Content</p><br />\n    </calcite-tab>\n    <calcite-tab><p>Tab 2 Content</p>\n    <img src="${placeholderImage({\n      width: 1000,\n      height: 200\n    })}"></img>\n    </calcite-tab>\n    <calcite-tab><p>Tab 3 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 4 Content</p></calcite-tab>\n    </calcite-tabs>\n  </div>\n`'}},setWidth.parameters),justTabNav.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tab-nav\n    position="${select("position", ["top", "bottom"], "top")}"\n    scale="${select("scale", ["s", "m", "l"], "l")}"\n  >\n    <calcite-tab-title>Tab 1 Title</calcite-tab-title>\n    <calcite-tab-title>Tab 2 Title</calcite-tab-title>\n    <calcite-tab-title>Tab 3 Title</calcite-tab-title>\n    <calcite-tab-title selected>Tab 4 Title</calcite-tab-title>\n  </calcite-tab-nav>\n`'}},justTabNav.parameters),disabledTabsAndMediumIconsForLargeTabsTitle_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tabs scale="l">\n    <calcite-tab-nav slot="title-group">\n      <calcite-tab-title selected>Tab 1 Title</calcite-tab-title>\n      <calcite-tab-title disabled icon-start="arrow-left">Tab 2 Title</calcite-tab-title>\n      <calcite-tab-title disabled icon-start="arrow-left" icon-end="arrow-right">Tab 3 Title</calcite-tab-title>\n    </calcite-tab-nav>\n\n    <calcite-tab><p>Tab 1 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 2 Content</p></calcite-tab>\n    <calcite-tab><p>Tab 3 Content</p></calcite-tab>\n  </calcite-tabs>\n`'}},disabledTabsAndMediumIconsForLargeTabsTitle_TestOnly.parameters),TabChildrenWithPercentageHeights.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tabs style="height: 250px;">\n    <calcite-tab-nav slot="title-group">\n      <calcite-tab-title selected>Boats</calcite-tab-title>\n    </calcite-tab-nav>\n    <calcite-tab style="background: pink;">\n      <div style="background: red; height: 100%;">Tab 1 content</div>\n    </calcite-tab>\n  </calcite-tabs>\n`'}},TabChildrenWithPercentageHeights.parameters)},"./src/components/text-area/text-area.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"withSlottedElements",(function(){return withSlottedElements})),__webpack_require__.d(__webpack_exports__,"withSlottedElementsDarkModeRTL_TestOnly",(function(){return withSlottedElementsDarkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"readonly_TestOnly",(function(){return readonly_TestOnly})),__webpack_require__.d(__webpack_exports__,"resizeDisabled_TestOnly",(function(){return resizeDisabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"groupSeparator_TestOnly",(function(){return groupSeparator_TestOnly})),__webpack_require__.d(__webpack_exports__,"exceedingMaxLength_TestOnly",(function(){return exceedingMaxLength_TestOnly})),__webpack_require__.d(__webpack_exports__,"chineseLangNumberingSystem_TestOnly",(function(){return chineseLangNumberingSystem_TestOnly})),__webpack_require__.d(__webpack_exports__,"insideContainerWithHeightAndWidth_TestOnly",(function(){return insideContainerWithHeightAndWidth_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/TextArea",parameters:{notes:'# calcite-text-area\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-text-area placeholder="Add Notes"></calcite-text-area>\n```\n\n\n### Exceeding-max-length\n\nRenders text-area with character limit counter.\n\n```html\n<calcite-text-area placeholder="Add Notes" value="Rocky Mountains National Park" max-length="20"></calcite-text-area>\n```\n\n\n\n## Properties\n\n| Property           | Attribute          | Description                                                                                                                                                                | Type                                                                                                                                                                                                                                    | Default     |\n| ------------------ | ------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `autofocus`        | `autofocus`        | When `true`, the component is focused on page load. Only one element can contain `autofocus`. If multiple elements have `autofocus`, the first element will receive focus. | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `columns`          | `columns`          | Specifies the component\'s number of columns.                                                                                                                               | `number`                                                                                                                                                                                                                                | `undefined` |\n| `disabled`         | `disabled`         | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                   | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `form`             | `form`             | The ID of the form that will be associated with the component.  When not set, the component will be associated with its ancestor `<form>` element, if any.                 | `string`                                                                                                                                                                                                                                | `undefined` |\n| `groupSeparator`   | `group-separator`  | When `true`, number values are displayed with a group separator corresponding to the language and country format.                                                          | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `label`            | `label`            | Accessible name for the component.                                                                                                                                         | `string`                                                                                                                                                                                                                                | `undefined` |\n| `maxLength`        | `max-length`       | Specifies the maximum number of characters allowed.                                                                                                                        | `number`                                                                                                                                                                                                                                | `undefined` |\n| `messageOverrides` | --                 | Use this property to override individual strings used by the component.                                                                                                    | `{ invalid?: string; tooLong?: string; }`                                                                                                                                                                                               | `undefined` |\n| `name`             | `name`             | Specifies the name of the component.                                                                                                                                       | `string`                                                                                                                                                                                                                                | `undefined` |\n| `numberingSystem`  | `numbering-system` | Specifies the Unicode numeral system used by the component for localization.                                                                                               | `"arab" \\| "arabext" \\| "bali" \\| "beng" \\| "deva" \\| "fullwide" \\| "gujr" \\| "guru" \\| "hanidec" \\| "khmr" \\| "knda" \\| "laoo" \\| "latn" \\| "limb" \\| "mlym" \\| "mong" \\| "mymr" \\| "orya" \\| "tamldec" \\| "telu" \\| "thai" \\| "tibt"` | `undefined` |\n| `placeholder`      | `placeholder`      | Specifies the placeholder text for the component.                                                                                                                          | `string`                                                                                                                                                                                                                                | `undefined` |\n| `readOnly`         | `read-only`        | When `true`, the component\'s `value` can be read, but cannot be modified.                                                                                                  | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `required`         | `required`         | When `true`, the component must have a value in order for the form to submit.                                                                                              | `boolean`                                                                                                                                                                                                                               | `false`     |\n| `resize`           | `resize`           | Specifies if the component is resizable.                                                                                                                                   | `"both" \\| "horizontal" \\| "none" \\| "vertical"`                                                                                                                                                                                        | `"both"`    |\n| `rows`             | `rows`             | Specifies the component\'s number of rows.                                                                                                                                  | `number`                                                                                                                                                                                                                                | `undefined` |\n| `scale`            | `scale`            | Specifies the size of the component.                                                                                                                                       | `"l" \\| "m" \\| "s"`                                                                                                                                                                                                                     | `"m"`       |\n| `value`            | `value`            | The component\'s value.                                                                                                                                                     | `string`                                                                                                                                                                                                                                | `undefined` |\n| `wrap`             | `wrap`             | Specifies the wrapping mechanism for the text.                                                                                                                             | `"hard" \\| "soft"`                                                                                                                                                                                                                      | `"soft"`    |\n\n\n## Events\n\n| Event                   | Description                                           | Type                |\n| ----------------------- | ----------------------------------------------------- | ------------------- |\n| `calciteTextAreaChange` | Fires each time a new `value` is typed and committed. | `CustomEvent<void>` |\n| `calciteTextAreaInput`  | Fires each time a new `value` is typed.               | `CustomEvent<void>` |\n\n\n## Methods\n\n### `selectText() => Promise<void>`\n\nSelects the text of the component\'s `value`.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot             | Description                                                       |\n| ---------------- | ----------------------------------------------------------------- |\n|                  | A slot for adding text.                                           |\n| `"footer-end"`   | A slot for adding content to the end of the component\'s footer.   |\n| `"footer-start"` | A slot for adding content to the start of the component\'s footer. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-text-area
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    placeholder="${Object(dist.text)("placeholder","Add Notes")}"
    ${Object(helpers.a)("disabled",!1)}
    columns="${Object(dist.number)("columns",20)}"
    resize="${Object(dist.text)("resize","both")}
    rows="${Object(dist.number)("rows",2)}"
    label="${Object(dist.text)("label","")}"
    name="${Object(dist.text)("name","")}"
  >
  </calcite-text-area>
`}),darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-text-area dir="rtl" class="calcite-mode-dark"> </calcite-text-area>
`},withSlottedElements=function(){return formatting.a`
  <calcite-text-area
    placeholder="${Object(dist.text)("placeholder","Add Notes")}"
    max-length="${Object(dist.number)("max-length",50)}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
    placeholder="${Object(dist.text)("placeholder","Add Notes")}"
    ${Object(helpers.a)("disabled",!1)}
    columns="${Object(dist.number)("columns",20)}"
    rows="${Object(dist.number)("rows",2)}"
    ${Object(helpers.a)("required",!1)}
    ${Object(helpers.a)("readonly",!1)}
    label="${Object(dist.text)("label","")}"
    name="${Object(dist.text)("name","")}"
  >
    <calcite-button slot="${Object(dist.text)("slot","footer-start")}">RESET</calcite-button>
    <calcite-action icon="code" slot="${Object(dist.text)("slot","footer-end")}"></calcite-action>
  </calcite-text-area>
`},withSlottedElementsDarkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-text-area max-length="50" placeholder="Add Notes" dir="rtl" class="calcite-mode-dark">
    <calcite-button slot="${Object(dist.text)("slot","footer-start")}">RESET</calcite-button>
    <calcite-action icon="code" slot="${Object(dist.text)("slot","footer-end")}"></calcite-action>
  </calcite-text-area>
`},disabled_TestOnly=function(){return formatting.a` <calcite-text-area disabled> </calcite-text-area> `},readonly_TestOnly=function(){return formatting.a` <calcite-text-area readonly> </calcite-text-area> `},resizeDisabled_TestOnly=function(){return formatting.a` <calcite-text-area resize="none"> </calcite-text-area> `},groupSeparator_TestOnly=function(){return formatting.a`
  <calcite-text-area value="Rocky Mountains National Park" lang="fr" max-length="123456" group-separator>
  </calcite-text-area>
`},exceedingMaxLength_TestOnly=function(){return formatting.a`
  <calcite-text-area value="Rocky Mountains National Park" max-length="10"> </calcite-text-area>
`},chineseLangNumberingSystem_TestOnly=function(){return formatting.a`
  <calcite-text-area
    value="Rocky Mountains National Park"
    lang="zh-cn"
    numbering-system="hanidec"
    group-separator
    max-length="654321"
  >
  </calcite-text-area>
`},insideContainerWithHeightAndWidth_TestOnly=function(){return formatting.a`<div style="width:500px;height:500px"><calcite-text-area></calcite-text-area></div>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-text-area\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    placeholder="${text("placeholder", "Add Notes")}"\n    ${boolean("disabled", false)}\n    columns="${number("columns", 20)}"\n    resize="${text("resize", "both")}\n    rows="${number("rows", 2)}"\n    label="${text("label", "")}"\n    name="${text("name", "")}"\n  >\n  </calcite-text-area>\n`'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-text-area dir="rtl" class="calcite-mode-dark"> </calcite-text-area>\n`'}},darkModeRTL_TestOnly.parameters),withSlottedElements.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-text-area\n    placeholder="${text("placeholder", "Add Notes")}"\n    max-length="${number("max-length", 50)}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n    placeholder="${text("placeholder", "Add Notes")}"\n    ${boolean("disabled", false)}\n    columns="${number("columns", 20)}"\n    rows="${number("rows", 2)}"\n    ${boolean("required", false)}\n    ${boolean("readonly", false)}\n    label="${text("label", "")}"\n    name="${text("name", "")}"\n  >\n    <calcite-button slot="${text("slot", "footer-start")}">RESET</calcite-button>\n    <calcite-action icon="code" slot="${text("slot", "footer-end")}"></calcite-action>\n  </calcite-text-area>\n`'}},withSlottedElements.parameters),withSlottedElementsDarkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-text-area max-length="50" placeholder="Add Notes" dir="rtl" class="calcite-mode-dark">\n    <calcite-button slot="${text("slot", "footer-start")}">RESET</calcite-button>\n    <calcite-action icon="code" slot="${text("slot", "footer-end")}"></calcite-action>\n  </calcite-text-area>\n`'}},withSlottedElementsDarkModeRTL_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:"(): string => html` <calcite-text-area disabled> </calcite-text-area> `"}},disabled_TestOnly.parameters),readonly_TestOnly.parameters=Object.assign({storySource:{source:"(): string => html` <calcite-text-area readonly> </calcite-text-area> `"}},readonly_TestOnly.parameters),resizeDisabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html` <calcite-text-area resize="none"> </calcite-text-area> `'}},resizeDisabled_TestOnly.parameters),groupSeparator_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-text-area value="Rocky Mountains National Park" lang="fr" max-length="123456" group-separator>\n  </calcite-text-area>\n`'}},groupSeparator_TestOnly.parameters),exceedingMaxLength_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-text-area value="Rocky Mountains National Park" max-length="10"> </calcite-text-area>\n`'}},exceedingMaxLength_TestOnly.parameters),chineseLangNumberingSystem_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-text-area\n    value="Rocky Mountains National Park"\n    lang="zh-cn"\n    numbering-system="hanidec"\n    group-separator\n    max-length="654321"\n  >\n  </calcite-text-area>\n`'}},chineseLangNumberingSystem_TestOnly.parameters),insideContainerWithHeightAndWidth_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width:500px;height:500px"><calcite-text-area></calcite-text-area></div>`'}},insideContainerWithHeightAndWidth_TestOnly.parameters)},"./src/components/tile-select-group/tile-select-group.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),tileSelectsHTML=(__webpack_exports__.default=Object.assign({title:"Components/Tiles/Tile Select Group",parameters:{notes:'# calcite-tile-select-group\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property   | Attribute  | Description                                                                                              | Type                         | Default        |\n| ---------- | ---------- | -------------------------------------------------------------------------------------------------------- | ---------------------------- | -------------- |\n| `disabled` | `disabled` | When `true`, interaction is prevented and the component is displayed with lower opacity.                 | `boolean`                    | `false`        |\n| `layout`   | `layout`   | Defines the layout of the component.  Use `"horizontal"` for rows, and `"vertical"` for a single column. | `"horizontal" \\| "vertical"` | `"horizontal"` |\n\n\n## Slots\n\n| Slot | Description                                       |\n| ---- | ------------------------------------------------- |\n|      | A slot for adding `calcite-tile-select` elements. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-tile-select
    checked
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum Tile title lorem ipsum"
    icon="layers"
    name="light"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
    width="${Object(dist.select)("width",["full","auto"],"auto","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
    value="one"
  >
  </calcite-tile-select>
  <calcite-tile-select
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="Tile title lorem ipsum"
    icon="layers"
    name="light"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
    width="${Object(dist.select)("width",["full","auto"],"auto","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
    value="two"
  >
  </calcite-tile-select>
  <calcite-tile-select
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall. Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="Tile title lorem ipsum"
    icon="layers"
    name="light"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
    width="${Object(dist.select)("width",["full","auto"],"auto","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
    value="three"
  >
  </calcite-tile-select>
  <calcite-tile-select
    description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.  Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."
    heading="TiletitleloremipsumTiletitleloremipsumTiletitleloremipsumTiletitleloremipsumTiletitleloremipsumTiletitleloremipsum"
    icon="layers"
    name="light"
    ${Object(dist.boolean)("input-enabled",!0,"Tile Select")&&"input-enabled"}
    input-alignment="${Object(dist.select)("input-alignment",["start","end"],"start","Tile Select")}"
    width="${Object(dist.select)("width",["full","auto"],"auto","Tile Select")}"
    type="${Object(dist.select)("type",["radio","checkbox"],"radio","Tile Select")}"
    value="four"
  >
  </calcite-tile-select>
`}),simple=function(){return formatting.a`
  <calcite-tile-select-group
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal","Tile Select Group")}"
    dir="${Object(dist.select)("dir",["ltr","rtl"],"ltr","Tile Select Group")}"
  >
    ${tileSelectsHTML()}
  </calcite-tile-select-group>
`},disabled_TestOnly=function(){return formatting.a`
  <calcite-tile-select-group
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal","Tile Select Group")}"
    dir="${Object(dist.select)("dir",["ltr","rtl"],"ltr","Tile Select Group")}"
  >
    ${tileSelectsHTML()}
  </calcite-tile-select-group>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-tile-select-group
    layout="${Object(dist.select)("layout",["horizontal","vertical"],"horizontal","Tile Select Group")}"
    dir="${Object(dist.select)("dir",["ltr","rtl"],"rtl","Tile Select Group")}"
    class="calcite-mode-dark"
  >
    ${tileSelectsHTML()}
  </calcite-tile-select-group>
`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile-select-group\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal", "Tile Select Group")}"\n    dir="${select("dir", ["ltr", "rtl"], "ltr", "Tile Select Group")}"\n  >\n    ${tileSelectsHTML()}\n  </calcite-tile-select-group>\n`'}},simple.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile-select-group\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal", "Tile Select Group")}"\n    dir="${select("dir", ["ltr", "rtl"], "ltr", "Tile Select Group")}"\n  >\n    ${tileSelectsHTML()}\n  </calcite-tile-select-group>\n`'}},disabled_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile-select-group\n    layout="${select("layout", ["horizontal", "vertical"], "horizontal", "Tile Select Group")}"\n    dir="${select("dir", ["ltr", "rtl"], "rtl", "Tile Select Group")}"\n    class="calcite-mode-dark"\n  >\n    ${tileSelectsHTML()}\n  </calcite-tile-select-group>\n`'}},darkModeRTL_TestOnly.parameters)},"./src/components/tile-select/tile-select.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"checkbox_TestOnly",(function(){return checkbox_TestOnly})),__webpack_require__.d(__webpack_exports__,"radio_TestOnly",(function(){return radio_TestOnly})),__webpack_require__.d(__webpack_exports__,"checkboxDarkModeRTL_TestOnly",(function(){return checkboxDarkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"radiodarkModeRTL_TestOnly",(function(){return radiodarkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"checkboxWidthFull_TestOnly",(function(){return checkboxWidthFull_TestOnly})),__webpack_require__.d(__webpack_exports__,"radioWidthFull_TestOnly",(function(){return radioWidthFull_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts");function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default=Object.assign({title:"Components/Tiles/Tile Select",parameters:{notes:'# calcite-tile-select\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-tile-select\n  checked\n  input-enabled\n  description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n  heading="Tile heading lorem ipsum"\n  icon="layer"\n  input-alignment="end"\n  type="radio"\n  value="one"\n></calcite-tile-select>\n```\n\n\n\n## Properties\n\n| Property         | Attribute         | Description                                                                                                 | Type                    | Default     |\n| ---------------- | ----------------- | ----------------------------------------------------------------------------------------------------------- | ----------------------- | ----------- |\n| `checked`        | `checked`         | When `true`, the component is checked.                                                                      | `boolean`               | `false`     |\n| `description`    | `description`     | A description for the component, which displays below the heading.                                          | `string`                | `undefined` |\n| `disabled`       | `disabled`        | When `true`, interaction is prevented and the component is displayed with lower opacity.                    | `boolean`               | `false`     |\n| `heading`        | `heading`         | The component header text, which displays between the icon and description.                                 | `string`                | `undefined` |\n| `hidden`         | `hidden`          | When `true`, the component is not displayed and is not focusable or checkable.                              | `boolean`               | `false`     |\n| `icon`           | `icon`            | Specifies an icon to display.                                                                               | `string`                | `undefined` |\n| `iconFlipRtl`    | `icon-flip-rtl`   | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).                | `boolean`               | `false`     |\n| `inputAlignment` | `input-alignment` | When `inputEnabled` is `true`, specifies the placement of the interactive input on the component.           | `"end" \\| "start"`      | `"start"`   |\n| `inputEnabled`   | `input-enabled`   | When `true`, displays an interactive input based on the `type` property.                                    | `boolean`               | `false`     |\n| `name`           | `name`            | Specifies the name of the component on form submission.                                                     | `any`                   | `undefined` |\n| `type`           | `type`            | The selection mode of the component.  Use radio for single selection, and checkbox for multiple selections. | `"checkbox" \\| "radio"` | `"radio"`   |\n| `value`          | `value`           | The component\'s value.                                                                                      | `any`                   | `undefined` |\n| `width`          | `width`           | Specifies the width of the component.                                                                       | `"auto" \\| "full"`      | `"auto"`    |\n\n\n## Events\n\n| Event                     | Description                                                                                                              | Type                |\n| ------------------------- | ------------------------------------------------------------------------------------------------------------------------ | ------------------- |\n| `calciteTileSelectChange` | Emits a custom change event.  For checkboxes it emits when checked or unchecked.  For radios it only emits when checked. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding custom content. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-tile](../tile)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-tile-select --\x3e calcite-tile\n  calcite-tile --\x3e calcite-icon\n  calcite-tile --\x3e calcite-link\n  calcite-link --\x3e calcite-icon\n  style calcite-tile-select fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)());var simple=function(){return formatting.a`${Object(utils.a)("calcite-tile-select",function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"checked",commit:function(){return this.value=Object(dist.boolean)("checked",!1),delete this.build,this}},{name:"description",commit:function(){return this.value=Object(dist.text)("description",""),delete this.build,this}},{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1),delete this.build,this}},{name:"heading",commit:function(){return this.value=Object(dist.text)("heading",""),delete this.build,this}},{name:"hidden",commit:function(){return this.value=Object(dist.boolean)("hidden",!1),delete this.build,this}},{name:"icon",commit:function(){return this.value=Object(dist.select)("icon",[""].concat(_toConsumableArray(helpers.b)),""),delete this.build,this}},{name:"input-alignment",commit:function(){return this.value=Object(dist.select)("input-alignment",["start","end"],"start"),delete this.build,this}},{name:"input-enabled",commit:function(){return this.value=Object(dist.boolean)("input-enabled",!1),delete this.build,this}},{name:"type",commit:function(){return this.value=Object(dist.select)("type",["radio","checkbox"],"radio"),delete this.build,this}},{name:"value",commit:function(){return this.value=Object(dist.text)("value","one"),delete this.build,this}},{name:"width",commit:function(){return this.value=Object(dist.select)("width",["auto","full"],"auto"),delete this.build,this}}],exceptions)}())}`},checkbox_TestOnly=function(){return formatting.a`<calcite-tile-select icon="check" heading="test" value="one" type="checkbox"></calcite-tile-select>`},radio_TestOnly=function(){return formatting.a`<calcite-tile-select icon="list-radio" heading="test" value="one" type="radio"></calcite-tile-select>`},checkboxDarkModeRTL_TestOnly=function(){return formatting.a`<calcite-tile-select
    class="calcite-mode-dark"
    dir="rtl"
    icon="check"
    heading="test"
    value="one"
    type="checkbox"
  ></calcite-tile-select>`},radiodarkModeRTL_TestOnly=function(){return formatting.a`<calcite-tile-select
    class="calcite-mode-dark"
    dir="rtl"
    icon="list-radio"
    heading="test"
    value="one"
    type="radio"
  ></calcite-tile-select>`},checkboxWidthFull_TestOnly=function(){return formatting.a`<calcite-tile-select
    icon="check"
    heading="test"
    value="one"
    type="checkbox"
    width="full"
  ></calcite-tile-select>`},radioWidthFull_TestOnly=function(){return formatting.a`<calcite-tile-select
    icon="list-radio"
    heading="test"
    value="one"
    type="radio"
    width="full"
  ></calcite-tile-select>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`${create("calcite-tile-select", createAttributes())}`'}},simple.parameters),checkbox_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-tile-select icon="check" heading="test" value="one" type="checkbox"></calcite-tile-select>`'}},checkbox_TestOnly.parameters),radio_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-tile-select icon="list-radio" heading="test" value="one" type="radio"></calcite-tile-select>`'}},radio_TestOnly.parameters),checkboxDarkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-tile-select\n    class="calcite-mode-dark"\n    dir="rtl"\n    icon="check"\n    heading="test"\n    value="one"\n    type="checkbox"\n  ></calcite-tile-select>`'}},checkboxDarkModeRTL_TestOnly.parameters),radiodarkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-tile-select\n    class="calcite-mode-dark"\n    dir="rtl"\n    icon="list-radio"\n    heading="test"\n    value="one"\n    type="radio"\n  ></calcite-tile-select>`'}},radiodarkModeRTL_TestOnly.parameters),checkboxWidthFull_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-tile-select\n    icon="check"\n    heading="test"\n    value="one"\n    type="checkbox"\n    width="full"\n  ></calcite-tile-select>`'}},checkboxWidthFull_TestOnly.parameters),radioWidthFull_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-tile-select\n    icon="list-radio"\n    heading="test"\n    value="one"\n    type="radio"\n    width="full"\n  ></calcite-tile-select>`'}},radioWidthFull_TestOnly.parameters)},"./src/components/tile/tile.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"largeTile",(function(){return largeTile})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"contentStartRTL_TestOnly",(function(){return contentStartRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"overflowingContent_TestOnly",(function(){return overflowingContent_TestOnly})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),simple=(__webpack_exports__.default=Object.assign({title:"Components/Tiles/Tile",parameters:{notes:'# calcite-tile\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-tile\n  description="Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n  heading="Tile heading lorem ipsum"\n  href="#"\n  icon="images"\n></calcite-tile>\n```\n\n\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                                 | Type      | Default     |\n| ------------- | --------------- | ----------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `active`      | `active`        | When `true`, the component is active.                                                                       | `boolean` | `false`     |\n| `description` | `description`   | A description for the component, which displays below the heading.                                          | `string`  | `undefined` |\n| `disabled`    | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity.                    | `boolean` | `false`     |\n| `embed`       | `embed`         | The component\'s embed mode.  When `true`, renders without a border and padding for use by other components. | `boolean` | `false`     |\n| `heading`     | `heading`       | The component header text, which displays between the icon and description.                                 | `string`  | `undefined` |\n| `hidden`      | `hidden`        | When `true`, the component is not displayed and is not focusable.                                           | `boolean` | `false`     |\n| `href`        | `href`          | When embed is `"false"`, the URL for the component.                                                         | `string`  | `undefined` |\n| `icon`        | `icon`          | Specifies an icon to display.                                                                               | `string`  | `undefined` |\n| `iconFlipRtl` | `icon-flip-rtl` | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).                | `boolean` | `false`     |\n\n\n## Slots\n\n| Slot              | Description                                                               |\n| ----------------- | ------------------------------------------------------------------------- |\n| `"content-end"`   | A slot for adding non-actionable elements after the component\'s content.  |\n| `"content-start"` | A slot for adding non-actionable elements before the component\'s content. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-tile-select](../tile-select)\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-link](../link)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-tile --\x3e calcite-icon\n  calcite-tile --\x3e calcite-link\n  calcite-link --\x3e calcite-icon\n  calcite-tile-select --\x3e calcite-tile\n  style calcite-tile fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <calcite-tile
    ${Object(helpers.a)("active",!1)}
    description="${Object(dist.text)("description","Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.")}"
    ${Object(helpers.a)("disabled",!1)}
    heading="${Object(dist.text)("heading","Tile heading lorem ipsum")}"
    ${Object(helpers.a)("hidden",!1)}
    href="${Object(dist.text)("href","#")}"
    icon="${Object(dist.select)("icon",helpers.b,"layer")}"
  >
  </calcite-tile>
`}),largeTile=function(){return formatting.a`
  <calcite-tile
    ${Object(helpers.a)("active",!1)}
    description=""
    heading="${Object(dist.text)("heading","Tile heading lorem ipsum!")}"
    ${Object(helpers.a)("disabled",!1)}
    ${Object(helpers.a)("hidden",!1)}
    href="${Object(dist.text)("href","#")}"
    icon="${Object(dist.select)("icon",helpers.b,"layer")}"
  >
  </calcite-tile>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-tile
    ${Object(helpers.a)("active",!1)}
    description="${Object(dist.text)("description","Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.")}"
    ${Object(helpers.a)("disabled",!1)}
    heading="${Object(dist.text)("heading","Tile heading lorem ipsum")}"
    ${Object(helpers.a)("hidden",!1)}
    href="${Object(dist.text)("href","#")}"
    icon="${Object(dist.select)("icon",helpers.b,"layer")}"
    class="calcite-mode-dark"
    dir="rtl"
  >
  </calcite-tile>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var contentStartRTL_TestOnly=function(){return formatting.a`
  <calcite-tile
    description="${Object(dist.text)("description","polygon layer")}"
    heading="${Object(dist.text)("heading","Percent of population that carpool to work")}"
    dir="rtl"
  >
    <calcite-icon scale="s" slot="content-start" icon="polygon"></calcite-icon>
    <calcite-icon scale="s" slot="content-end" icon="launch"></calcite-icon>
  </calcite-tile>
`},overflowingContent_TestOnly=function(){return formatting.a`
  <calcite-tile
    icon="2d-explore"
    heading="Example tile headinghfjkdlsahfjklsdahfjklsadhfjkldsahfjldkashfjdkalshfds;ahfjkldshafljkdsahfljksdahfdlsajkfhsadkljfhsdajklfhsdalkjfhdsalkjfhdsalf"
    description="Example tile description contenthfjdkslahfjkdsalhf sdajklfh ksdjahfljksadhfljkdsahfjklsdahfjlkdsahflkjdsahfjkdsahflkdjsahfldksajhfdsklajhfdsljkahfdsajkfhsadlkjfsadhfdsa"
    style="width:200px"
  ></calcite-tile>
`},disabled_TestOnly=function(){return formatting.a`
  <calcite-tile
    ${Object(helpers.a)("active",!1)}
    description="${Object(dist.text)("description","Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall.")}"
    ${Object(helpers.a)("disabled",!1)}
    heading="${Object(dist.text)("heading","Tile heading lorem ipsum")}"
    ${Object(helpers.a)("hidden",!1)}
    href="${Object(dist.text)("href","#")}"
    icon="${Object(dist.select)("icon",helpers.b,"layer")}"
  >
  </calcite-tile>
`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile\n    ${boolean("active", false)}\n    description="${text(\n      "description",\n      "Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    )}"\n    ${boolean("disabled", false)}\n    heading="${text("heading", "Tile heading lorem ipsum")}"\n    ${boolean("hidden", false)}\n    href="${text("href", "#")}"\n    icon="${select("icon", iconNames, "layer")}"\n  >\n  </calcite-tile>\n`'}},simple.parameters),largeTile.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile\n    ${boolean("active", false)}\n    description=""\n    heading="${text("heading", "Tile heading lorem ipsum!")}"\n    ${boolean("disabled", false)}\n    ${boolean("hidden", false)}\n    href="${text("href", "#")}"\n    icon="${select("icon", iconNames, "layer")}"\n  >\n  </calcite-tile>\n`'}},largeTile.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile\n    ${boolean("active", false)}\n    description="${text(\n      "description",\n      "Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    )}"\n    ${boolean("disabled", false)}\n    heading="${text("heading", "Tile heading lorem ipsum")}"\n    ${boolean("hidden", false)}\n    href="${text("href", "#")}"\n    icon="${select("icon", iconNames, "layer")}"\n    class="calcite-mode-dark"\n    dir="rtl"\n  >\n  </calcite-tile>\n`'}},darkModeRTL_TestOnly.parameters),contentStartRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile\n    description="${text("description", "polygon layer")}"\n    heading="${text("heading", "Percent of population that carpool to work")}"\n    dir="rtl"\n  >\n    <calcite-icon scale="s" slot="content-start" icon="polygon"></calcite-icon>\n    <calcite-icon scale="s" slot="content-end" icon="launch"></calcite-icon>\n  </calcite-tile>\n`'}},contentStartRTL_TestOnly.parameters),overflowingContent_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile\n    icon="2d-explore"\n    heading="Example tile headinghfjkdlsahfjklsdahfjklsadhfjkldsahfjldkashfjdkalshfds;ahfjkldshafljkdsahfljksdahfdlsajkfhsadkljfhsdajklfhsdalkjfhdsalkjfhdsalf"\n    description="Example tile description contenthfjdkslahfjkdsalhf sdajklfh ksdjahfljksadhfljkdsahfjklsdahfjlkdsahflkjdsahfjkdsahflkdjsahfldksajhfdsklajhfdsljkahfdsajkfhsadlkjfsadhfdsa"\n    style="width:200px"\n  ></calcite-tile>\n`'}},overflowingContent_TestOnly.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tile\n    ${boolean("active", false)}\n    description="${text(\n      "description",\n      "Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collab on thinking to further the overall."\n    )}"\n    ${boolean("disabled", false)}\n    heading="${text("heading", "Tile heading lorem ipsum")}"\n    ${boolean("hidden", false)}\n    href="${text("href", "#")}"\n    icon="${select("icon", iconNames, "layer")}"\n  >\n  </calcite-tile>\n`'}},disabled_TestOnly.parameters)},"./src/components/tip-manager/tip-manager.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"hebrewLocale_TestOnly",(function(){return hebrewLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"norwegianLocale_TestOnly",(function(){return norwegianLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"FrenchLocale_TestOnly",(function(){return FrenchLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"hongKongLocale_TestOnly",(function(){return hongKongLocale_TestOnly})),__webpack_require__.d(__webpack_exports__,"ukranianLocaleWithTipGroup_TestOnly",(function(){return ukranianLocaleWithTipGroup_TestOnly})),__webpack_require__.d(__webpack_exports__,"bosnianLocale_TestOnly",(function(){return bosnianLocale_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),placeholderImage=__webpack_require__("./.storybook/placeholderImage.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Tips/Tip Manager",parameters:{notes:'# calcite-tip-manager\n\nThe `calcite-tip-manager` component contains multiple `calcite-tip`s that a user can view through via interactive arrows to go back and forth through the tips in the deck.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nRenders a tip manager using a group of tips as well as a single tip.\n\n```html\n<calcite-tip-manager>\n  <calcite-tip-group group-title="Tip Manager heading">\n    <calcite-tip heading="Tip heading" selected>\n      <img slot="thumbnail" src="https://placeimg.com/200/200" alt="This is an image." />\n      <p>\n        Tip description lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n        labore et dolore magna aliqua.\n      </p>\n      <p>\n        This is another slotted paragraph. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n        aliquip ex ea commodo consequat.\n      </p>\n      <calcite-link href="https://www.esri.com" target="_blank" rel="noopener noreferrer">A calcite-link</calcite-link>\n    </calcite-tip>\n    <calcite-tip heading="The Long Trees" hidden>\n      <img slot="thumbnail" src="https://placeimg.com/200/200" alt="This is an image." />\n      <p>This tip has an image that is a pretty tall. And the text will run out before the end of the image.</p>\n      <p>In astronomy, the terms object and body are often used interchangeably.</p>\n      <calcite-link href="https://www.esri.com" target="_blank" rel="noopener noreferrer">A calcite-link</calcite-link>\n    </calcite-tip>\n  </calcite-tip-group>\n  <calcite-tip heading="Square Nature" hidden>\n    <img slot="thumbnail" src="https://placeimg.com/200/200" alt="This is an image." />\n    <p>This tip has an image that is square. And the text will run out before the end of the image.</p>\n    <p>In astronomy, the terms object and body are often used interchangeably.</p>\n    <p>\n      In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form\n      of a document without relying on meaningful content (also called greeking). Replacing the actual content with\n      placeholder text allows designers to design the form of the content before the content itself has been produced.\n    </p>\n    <calcite-link href="https://www.esri.com" target="_blank" rel="noopener noreferrer">A calcite-link</calcite-link>\n  </calcite-tip>\n  <calcite-tip heading="The lack of imagery" hidden>\n    <p>This tip has no image. As such, the content area will take up the entire width of the tip.</p>\n    <p>\n      This is the next paragraph and should show how wide the content area is now. Of course, the width of the overall\n      tip will affect things. In astronomy, the terms object and body are often used interchangeably.\n    </p>\n    <calcite-link href="https://www.esri.com" target="_blank" rel="noopener noreferrer">A calcite-link</calcite-link>\n  </calcite-tip>\n</calcite-tip-manager>\n```\n\n\n\n## Properties\n\n| Property           | Attribute       | Description                                                             | Type                                                                                                                 | Default     |\n| ------------------ | --------------- | ----------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `closed`           | `closed`        | When `true`, does not display or position the component.                | `boolean`                                                                                                            | `false`     |\n| `headingLevel`     | `heading-level` | Specifies the number at which section headings should start.            | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6`                                                                                         | `undefined` |\n| `messageOverrides` | --              | Use this property to override individual strings used by the component. | `{ defaultGroupTitle?: string; defaultPaginationLabel?: string; close?: string; previous?: string; next?: string; }` | `undefined` |\n\n\n## Events\n\n| Event                    | Description                               | Type                |\n| ------------------------ | ----------------------------------------- | ------------------- |\n| `calciteTipManagerClose` | Emits when the component has been closed. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `nextTip() => Promise<void>`\n\nSelects the next `calcite-tip` to display.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `previousTip() => Promise<void>`\n\nSelects the previous `calcite-tip` to display.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding `calcite-tip`s. |\n\n\n## CSS Custom Properties\n\n| Name                           | Description                                                        |\n| ------------------------------ | ------------------------------------------------------------------ |\n| `--calcite-tip-manager-height` | The maximum height of the component.                               |\n| `--calcite-tip-max-width`      | The maximum width of a slotted `calcite-tip` within the component. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-action](../action)\n- [calcite-icon](../icon)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-tip-manager --\x3e calcite-action\n  calcite-tip-manager --\x3e calcite-icon\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  style calcite-tip-manager fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"closed",commit:function(){return this.value=Object(dist.boolean)("closed",!1),delete this.build,this}}],exceptions)}),tipContent=formatting.a`
  <calcite-tip-group group-title="Astronomy">
    <calcite-tip heading="The Red Rocks and Blue Water" heading-level="2">
      <img slot="thumbnail" src="${Object(placeholderImage.a)({width:1e3,height:600})}" alt="This is an image." />
      <p>
        This tip is how a tip should really look. It has a landscape or square image and a small amount of text content.
        This paragraph is in an "info" slot.
      </p>
      <p>
        This is another paragraph in a subsequent "info" slot. In publishing and graphic design, Lorem ipsum is a
        placeholder text commonly used to demonstrate the visual form of a document without relying on meaningful
        content (also called greeking). Replacing the actual content with placeholder text allows designers to design
        the form of the content before the content itself has been produced.
      </p>
      <a href="http://www.esri.com">This is the "link" slot.</a>
    </calcite-tip>
    <calcite-tip heading="The Long Trees">
      <img slot="thumbnail" src="${Object(placeholderImage.a)({width:1e3,height:600})}" alt="This is an image." />
      <p>This tip has an image that is a pretty tall. And the text will run out before the end of the image.</p>
      <p>In astronomy, the terms object and body are often used interchangeably.</p>
      <a href="http://www.esri.com">View Esri</a>
    </calcite-tip>
  </calcite-tip-group>
  <calcite-tip heading="Square Nature">
    <img slot="thumbnail" src="${Object(placeholderImage.a)({width:1e3,height:1e3})}" alt="This is an image." />
    <p>This tip has an image that is square. And the text will run out before the end of the image.</p>
    <p>In astronomy, the terms object and body are often used interchangeably.</p>
    <p>
      In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form
      of a document without relying on meaningful content (also called greeking). Replacing the actual content with
      placeholder text allows designers to design the form of the content before the content itself has been produced.
    </p>
    <a href="http://www.esri.com">View Esri</a>
  </calcite-tip>
  <calcite-tip heading="The lack of imagery">
    <p>This tip has no image. As such, the content area will take up the entire width of the tip.</p>
    <p>
      This is the next paragraph and should show how wide the content area is now. Of course, the width of the overall
      tip will affect things. In astronomy, the terms object and body are often used interchangeably.
    </p>
    <a href="http://www.esri.com">View Esri</a>
  </calcite-tip>
`,simple=function(){return Object(utils.a)("calcite-tip-manager",createAttributes(),tipContent)},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-tip-manager",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}]),tipContent)};darkModeRTL_TestOnly.parameters={modes:utils.e};var hebrewLocale_TestOnly=function(){return formatting.a`<calcite-tip-manager heading-level="1" lang="he">
  <calcite-tip id="one" heading="test"><p>no pre-selected attribute</p></calcite-tip>
</calcite-tip-manager>`},norwegianLocale_TestOnly=function(){return formatting.a`<calcite-tip-manager lang="nb"
    ><calcite-tip><p>basic render</p></calcite-tip></calcite-tip-manager
  >`},FrenchLocale_TestOnly=function(){return formatting.a`<calcite-tip-manager lang="fr"
    ><calcite-tip><p>basic render</p></calcite-tip></calcite-tip-manager
  >`},hongKongLocale_TestOnly=function(){return formatting.a`<calcite-tip-manager lang="zh-HK"
    ><calcite-tip><p>basic render</p></calcite-tip></calcite-tip-manager
  >`},ukranianLocaleWithTipGroup_TestOnly=function(){return formatting.a`<calcite-tip-manager>
<calcite-tip-group group-title="Tip Manager heading">
    <calcite-tip heading="Example tip title">
    <calcite-tip><p>basic render</p></calcite-tip>
</calcite-tip-group>
</calcite-tip-manager>`},bosnianLocale_TestOnly=function(){return formatting.a`<calcite-tip-manager heading-level="1" lang="bs">
  <calcite-tip id="one" heading="test"><p>no pre-selected attribute</p></calcite-tip>
</calcite-tip-manager>`};simple.parameters=Object.assign({storySource:{source:'(): string => create("calcite-tip-manager", createAttributes(), tipContent)'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-tip-manager",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      { name: "dir", value: "rtl" },\n      { name: "class", value: "calcite-mode-dark" }\n    ]),\n    tipContent\n  )'}},darkModeRTL_TestOnly.parameters),hebrewLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-tip-manager heading-level="1" lang="he">\n  <calcite-tip id="one" heading="test"><p>no pre-selected attribute</p></calcite-tip>\n</calcite-tip-manager>`'}},hebrewLocale_TestOnly.parameters),norwegianLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-tip-manager lang="nb"\n    ><calcite-tip><p>basic render</p></calcite-tip></calcite-tip-manager\n  >`'}},norwegianLocale_TestOnly.parameters),FrenchLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-tip-manager lang="fr"\n    ><calcite-tip><p>basic render</p></calcite-tip></calcite-tip-manager\n  >`'}},FrenchLocale_TestOnly.parameters),hongKongLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<calcite-tip-manager lang="zh-HK"\n    ><calcite-tip><p>basic render</p></calcite-tip></calcite-tip-manager\n  >`'}},hongKongLocale_TestOnly.parameters),ukranianLocaleWithTipGroup_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-tip-manager>\n<calcite-tip-group group-title="Tip Manager heading">\n    <calcite-tip heading="Example tip title">\n    <calcite-tip><p>basic render</p></calcite-tip>\n</calcite-tip-group>\n</calcite-tip-manager>`'}},ukranianLocaleWithTipGroup_TestOnly.parameters),bosnianLocale_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<calcite-tip-manager heading-level="1" lang="bs">\n  <calcite-tip id="one" heading="test"><p>no pre-selected attribute</p></calcite-tip>\n</calcite-tip-manager>`'}},bosnianLocale_TestOnly.parameters)},"./src/components/tip/tip.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),utils=__webpack_require__("./.storybook/utils.tsx"),placeholderImage=__webpack_require__("./.storybook/placeholderImage.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Tips/Tip",parameters:{notes:['# calcite-tip\n\nThe `calcite-tip` component can comprise of an image, text and hyperlink to give helpful hints to a user about using the platform.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\nRenders a close-disabled tip with a heading, thumbnail, info and a link.\n\n```html\n<calcite-tip close-disabled heading="Celestial Bodies!">\n  <img slot="thumbnail" src="https://placeimg.com/1000/600" alt="This is an image of nature." />\n  <p>Normal tip with a landscape or square image and a small amount of text in the "info" slot.</p>\n  <a href="http://www.esri.com">Put a link hurr!</a>\n</calcite-tip>\n```\n\n\n\n## Properties\n\n| Property           | Attribute        | Description                                                                                                                                             | Type                         | Default     |\n| ------------------ | ---------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `closeDisabled`    | `close-disabled` | When `true`, the close button is not present on the component.                                                                                          | `boolean`                    | `false`     |\n| `closed`           | `closed`         | When `true`, the component does not display.                                                                                                            | `boolean`                    | `false`     |\n| `heading`          | `heading`        | The component header text.                                                                                                                              | `string`                     | `undefined` |\n| `headingLevel`     | `heading-level`  | Specifies the number at which section headings should start.                                                                                            | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6` | `undefined` |\n| `messageOverrides` | --               | Use this property to override individual strings used by the component.                                                                                 | `{ close?: string; }`        | `undefined` |\n| `selected`         | `selected`       | When `true`, the component is selected if it has a parent `calcite-tip-manager`.  Only one tip can be selected within the `calcite-tip-manager` parent. | `boolean`                    | `false`     |\n\n\n## Events\n\n| Event               | Description                               | Type                |\n| ------------------- | ----------------------------------------- | ------------------- |\n| `calciteTipDismiss` | Emits when the component has been closed. | `CustomEvent<void>` |\n\n\n## Slots\n\n| Slot          | Description                              |\n| ------------- | ---------------------------------------- |\n|               | A slot for adding text and a hyperlink.  |\n| `"thumbnail"` | A slot for adding an HTML image element. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-action](../action)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-tip --\x3e calcite-action\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  style calcite-tip fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',"# calcite-tip-group\n\n`calcite-tip-group` is a wrapper for multiple `calcite-tip`s and is housed in `calcite-tip-manager`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property     | Attribute     | Description                                              | Type     | Default     |\n| ------------ | ------------- | -------------------------------------------------------- | -------- | ----------- |\n| `groupTitle` | `group-title` | The component header text for all nested `calcite-tip`s. | `string` | `undefined` |\n\n\n## Slots\n\n| Slot | Description                       |\n| ---- | --------------------------------- |\n|      | A slot for adding `calcite-tip`s. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"]}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"closed",commit:function(){return this.value=Object(dist.boolean)("closed",!1),delete this.build,this}},{name:"close-disabled",commit:function(){return this.value=Object(dist.boolean)("closeDisabled",!1),delete this.build,this}},{name:"heading",commit:function(){return this.value=Object(dist.text)("heading","My Tip"),delete this.build,this}}],exceptions)}),html=`<img slot="thumbnail" src="${Object(placeholderImage.a)({width:1e3,height:600})}" alt="This is an image." />Enim nascetur erat faucibus ornare varius arcu fames bibendum habitant felis elit ante. Nibh morbi massa curae; leo semper diam aenean congue taciti eu porta. Varius faucibus ridiculus donec. Montes sit ligula purus porta ante lacus habitasse libero cubilia purus! In quis congue arcu maecenas felis cursus pellentesque nascetur porta donec non. Quisque, rutrum ligula pharetra justo habitasse facilisis rutrum neque. Magnis nostra nec nulla dictumst taciti consectetur. Non porttitor tempor orci dictumst magna porta vitae. </div><a href="http://www.esri.com">This is a link</a>.`,simple=function(){return Object(utils.a)("calcite-tip",createAttributes(),html)},darkModeRTL_TestOnly=function(){return Object(utils.a)("calcite-tip",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}]),html)};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => create("calcite-tip", createAttributes(), html)'}},simple.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string =>\n  create(\n    "calcite-tip",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      { name: "dir", value: "rtl" },\n      { name: "class", value: "calcite-mode-dark" }\n    ]),\n    html\n  )'}},darkModeRTL_TestOnly.parameters)},"./src/components/tooltip/tooltip.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"open_TestOnly",(function(){return open_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"rightAligned_TestOnly",(function(){return rightAligned_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),formatting=__webpack_require__("./support/formatting.ts"),helpers=__webpack_require__("./.storybook/helpers.ts"),floating_ui=__webpack_require__("./src/utils/floating-ui.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),contentHTML="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua",referenceElementHTML='Ut enim ad minim veniam, quis <calcite-button appearance="transparent" kind="neutral" id="reference-element">nostrud exercitation</calcite-button> ullamco laboris nisi ut aliquip ex ea commodo consequat.',simple=(__webpack_exports__.default=Object.assign({title:"Components/Tooltip",parameters:{notes:'# calcite-tooltip\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n```html\n<calcite-tooltip placement="auto" reference-element="tooltip-button"\n  >This is the message of the tooltip</calcite-tooltip\n>\n<span>\n  Lorem <a id="tooltip-button" href="#">ipsum</a> dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n  incididunt ut labore et dolore magna aliqua.\n</span>\n```\n\n\n### Virtual\n\n```html\n\x3c!-- virtually positioned tooltip --\x3e\n<calcite-tooltip id="virtual-tooltip" open>This is the message of the tooltip</calcite-tooltip>\n\n<script>\n  function generateGetBoundingClientRect() {\n    return () => ({\n      width: 0,\n      height: 0,\n      top: 100,\n      right: 100,\n      bottom: 100,\n      left: 600\n    });\n  }\n\n  const virtualElement = {\n    getBoundingClientRect: generateGetBoundingClientRect()\n  };\n\n  const tooltip = document.getElementById("virtual-tooltip");\n  tooltip.referenceElement = virtualElement;\n<\/script>\n```\n\n\n\n## Properties\n\n| Property             | Attribute             | Description                                                                                                                                                                                                                                                                                                                                                                             | Type                                                                                                                                                                                                                                                                                                              | Default                 |\n| -------------------- | --------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------- |\n| `closeOnClick`       | `close-on-click`      | Closes the component when the `referenceElement` is clicked.                                                                                                                                                                                                                                                                                                                            | `boolean`                                                                                                                                                                                                                                                                                                         | `false`                 |\n| `label` _(required)_ | `label`               | Accessible name for the component.                                                                                                                                                                                                                                                                                                                                                      | `string`                                                                                                                                                                                                                                                                                                          | `undefined`             |\n| `offsetDistance`     | `offset-distance`     | Offset the position of the component away from the `referenceElement`.                                                                                                                                                                                                                                                                                                                  | `number`                                                                                                                                                                                                                                                                                                          | `defaultOffsetDistance` |\n| `offsetSkidding`     | `offset-skidding`     | Offset the position of the component along the `referenceElement`.                                                                                                                                                                                                                                                                                                                      | `number`                                                                                                                                                                                                                                                                                                          | `0`                     |\n| `open`               | `open`                | When `true`, the component is open.                                                                                                                                                                                                                                                                                                                                                     | `boolean`                                                                                                                                                                                                                                                                                                         | `false`                 |\n| `overlayPositioning` | `overlay-positioning` | Determines the type of positioning to use for the overlaid content.  Using `"absolute"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container\'s layout.  The `"fixed"` value should be used to escape an overflowing parent container, or when the reference element\'s `position` CSS property is `"fixed"`. | `"absolute" \\| "fixed"`                                                                                                                                                                                                                                                                                           | `"absolute"`            |\n| `placement`          | `placement`           | Determines where the component will be positioned relative to the `referenceElement`.                                                                                                                                                                                                                                                                                                   | `"auto" \\| "top" \\| "right" \\| "bottom" \\| "left" \\| "top-start" \\| "top-end" \\| "right-start" \\| "right-end" \\| "bottom-start" \\| "bottom-end" \\| "left-start" \\| "left-end" \\| "auto-start" \\| "auto-end" \\| "leading-start" \\| "leading" \\| "leading-end" \\| "trailing-end" \\| "trailing" \\| "trailing-start"` | `"auto"`                |\n| `referenceElement`   | `reference-element`   | The `referenceElement` to position the component according to its `"placement"` value.  Setting to the `HTMLElement` is preferred so the component does not need to query the DOM for the `referenceElement`.  However, a string ID of the reference element can be used.                                                                                                               | `Element \\| VirtualElement \\| string`                                                                                                                                                                                                                                                                             | `undefined`             |\n\n\n## Events\n\n| Event                       | Description                                                                                              | Type                |\n| --------------------------- | -------------------------------------------------------------------------------------------------------- | ------------------- |\n| `calciteTooltipBeforeClose` | Fires when the component is requested to be closed and before the closing transition begins.             | `CustomEvent<void>` |\n| `calciteTooltipBeforeOpen`  | Fires when the component is added to the DOM but not rendered, and before the opening transition begins. | `CustomEvent<void>` |\n| `calciteTooltipClose`       | Fires when the component is closed and animation is complete.                                            | `CustomEvent<void>` |\n| `calciteTooltipOpen`        | Fires when the component is open and animation is complete.                                              | `CustomEvent<void>` |\n\n\n## Methods\n\n### `reposition(delayed?: boolean) => Promise<void>`\n\nUpdates the position of the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot | Description             |\n| ---- | ----------------------- |\n|      | A slot for adding text. |\n\n\n## CSS Custom Properties\n\n| Name                        | Description                               |\n| --------------------------- | ----------------------------------------- |\n| `--calcite-tooltip-z-index` | Sets the z-index value for the component. |\n\n\n## Dependencies\n\n### Used by\n\n - [calcite-flow-item](../flow-item)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-flow-item --\x3e calcite-tooltip\n  style calcite-tooltip fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}},Object(helpers.c)()),function(){return formatting.a`
  <div style="width: 400px;">
    ${referenceElementHTML}
    <calcite-tooltip
      reference-element="reference-element"
      placement="${Object(dist.select)("placement",floating_ui.c,"auto")}"
      offset-distance="${Object(dist.number)("offset-distance",6)}"
      offset-skidding="${Object(dist.number)("offset-skidding",0)}"
      ${Object(helpers.a)("open",!1)}
    >
      <span> ${contentHTML} </span>
    </calcite-tooltip>
  </div>
`}),open_TestOnly=function(){return formatting.a`
  <div style="width: 400px;">
    ${referenceElementHTML}
    <calcite-tooltip
      reference-element="reference-element"
      placement="${Object(dist.select)("placement",floating_ui.c,"auto")}"
      offset-distance="${Object(dist.number)("offset-distance",6)}"
      offset-skidding="${Object(dist.number)("offset-skidding",0)}"
      ${Object(helpers.a)("open",!0)}
    >
      <span> ${contentHTML} </span>
    </calcite-tooltip>
  </div>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <div style="width: 400px;">
    ${referenceElementHTML}
    <calcite-tooltip
      class="calcite-mode-dark"
      dir="rtl"
      reference-element="reference-element"
      placement="${Object(dist.select)("placement",floating_ui.c,"auto")}"
      offset-distance="${Object(dist.number)("offset-distance",6)}"
      offset-skidding="${Object(dist.number)("offset-skidding",0)}"
      ${Object(helpers.a)("open",!1)}
    >
      <span> ${contentHTML} </span>
    </calcite-tooltip>
  </div>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var rightAligned_TestOnly=function(){return formatting.a`<div style="text-align: right">
  <a href="#" id="tooltip-button">Hover for Tooltip</a>
  <calcite-tooltip open label="Example label" reference-element="tooltip-button">
    <span>Tooltip content lorem ipsum</span>
  </calcite-tooltip>
</div>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px;">\n    ${referenceElementHTML}\n    <calcite-tooltip\n      reference-element="reference-element"\n      placement="${select("placement", placements, "auto")}"\n      offset-distance="${number("offset-distance", 6)}"\n      offset-skidding="${number("offset-skidding", 0)}"\n      ${boolean("open", false)}\n    >\n      <span> ${contentHTML} </span>\n    </calcite-tooltip>\n  </div>\n`'}},simple.parameters),open_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px;">\n    ${referenceElementHTML}\n    <calcite-tooltip\n      reference-element="reference-element"\n      placement="${select("placement", placements, "auto")}"\n      offset-distance="${number("offset-distance", 6)}"\n      offset-skidding="${number("offset-skidding", 0)}"\n      ${boolean("open", true)}\n    >\n      <span> ${contentHTML} </span>\n    </calcite-tooltip>\n  </div>\n`'}},open_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 400px;">\n    ${referenceElementHTML}\n    <calcite-tooltip\n      class="calcite-mode-dark"\n      dir="rtl"\n      reference-element="reference-element"\n      placement="${select("placement", placements, "auto")}"\n      offset-distance="${number("offset-distance", 6)}"\n      offset-skidding="${number("offset-skidding", 0)}"\n      ${boolean("open", false)}\n    >\n      <span> ${contentHTML} </span>\n    </calcite-tooltip>\n  </div>\n`'}},darkModeRTL_TestOnly.parameters),rightAligned_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`<div style="text-align: right">\n  <a href="#" id="tooltip-button">Hover for Tooltip</a>\n  <calcite-tooltip open label="Example label" reference-element="tooltip-button">\n    <span>Tooltip content lorem ipsum</span>\n  </calcite-tooltip>\n</div>`'}},rightAligned_TestOnly.parameters)},"./src/components/tree/tree.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"selectionModeNone",(function(){return selectionModeNone})),__webpack_require__.d(__webpack_exports__,"withLines_TestOnly",(function(){return withLines_TestOnly})),__webpack_require__.d(__webpack_exports__,"iconStartAndActionsEnd",(function(){return iconStartAndActionsEnd})),__webpack_require__.d(__webpack_exports__,"treeItemTextContentWraps_TestOnly",(function(){return treeItemTextContentWraps_TestOnly})),__webpack_require__.d(__webpack_exports__,"treeItemContentIsNotClipped_TestOnly",(function(){return treeItemContentIsNotClipped_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly})),__webpack_require__.d(__webpack_exports__,"OverflowingSubtree",(function(){return OverflowingSubtree}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),treeItems=formatting.a`
  <calcite-tree-item>
    <a>Child 1</a>
  </calcite-tree-item>
  <calcite-tree-item icon-start="${Object(dist.select)("icon-start",helpers.b,"palette")}">
    <a>Child 2</a>
    <calcite-tree slot="children" icon-start="${Object(dist.select)("icon-start",helpers.b,"palette")}">
      <calcite-tree-item>
        <a>Grandchild 1</a>
      </calcite-tree-item>
      <calcite-tree-item icon-start="${Object(dist.select)("icon-start",helpers.b,"palette")}">
        <a>Grandchild 2</a>
        <calcite-tree slot="children" icon-start="${Object(dist.select)("icon-start",helpers.b,"palette")}">
          <calcite-tree-item>
            <a>Great-Grandchild 1</a>
          </calcite-tree-item>
          <calcite-tree-item icon-start="${Object(dist.select)("icon-start",helpers.b,"palette")}">
            <a>Great-Grandchild 2</a>
          </calcite-tree-item>
        </calcite-tree>
      </calcite-tree-item>
    </calcite-tree>
  </calcite-tree-item>
  <calcite-tree-item>
    <a>Child 3</a>
    <calcite-tree slot="children">
      <calcite-tree-item>
        <a>Grandchild 1</a>
      </calcite-tree-item>
      <calcite-tree-item>
        <a>Grandchild 2</a>
      </calcite-tree-item>
    </calcite-tree>
  </calcite-tree-item>
`,slottedLargeDropdown=formatting.a`
  <calcite-dropdown slot="actions-end" id="slottedLargeDropdown" scale="l">
    <calcite-action slot="trigger" icon="ellipsis" scale="l"></calcite-action>
    <calcite-dropdown-group group-title="Settings" selection-mode="multi">
      <calcite-dropdown-item>Group elements</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Display mode" selection-mode="single">
      <calcite-dropdown-item selected>Row</calcite-dropdown-item>
      <calcite-dropdown-item>Column</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`,slottedDefaultDropdown=formatting.a`
  <calcite-dropdown slot="actions-end" id="slottedDefaultDropdown">
    <calcite-action slot="trigger" icon="ellipsis"></calcite-action>
    <calcite-dropdown-group group-title="Settings" selection-mode="multi">
      <calcite-dropdown-item>Group elements</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Display mode" selection-mode="single">
      <calcite-dropdown-item selected>Row</calcite-dropdown-item>
      <calcite-dropdown-item>Column</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`,slottedSmallDropdown=formatting.a`
  <calcite-dropdown slot="actions-end" id="slottedDefaultDropdown" scale="s">
    <calcite-action slot="trigger" icon="ellipsis" scale="s"></calcite-action>
    <calcite-dropdown-group group-title="Settings" selection-mode="multi">
      <calcite-dropdown-item>Group elements</calcite-dropdown-item>
    </calcite-dropdown-group>
    <calcite-dropdown-group group-title="Display mode" selection-mode="single">
      <calcite-dropdown-item selected>Row</calcite-dropdown-item>
      <calcite-dropdown-item>Column</calcite-dropdown-item>
    </calcite-dropdown-group>
  </calcite-dropdown>
`,iconStartLargeActionsEnd=formatting.a`
  <calcite-tree-item icon-start="${Object(dist.select)("icon-start",helpers.b,"palette")}" expanded>
    <a>Child 1</a>
    ${slottedLargeDropdown} ${slottedLargeDropdown}
  </calcite-tree-item>
  <calcite-tree-item expanded>
    <a>Child 2</a>
    <calcite-tree slot="children" expanded>
      <calcite-tree-item expanded>
        <a>Grandchild 1</a>
        <calcite-tree slot="children" expanded>
          <calcite-tree-item icon-start="${Object(dist.select)("icon-start",helpers.b,"palette")}" expanded>
            <a>Great-Grandchild 1</a>
            ${slottedLargeDropdown}${slottedLargeDropdown}
          </calcite-tree-item>
        </calcite-tree>
      </calcite-tree-item>
    </calcite-tree>
  </calcite-tree-item>
  <calcite-tree-item icon-start="${Object(dist.select)("icon-start",helpers.b,"palette")}" expanded>
    <a>Child 3</a>
    ${slottedLargeDropdown}
    <calcite-tree slot="children" expanded>
      <calcite-tree-item icon-start="${Object(dist.select)("icon-start",helpers.b,"palette")}">
        <a>Grandchild 1</a>
      </calcite-tree-item>
      <calcite-tree-item expanded>
        <a>Grandchild 2</a>
        ${slottedLargeDropdown}
      </calcite-tree-item>
    </calcite-tree>
  </calcite-tree-item>
`,slottedDefaultActionsEnd=formatting.a`
  <calcite-tree-item icon-start="palette" expanded>
    <a>Child 1</a>
  </calcite-tree-item>
  <calcite-tree-item expanded>
    <a>Child 2</a>
    <calcite-tree slot="children" expanded>
      <calcite-tree-item expanded>
        <a>Grandchild 1</a>
        <calcite-tree slot="children" expanded>
          <calcite-tree-item icon-start="palette" expanded>
            <a>Great-Grandchild 1</a>
            ${slottedDefaultDropdown}${slottedDefaultDropdown}
          </calcite-tree-item>
        </calcite-tree>
      </calcite-tree-item>
    </calcite-tree>
  </calcite-tree-item>
`,slottedSmallActionsEnd=formatting.a`
  <calcite-tree-item icon-start="palette" expanded>
    <a>Child 1</a>
  </calcite-tree-item>
  <calcite-tree-item expanded>
    <a>Child 2</a>
    <calcite-tree slot="children" expanded>
      <calcite-tree-item expanded>
        <a>Grandchild 1</a>
        <calcite-tree slot="children" expanded>
          <calcite-tree-item icon-start="palette" expanded>
            <a>Great-Grandchild 1</a>
            ${slottedSmallDropdown}${slottedSmallDropdown}
          </calcite-tree-item>
        </calcite-tree>
      </calcite-tree-item>
    </calcite-tree>
  </calcite-tree-item>
`,selectionModes=(__webpack_exports__.default=Object.assign({title:"Components/Tree",parameters:{notes:['# calcite-tree\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Usage\n\n### Basic\n\n`<calcite-tree>` can be used as a sidebar navigation tree with optional lines and different selection modes.\n\n```html\n<calcite-tree>\n  <calcite-tree-item>\n    <a href="#">Child 1</a>\n    <calcite-tree slot="children">\n      <calcite-tree-item>\n        <a href="#">Grandchild 1</a>\n      </calcite-tree-item>\n      <calcite-tree-item>\n        <a href="#">Grandchild 2</a>\n      </calcite-tree-item>\n    </calcite-tree>\n  </calcite-tree-item>\n</calcite-tree>\n```\n\n\n\n## Properties\n\n| Property        | Attribute        | Description                                    | Type                                                                                                   | Default    |\n| --------------- | ---------------- | ---------------------------------------------- | ------------------------------------------------------------------------------------------------------ | ---------- |\n| `lines`         | `lines`          | Displays indentation guide lines.              | `boolean`                                                                                              | `false`    |\n| `scale`         | `scale`          | Specifies the size of the component.           | `"l" \\| "m" \\| "s"`                                                                                    | `"m"`      |\n| `selectedItems` | --               | Specifies the component\'s selected items.      | `HTMLCalciteTreeItemElement[]`                                                                         | `[]`       |\n| `selectionMode` | `selection-mode` | Customize how the component\'s selection works. | `"ancestors" \\| "children" \\| "multichildren" \\| "multiple" \\| "none" \\| "single" \\| "single-persist"` | `"single"` |\n\n\n## Events\n\n| Event               | Description                                                 | Type                |\n| ------------------- | ----------------------------------------------------------- | ------------------- |\n| `calciteTreeSelect` | Fires when the user selects/deselects `calcite-tree-items`. | `CustomEvent<void>` |\n\n\n## Slots\n\n| Slot | Description                              |\n| ---- | ---------------------------------------- |\n|      | A slot for `calcite-tree-item` elements. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n','# calcite-tree-item\n\n`<calcite-tree-item>` is used to represent a single item in a `<calcite-tree>`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                  | Type                         | Default     |\n| ------------- | --------------- | -------------------------------------------------------------------------------------------- | ---------------------------- | ----------- |\n| `disabled`    | `disabled`      | When `true`, interaction is prevented and the component is displayed with lower opacity.     | `boolean`                    | `false`     |\n| `expanded`    | `expanded`      | When `true`, the component is expanded.                                                      | `boolean`                    | `false`     |\n| `iconFlipRtl` | `icon-flip-rtl` | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`). | `"both" \\| "end" \\| "start"` | `undefined` |\n| `iconStart`   | `icon-start`    | Specifies an icon to display at the start of the component.                                  | `string`                     | `undefined` |\n| `selected`    | `selected`      | When `true`, the component is selected.                                                      | `boolean`                    | `false`     |\n\n\n## Slots\n\n| Slot            | Description                                                                                           |\n| --------------- | ----------------------------------------------------------------------------------------------------- |\n|                 | A slot for adding text.                                                                               |\n| `"actions-end"` | A slot for adding actions to the end of the component. It is recommended to use two or fewer actions. |\n| `"children"`    | A slot for adding nested `calcite-tree` elements.                                                     |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-checkbox](../checkbox)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-tree-item --\x3e calcite-icon\n  calcite-tree-item --\x3e calcite-checkbox\n  style calcite-tree-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'],chromatic:{delay:1e3}}},Object(helpers.c)()),["single","children","multichildren","ancestors","none","multiple"]),simple=function(){return formatting.a`
  <calcite-tree
    ${Object(helpers.a)("lines",!1)}
    selection-mode="${Object(dist.select)("selection-mode",selectionModes,"single")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    ${treeItems}
  </calcite-tree>
`},selectionModeNone=function(){return formatting.a`
  <calcite-tree ${Object(helpers.a)("lines",!1)} selection-mode="${Object(dist.select)("selection-mode",selectionModes,"none")}"
    >${treeItems}</calcite-tree
  >
`},withLines_TestOnly=function(){return formatting.a`
  <calcite-tree lines>
    <calcite-tree-item> Child 1 </calcite-tree-item>
    <calcite-tree-item expanded>
      Child 2
      <calcite-tree slot="children">
        <calcite-tree-item> Grandchild 1 </calcite-tree-item>
        <calcite-tree-item> Grandchild 2 </calcite-tree-item>
        <calcite-tree-item expanded>
          Grandchild 3
          <calcite-tree slot="children">
            <calcite-tree-item> Great-Grandchild 1 </calcite-tree-item>
            <calcite-tree-item> Great-Grandchild 2 </calcite-tree-item>
            <calcite-tree-item> Great-Grandchild 3 </calcite-tree-item>
          </calcite-tree>
        </calcite-tree-item>
      </calcite-tree>
    </calcite-tree-item>
  </calcite-tree>
`},iconStartAndActionsEnd=function(){return formatting.a`
  <div style="width: 650px">
    <calcite-tree style="margin: 80px" scale="l"> ${iconStartLargeActionsEnd} </calcite-tree>
    <calcite-tree style="margin: 80px" scale="m"> ${slottedDefaultActionsEnd} </calcite-tree>
    <calcite-tree style="margin: 80px" scale="s"> ${slottedSmallActionsEnd} </calcite-tree>
  </div>
`},treeItemTextContentWraps_TestOnly=function(){return formatting.a`
  <calcite-tree style="width: 300px">
    <calcite-tree-item>
      <span>Possibly_long_tree_item_name_because_it_is_a_user_generated_layer_name</span>
    </calcite-tree-item>
  </calcite-tree>
`},treeItemContentIsNotClipped_TestOnly=function(){return formatting.a`
  <style>
    .string-value {
      white-space: pre-wrap;
    }
  </style>
  <calcite-tree>
    <calcite-tree-item>
      <div>
        <span>content from tree item below should not be clipped 👇</span><span>:&nbsp;</span
        ><span class="string-value">✂️ 🚫clipped ✂️</span>
      </div>
    </calcite-tree-item>

    <calcite-tree-item>
      <div>
        <span>value</span><span>:&nbsp;</span
        ><!-- formatting (single-lining JSON) hides the issue, so we disable it -->
        <!-- prettier-ignore -->
        <span class="string-value">{
          "spatialReference": {
            "latestWkid": 3857,
            "wkid": 102100
          },
          "x": -8443894.052,
          "y": 5664504.875700004
        }</span>
      </div>
    </calcite-tree-item>
  </calcite-tree>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  <calcite-tree
    class="calcite-mode-dark"
    dir="rtl"
    ${Object(helpers.a)("lines",!1)}
    selection-mode="${Object(dist.select)("selection-mode",selectionModes,"single")}"
    scale="${Object(dist.select)("scale",["s","m","l"],"m")}"
  >
    ${treeItems}
  </calcite-tree>
`};darkModeRTL_TestOnly.parameters={modes:utils.e};var OverflowingSubtree=function(){return formatting.a`<div style="width:400px">
      <calcite-tree>
        <calcite-tree-item expanded id="two">
          Layer 2
          <calcite-tree slot="children">
            <calcite-tree-item>
              <span class="title">Layer 2.1</span>
              <calcite-dropdown placement="bottom-trailing">
                <calcite-button
                  appearance="transparent"
                  color="neutral"
                  icon-start="ellipsis"
                  slot="trigger"
                  id="trigger"
                ></calcite-button>
                <calcite-dropdown-group>
                  <calcite-dropdown-item icon-start="trash">Remove</calcite-dropdown-item>
                </calcite-dropdown-group>
              </calcite-dropdown>
            </calcite-tree-item>
          </calcite-tree>
        </calcite-tree-item>
        <calcite-tree-item>
          <span class="title">Layer 3</span>
        </calcite-tree-item>
      </calcite-tree>
    </div>
    <script>
      window.addEventListener("load", () => {
        setTimeout(() => {
          const dorpdownTriggerEl = document.querySelector("calcite-button#trigger");
          dorpdownTriggerEl.click();
        }, 1000);
      });
    </script>`};simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tree\n    ${boolean("lines", false)}\n    selection-mode="${select("selection-mode", selectionModes, "single")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    ${treeItems}\n  </calcite-tree>\n`'}},simple.parameters),selectionModeNone.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tree ${boolean("lines", false)} selection-mode="${select("selection-mode", selectionModes, "none")}"\n    >${treeItems}</calcite-tree\n  >\n`'}},selectionModeNone.parameters),withLines_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tree lines>\n    <calcite-tree-item> Child 1 </calcite-tree-item>\n    <calcite-tree-item expanded>\n      Child 2\n      <calcite-tree slot="children">\n        <calcite-tree-item> Grandchild 1 </calcite-tree-item>\n        <calcite-tree-item> Grandchild 2 </calcite-tree-item>\n        <calcite-tree-item expanded>\n          Grandchild 3\n          <calcite-tree slot="children">\n            <calcite-tree-item> Great-Grandchild 1 </calcite-tree-item>\n            <calcite-tree-item> Great-Grandchild 2 </calcite-tree-item>\n            <calcite-tree-item> Great-Grandchild 3 </calcite-tree-item>\n          </calcite-tree>\n        </calcite-tree-item>\n      </calcite-tree>\n    </calcite-tree-item>\n  </calcite-tree>\n`'}},withLines_TestOnly.parameters),iconStartAndActionsEnd.parameters=Object.assign({storySource:{source:'(): string => html`\n  <div style="width: 650px">\n    <calcite-tree style="margin: 80px" scale="l"> ${iconStartLargeActionsEnd} </calcite-tree>\n    <calcite-tree style="margin: 80px" scale="m"> ${slottedDefaultActionsEnd} </calcite-tree>\n    <calcite-tree style="margin: 80px" scale="s"> ${slottedSmallActionsEnd} </calcite-tree>\n  </div>\n`'}},iconStartAndActionsEnd.parameters),treeItemTextContentWraps_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tree style="width: 300px">\n    <calcite-tree-item>\n      <span>Possibly_long_tree_item_name_because_it_is_a_user_generated_layer_name</span>\n    </calcite-tree-item>\n  </calcite-tree>\n`'}},treeItemTextContentWraps_TestOnly.parameters),treeItemContentIsNotClipped_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <style>\n    .string-value {\n      white-space: pre-wrap;\n    }\n  </style>\n  <calcite-tree>\n    <calcite-tree-item>\n      <div>\n        <span>content from tree item below should not be clipped 👇</span><span>:&nbsp;</span\n        ><span class="string-value">✂️ 🚫clipped ✂️</span>\n      </div>\n    </calcite-tree-item>\n\n    <calcite-tree-item>\n      <div>\n        <span>value</span><span>:&nbsp;</span\n        >\x3c!-- formatting (single-lining JSON) hides the issue, so we disable it --\x3e\n        \x3c!-- prettier-ignore --\x3e\n        <span class="string-value">{\n          "spatialReference": {\n            "latestWkid": 3857,\n            "wkid": 102100\n          },\n          "x": -8443894.052,\n          "y": 5664504.875700004\n        }</span>\n      </div>\n    </calcite-tree-item>\n  </calcite-tree>\n`'}},treeItemContentIsNotClipped_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-tree\n    class="calcite-mode-dark"\n    dir="rtl"\n    ${boolean("lines", false)}\n    selection-mode="${select("selection-mode", selectionModes, "single")}"\n    scale="${select("scale", ["s", "m", "l"], "m")}"\n  >\n    ${treeItems}\n  </calcite-tree>\n`'}},darkModeRTL_TestOnly.parameters),OverflowingSubtree.parameters=Object.assign({storySource:{source:'(): string =>\n  html`<div style="width:400px">\n      <calcite-tree>\n        <calcite-tree-item expanded id="two">\n          Layer 2\n          <calcite-tree slot="children">\n            <calcite-tree-item>\n              <span class="title">Layer 2.1</span>\n              <calcite-dropdown placement="bottom-trailing">\n                <calcite-button\n                  appearance="transparent"\n                  color="neutral"\n                  icon-start="ellipsis"\n                  slot="trigger"\n                  id="trigger"\n                ></calcite-button>\n                <calcite-dropdown-group>\n                  <calcite-dropdown-item icon-start="trash">Remove</calcite-dropdown-item>\n                </calcite-dropdown-group>\n              </calcite-dropdown>\n            </calcite-tree-item>\n          </calcite-tree>\n        </calcite-tree-item>\n        <calcite-tree-item>\n          <span class="title">Layer 3</span>\n        </calcite-tree-item>\n      </calcite-tree>\n    </div>\n    <script>\n      window.addEventListener("load", () => {\n        setTimeout(() => {\n          const dorpdownTriggerEl = document.querySelector("calcite-button#trigger");\n          dorpdownTriggerEl.click();\n        }, 1000);\n      });\n    <\/script>`'}},OverflowingSubtree.parameters)},"./src/components/value-list/value-list.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"simple",(function(){return simple})),__webpack_require__.d(__webpack_exports__,"disabled_TestOnly",(function(){return disabled_TestOnly})),__webpack_require__.d(__webpack_exports__,"darkModeRTL_TestOnly",(function(){return darkModeRTL_TestOnly}));var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),helpers=__webpack_require__("./.storybook/helpers.ts"),utils=__webpack_require__("./.storybook/utils.tsx"),formatting=__webpack_require__("./support/formatting.ts"),createAttributes=(__webpack_exports__.default=Object.assign({title:"Components/Value List",parameters:{notes:['# calcite-value-list\n\n`calcite-value-list` is housed in a panel and contains `calcite-value-list-item`s. The value list has options for drag and drop, label editing, and single or multi-select of items which can be done through shift+click.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n> **[DEPRECATED]** Use the `list` component instead.\n\n## Usage\n\n### Basic\n\nRenders a value list with multiple items able to be selected and a filter.\n\n```html\n<calcite-value-list multiple filter-enabled>\n  <calcite-value-list-item label="Dogs" description="Man\'s best friend" value="dogs">\n    <calcite-action slot="actions-end" icon="plus"></calcite-action>\n  </calcite-value-list-item>\n  <calcite-value-list-item label="Cats" description="Independent and fluffy" value="cats">\n    <calcite-action slot="actions-end" icon="plus"></calcite-action>\n  </calcite-value-list-item>\n  <calcite-value-list-item\n    label="Fish. But not just any fish, a tiger fish caught live in the Atlantic Ocean while on vacation."\n    description="Easy to care for."\n    value="fish"\n  >\n    <calcite-action slot="actions-end" icon="plus"></calcite-action>\n  </calcite-value-list-item>\n</calcite-value-list>\n```\n\n\n### Drag-and-drop\n\nRenders a value list with drag and drop capability between the items.\n\n```html\n<calcite-value-list drag-enabled>\n  <calcite-value-list-item label="Rent" description="Mortgage + housing costs" value="rent"> </calcite-value-list-item>\n  <calcite-value-list-item label="Food" description="its what you eat." value="food"> </calcite-value-list-item>\n  <calcite-value-list-item label="Utilities" value="utilities"> </calcite-value-list-item>\n  <calcite-value-list-item label="Entertainment" description="Toys and leisure" value="entertainment">\n  </calcite-value-list-item>\n</calcite-value-list>\n```\n\n\n\n## Properties\n\n| Property                | Attribute                 | Description                                                                                                                                                                                                                                                             | Type                                                                                                            | Default     |\n| ----------------------- | ------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------- | ----------- |\n| `disabled`              | `disabled`                | When `true`, interaction is prevented and the component is displayed with lower opacity.                                                                                                                                                                                | `boolean`                                                                                                       | `false`     |\n| `dragEnabled`           | `drag-enabled`            | When `true`, `calcite-value-list-item`s are sortable via a draggable button.                                                                                                                                                                                            | `boolean`                                                                                                       | `false`     |\n| `filterEnabled`         | `filter-enabled`          | When `true`, an input appears at the top of the component that can be used by end users to filter list items.                                                                                                                                                           | `boolean`                                                                                                       | `false`     |\n| `filterPlaceholder`     | `filter-placeholder`      | Placeholder text for the filter\'s input field.                                                                                                                                                                                                                          | `string`                                                                                                        | `undefined` |\n| `filterText`            | `filter-text`             | Text for the filter input field.                                                                                                                                                                                                                                        | `string`                                                                                                        | `undefined` |\n| `filteredData`          | --                        | The currently filtered data.                                                                                                                                                                                                                                            | `{ label: string; description: string; metadata: Record<string, unknown>; value: string; }[]`                   | `[]`        |\n| `filteredItems`         | --                        | The currently filtered items.                                                                                                                                                                                                                                           | `HTMLCalciteValueListItemElement[]`                                                                             | `[]`        |\n| `group`                 | `group`                   | The component\'s group identifier.  To drag elements from one list into another, both lists must have the same group value.                                                                                                                                              | `string`                                                                                                        | `undefined` |\n| `loading`               | `loading`                 | When `true`, a busy indicator is displayed.                                                                                                                                                                                                                             | `boolean`                                                                                                       | `false`     |\n| `messageOverrides`      | --                        | Use this property to override individual strings used by the component.                                                                                                                                                                                                 | `{ dragHandleActive?: string; dragHandleChange?: string; dragHandleCommit?: string; dragHandleIdle?: string; }` | `undefined` |\n| `multiple`              | `multiple`                | Similar to standard radio buttons and checkboxes. When `true`, a user can select multiple `calcite-value-list-item`s at a time. When `false`, only a single `calcite-value-list-item` can be selected at a time, and a new selection will deselect previous selections. | `boolean`                                                                                                       | `false`     |\n| `selectionFollowsFocus` | `selection-follows-focus` | When `true` and single-selection is enabled, the selection changes when navigating `calcite-value-list-item`s via keyboard.                                                                                                                                             | `boolean`                                                                                                       | `false`     |\n\n\n## Events\n\n| Event                    | Description                                              | Type                                                        |\n| ------------------------ | -------------------------------------------------------- | ----------------------------------------------------------- |\n| `calciteListChange`      | Emits when any of the list item selections have changed. | `CustomEvent<Map<string, HTMLCalciteValueListItemElement>>` |\n| `calciteListFilter`      | Emits when a filter has changed.                         | `CustomEvent<void>`                                         |\n| `calciteListOrderChange` | Emits when the order of the list has changed.            | `CustomEvent<any[]>`                                        |\n\n\n## Methods\n\n### `getSelectedItems() => Promise<Map<string, HTMLCalciteValueListItemElement>>`\n\nReturns the currently selected items\n\n#### Returns\n\nType: `Promise<Map<string, HTMLCalciteValueListItemElement>>`\n\n\n\n### `setFocus(focusId?: ListFocusId) => Promise<void>`\n\nSets focus on the component\'s first focusable element.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot             | Description                                                                                        |\n| ---------------- | -------------------------------------------------------------------------------------------------- |\n|                  | A slot for adding `calcite-value-list-item` elements. List items are displayed as a vertical list. |\n| `"menu-actions"` | A slot for adding a button and menu combination for performing actions, such as sorting.           |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-filter](../filter)\n- [calcite-scrim](../scrim)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-value-list --\x3e calcite-filter\n  calcite-value-list --\x3e calcite-scrim\n  calcite-filter --\x3e calcite-input\n  calcite-input --\x3e calcite-progress\n  calcite-input --\x3e calcite-icon\n  calcite-scrim --\x3e calcite-loader\n  style calcite-value-list fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n','# calcite-value-list-item\n\n`calcite-value-list-item`s are cards contained in a `calcite-value-list`. They each can have a label and description, an icon and can have their label\'s be editable (inherited from `calcite-value-list`). The developer can disable or preselect each list item and give it a value.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n> **[DEPRECATED]** Use the `list` component instead.\n\n## Properties\n\n| Property             | Attribute         | Description                                                                                    | Type                                                        | Default     |\n| -------------------- | ----------------- | ---------------------------------------------------------------------------------------------- | ----------------------------------------------------------- | ----------- |\n| `description`        | `description`     | A description for the component that displays below the label text.                            | `string`                                                    | `undefined` |\n| `disabled`           | `disabled`        | When `true`, interaction is prevented and the component is displayed with lower opacity.       | `boolean`                                                   | `false`     |\n| `icon`               | `icon`            | Determines the icon SVG symbol that will be shown. Options are circle, square, grip or null.   | `ICON_TYPES.circle \\| ICON_TYPES.grip \\| ICON_TYPES.square` | `null`      |\n| `iconFlipRtl`        | `icon-flip-rtl`   | When `true`, the icon will be flipped when the element direction is right-to-left (`"rtl"`).   | `boolean`                                                   | `false`     |\n| `label` _(required)_ | `label`           | Label and accessible name for the component. Appears next to the icon.                         | `string`                                                    | `undefined` |\n| `metadata`           | --                | Provides additional metadata to the component. Primary use is for a filter on the parent list. | `{ [x: string]: unknown; }`                                 | `undefined` |\n| `nonInteractive`     | `non-interactive` | When `true`, prevents the content of the component from user interaction.                      | `boolean`                                                   | `false`     |\n| `removable`          | `removable`       | When `true`, adds an action to remove the component.                                           | `boolean`                                                   | `false`     |\n| `selected`           | `selected`        | When `true`, the component is selected.                                                        | `boolean`                                                   | `false`     |\n| `value` _(required)_ | `value`           | The component\'s value.                                                                         | `any`                                                       | `undefined` |\n\n\n## Events\n\n| Event                   | Description                              | Type                |\n| ----------------------- | ---------------------------------------- | ------------------- |\n| `calciteListItemRemove` | Fires when the remove button is pressed. | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSet focus on the component.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n### `toggleSelected(coerce?: boolean) => Promise<void>`\n\nToggle the selection state. By default this won\'t trigger an event.\nThe first argument allows the value to be coerced, rather than swapping values.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot              | Description                                                                        |\n| ----------------- | ---------------------------------------------------------------------------------- |\n| `"actions-end"`   | A slot for adding `calcite-action`s or content to the end side of the component.   |\n| `"actions-start"` | A slot for adding `calcite-action`s or content to the start side of the component. |\n\n\n## Dependencies\n\n### Depends on\n\n- [calcite-icon](../icon)\n- [calcite-pick-list-item](../pick-list-item)\n\n### Graph\n```mermaid\ngraph TD;\n  calcite-value-list-item --\x3e calcite-icon\n  calcite-value-list-item --\x3e calcite-pick-list-item\n  calcite-pick-list-item --\x3e calcite-icon\n  calcite-pick-list-item --\x3e calcite-action\n  calcite-action --\x3e calcite-loader\n  calcite-action --\x3e calcite-icon\n  style calcite-value-list-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n']}},Object(helpers.c)()),function(){var _ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{exceptions:[]},exceptions=_ref.exceptions;return Object(utils.b)([{name:"disabled",commit:function(){return this.value=Object(dist.boolean)("disabled",!1),delete this.build,this}},{name:"drag-enabled",commit:function(){return this.value=Object(dist.boolean)("dragEnabled",!1),delete this.build,this}},{name:"filter-enabled",commit:function(){return this.value=Object(dist.boolean)("filterEnabled",!1),delete this.build,this}},{name:"loading",commit:function(){return this.value=Object(dist.boolean)("loading",!1),delete this.build,this}},{name:"multiple",commit:function(){return this.value=Object(dist.boolean)("multiple",!1),delete this.build,this}},{name:"selection-follows-focus",commit:function(){return this.value=Object(dist.boolean)("selection-follows-focus",!1),delete this.build,this}}],exceptions)}),action=formatting.a`
  <calcite-action
    slot="actions-end"
    label="click-me"
    onClick="console.log('clicked');"
    appearance="outline"
    scale="s"
    icon="ellipsis"
  ></calcite-action>
`,simple=function(){return formatting.a`
  ${Object(utils.a)("calcite-value-list",createAttributes(),formatting.a`
      <calcite-value-list-item label="Dogs" description="Man's best friend" value="dogs">
        ${action}
      </calcite-value-list-item>
      <calcite-value-list-item label="Cats" description="Independent and fluffy" value="cats">
        ${action}
      </calcite-value-list-item>
      <calcite-value-list-item
        label="Fish. But not just any fish, a tiger fish caught live in the Atlantic Ocean while on vacation."
        description="Easy to care for."
        value="fish"
      >
        ${action}
      </calcite-value-list-item>
    `)}
`},disabled_TestOnly=function(){return formatting.a`
  <calcite-value-list disabled>
    <calcite-value-list-item label="T. Rex" description="arm strength impaired" value="trex"></calcite-value-list-item>
    <calcite-value-list-item
      label="Triceratops"
      description="3 horn"
      value="triceratops"
      selected
    ></calcite-value-list-item>
    <calcite-value-list-item label="hi" description="there" value="helloWorld"></calcite-value-list-item>
  </calcite-value-list>
`},darkModeRTL_TestOnly=function(){return formatting.a`
  ${Object(utils.a)("calcite-value-list",createAttributes({exceptions:["dir","class"]}).concat([{name:"dir",value:"rtl"},{name:"class",value:"calcite-mode-dark"}]),formatting.a`
      <calcite-value-list-item label="Dogs" description="Man's best friend" value="dogs">
        ${action}
      </calcite-value-list-item>
      <calcite-value-list-item label="Cats" description="Independent and fluffy" value="cats">
        ${action}
      </calcite-value-list-item>
      <calcite-value-list-item
        label="Fish. But not just any fish, a tiger fish caught live in the Atlantic Ocean while on vacation."
        description="Easy to care for."
        value="fish"
      >
        ${action}
      </calcite-value-list-item>
    `)}
`};darkModeRTL_TestOnly.parameters={modes:utils.e},simple.parameters=Object.assign({storySource:{source:'(): string => html`\n  ${create(\n    "calcite-value-list",\n    createAttributes(),\n    html`\n      <calcite-value-list-item label="Dogs" description="Man\'s best friend" value="dogs">\n        ${action}\n      </calcite-value-list-item>\n      <calcite-value-list-item label="Cats" description="Independent and fluffy" value="cats">\n        ${action}\n      </calcite-value-list-item>\n      <calcite-value-list-item\n        label="Fish. But not just any fish, a tiger fish caught live in the Atlantic Ocean while on vacation."\n        description="Easy to care for."\n        value="fish"\n      >\n        ${action}\n      </calcite-value-list-item>\n    `\n  )}\n`'}},simple.parameters),disabled_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  <calcite-value-list disabled>\n    <calcite-value-list-item label="T. Rex" description="arm strength impaired" value="trex"></calcite-value-list-item>\n    <calcite-value-list-item\n      label="Triceratops"\n      description="3 horn"\n      value="triceratops"\n      selected\n    ></calcite-value-list-item>\n    <calcite-value-list-item label="hi" description="there" value="helloWorld"></calcite-value-list-item>\n  </calcite-value-list>\n`'}},disabled_TestOnly.parameters),darkModeRTL_TestOnly.parameters=Object.assign({storySource:{source:'(): string => html`\n  ${create(\n    "calcite-value-list",\n    createAttributes({ exceptions: ["dir", "class"] }).concat([\n      { name: "dir", value: "rtl" },\n      { name: "class", value: "calcite-mode-dark" }\n    ]),\n    html`\n      <calcite-value-list-item label="Dogs" description="Man\'s best friend" value="dogs">\n        ${action}\n      </calcite-value-list-item>\n      <calcite-value-list-item label="Cats" description="Independent and fluffy" value="cats">\n        ${action}\n      </calcite-value-list-item>\n      <calcite-value-list-item\n        label="Fish. But not just any fish, a tiger fish caught live in the Atlantic Ocean while on vacation."\n        description="Easy to care for."\n        value="fish"\n      >\n        ${action}\n      </calcite-value-list-item>\n    `\n  )}\n`'}},darkModeRTL_TestOnly.parameters)},"./src/utils/dom.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return getElementDir})),__webpack_require__.d(__webpack_exports__,"a",(function(){return closestElementCrossShadowBoundary})),__webpack_require__.d(__webpack_exports__,"b",(function(){return containsCrossShadowBoundary}));__webpack_require__("./node_modules/tabbable/dist/index.esm.js");__webpack_require__("./src/utils/resources.ts");function getElementDir(el){var closest=closestElementCrossShadowBoundary(el,"[dir]");return closest?closest.getAttribute("dir"):"ltr"}function getRootNode(el){return el.getRootNode()}function getHost(root){return root.host||null}function closestElementCrossShadowBoundary(element,selector){return function closestFrom(el){return el?el.closest(selector)||closestFrom(getHost(getRootNode(el))):null}(element)}function walkUpAncestry(element,onVisit){return visit(element,onVisit)}function visit(node,onVisit){if(node){var result=onVisit(node);if(void 0!==result)return result;var parentNode=node.parentNode;return visit(parentNode instanceof ShadowRoot?parentNode.host:parentNode,onVisit)}}function containsCrossShadowBoundary(element,maybeDescendant){return!!walkUpAncestry(maybeDescendant,(function(node){return node===element||void 0}))}},"./src/utils/floating-ui.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return floating_ui_placements})),__webpack_require__.d(__webpack_exports__,"b",(function(){return menuPlacements})),__webpack_require__.d(__webpack_exports__,"a",(function(){return defaultMenuPlacement}));var floating_ui_dom_esm=__webpack_require__("./node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js"),floating_ui_core_esm=__webpack_require__("./node_modules/@floating-ui/core/dist/floating-ui.core.esm.js"),client=__webpack_require__("./node_modules/@stencil/core/internal/client/index.js"),debounce=__webpack_require__("./node_modules/lodash-es/debounce.js"),configOverrides=globalThis.calciteComponentsConfig,config=Object.assign({floatingUINonChromiumPositioningFix:!0},configOverrides),dom=__webpack_require__("./src/utils/dom.ts");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var floatingUIBrowserCheck=async function patchFloatingUiForNonChromiumBrowsers(){function getUAData(){return navigator.userAgentData}if(client.a.isBrowser&&config.floatingUINonChromiumPositioningFix&&(/firefox|safari/i.test(function getUAString(){var uaData=getUAData();return null!=uaData&&uaData.brands?uaData.brands.map((function(_ref){return`${_ref.brand}/${_ref.version}`})).join(" "):navigator.userAgent}())||function isChrome109OrAbove(){var uaData=getUAData();return null!=uaData&&uaData.brands?!!uaData.brands.find((function(_ref2){var brand=_ref2.brand,version=_ref2.version;return("Google Chrome"===brand||"Chromium"===brand)&&Number(version)>=109})):!!navigator.userAgent.split(" ").find((function(ua){var _ua$split2=_slicedToArray(ua.split("/"),2),browser=_ua$split2[0],version=_ua$split2[1];return"Chrome"===browser&&parseInt(version)>=109}))}())){var offsetParent=(await __webpack_require__.e(13).then(__webpack_require__.bind(null,"./src/utils/floating-ui/utils.ts"))).offsetParent,originalGetOffsetParent=floating_ui_dom_esm.c.getOffsetParent;floating_ui_dom_esm.c.getOffsetParent=function(element){return originalGetOffsetParent(element,offsetParent)}}}();var floating_ui_placements=["auto","auto-start","auto-end","top","top-start","top-end","bottom","bottom-start","bottom-end","right","right-start","right-end","left","left-start","left-end","leading-start","leading","leading-end","trailing-end","trailing","trailing-start"],menuPlacements=["top-start","top","top-end","bottom-start","bottom","bottom-end"],defaultMenuPlacement="bottom-start";function getMiddleware(_ref3){var placement=_ref3.placement,flipDisabled=_ref3.flipDisabled,flipPlacements=_ref3.flipPlacements,offsetDistance=_ref3.offsetDistance,offsetSkidding=_ref3.offsetSkidding,arrowEl=_ref3.arrowEl,type=_ref3.type,defaultMiddleware=[Object(floating_ui_core_esm.h)(),Object(floating_ui_core_esm.e)()];if("menu"===type)return[].concat(defaultMiddleware,[Object(floating_ui_core_esm.d)({fallbackPlacements:flipPlacements||["top-start","top","top-end","bottom-start","bottom","bottom-end"]})]);if("popover"===type||"tooltip"===type){var middleware=[].concat(defaultMiddleware,[Object(floating_ui_core_esm.f)({mainAxis:"number"==typeof offsetDistance?offsetDistance:0,crossAxis:"number"==typeof offsetSkidding?offsetSkidding:0})]);return"auto"===placement||"auto-start"===placement||"auto-end"===placement?middleware.push(Object(floating_ui_core_esm.b)({alignment:"auto-start"===placement?"start":"auto-end"===placement?"end":null})):flipDisabled||middleware.push(Object(floating_ui_core_esm.d)(flipPlacements?{fallbackPlacements:flipPlacements}:{})),arrowEl&&middleware.push(Object(floating_ui_core_esm.a)({element:arrowEl})),middleware}return[]}function getEffectivePlacement(floatingEl,placement){var placements=["left","right"];return"rtl"===Object(dom.c)(floatingEl)&&placements.reverse(),placement.replace(/leading/gi,placements[0]).replace(/trailing/gi,placements[1])}Object(debounce.a)(positionFloatingUI,100,{leading:!0,maxWait:100});async function positionFloatingUI(_ref4){var _middlewareData$hide,referenceEl=_ref4.referenceEl,floatingEl=_ref4.floatingEl,_ref4$overlayPosition=_ref4.overlayPositioning,overlayPositioning=void 0===_ref4$overlayPosition?"absolute":_ref4$overlayPosition,placement=_ref4.placement,flipDisabled=_ref4.flipDisabled,flipPlacements=_ref4.flipPlacements,offsetDistance=_ref4.offsetDistance,offsetSkidding=_ref4.offsetSkidding,_ref4$includeArrow=_ref4.includeArrow,includeArrow=void 0!==_ref4$includeArrow&&_ref4$includeArrow,arrowEl=_ref4.arrowEl,type=_ref4.type;if(!referenceEl||!floatingEl||includeArrow&&!arrowEl)return null;await floatingUIBrowserCheck;var _await$computePositio=await Object(floating_ui_dom_esm.b)(referenceEl,floatingEl,{strategy:overlayPositioning,placement:"auto"===placement||"auto-start"===placement||"auto-end"===placement?void 0:getEffectivePlacement(floatingEl,placement),middleware:getMiddleware({placement:placement,flipDisabled:flipDisabled,flipPlacements:flipPlacements,offsetDistance:offsetDistance,offsetSkidding:offsetSkidding,arrowEl:arrowEl,type:type})}),x=_await$computePositio.x,y=_await$computePositio.y,effectivePlacement=_await$computePositio.placement,position=_await$computePositio.strategy,middlewareData=_await$computePositio.middlewareData;if(null!=middlewareData&&middlewareData.arrow){var _middlewareData$arrow=middlewareData.arrow,arrowX=_middlewareData$arrow.x,arrowY=_middlewareData$arrow.y;Object.assign(arrowEl.style,{left:null!=arrowX?`${arrowX}px`:"",top:null!=arrowY?`${arrowY}px`:""})}var visibility=(null==middlewareData||null===(_middlewareData$hide=middlewareData.hide)||void 0===_middlewareData$hide?void 0:_middlewareData$hide.referenceHidden)?"hidden":null,pointerEvents=visibility?"none":null;floatingEl.setAttribute("data-placement",effectivePlacement);var transform=`translate(${Math.round(x)}px,${Math.round(y)}px)`;Object.assign(floatingEl.style,{visibility:visibility,pointerEvents:pointerEvents,position:position,top:"0",left:"0",transform:transform})}new WeakMap;Math.ceil(Math.hypot(4,4))},"./src/utils/locale.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return locales}));var dom=__webpack_require__("./src/utils/dom.ts");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var unnecessaryDecimal=new RegExp("\\.(0+)?$"),trailingZeros=new RegExp("0+$"),BigDecimal=function(){function BigDecimal(input){if(function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,BigDecimal),this.value=void 0,this.isNegative=void 0,input instanceof BigDecimal)return input;var _expandExponentialNum=function expandExponentialNumberString(numberString){var exponentialParts=numberString.split(/[eE]/);if(1===exponentialParts.length)return numberString;var number=+numberString;if(Number.isSafeInteger(number))return`${number}`;var isNegative="-"===numberString.charAt(0),magnitude=+exponentialParts[1],decimalParts=exponentialParts[0].split("."),integers=(isNegative?decimalParts[0].substring(1):decimalParts[0])||"",decimals=decimalParts[1]||"",shiftDecimalLeft=function(integers,magnitude){var magnitudeDelta=Math.abs(magnitude)-integers.length,leftPaddedZeros=magnitudeDelta>0?`${"0".repeat(magnitudeDelta)}${integers}`:integers;return`${leftPaddedZeros.slice(0,magnitude)}.${leftPaddedZeros.slice(magnitude)}`},shiftDecimalRight=function(decimals,magnitude){var rightPaddedZeros=magnitude>decimals.length?`${decimals}${"0".repeat(magnitude-decimals.length)}`:decimals;return`${rightPaddedZeros.slice(0,magnitude)}.${rightPaddedZeros.slice(magnitude)}`},expandedNumberString=magnitude>0?`${integers}${shiftDecimalRight(decimals,magnitude)}`:`${shiftDecimalLeft(integers,magnitude)}${decimals}`;return`${isNegative?"-":""}${"."===expandedNumberString.charAt(0)?"0":""}${expandedNumberString.replace(unnecessaryDecimal,"").replace(allLeadingZerosOptionallyNegative,"")}`}(input).split(".").concat(""),_expandExponentialNum2=_slicedToArray(_expandExponentialNum,2),integers=_expandExponentialNum2[0],decimals=_expandExponentialNum2[1];this.value=BigInt(integers+decimals.padEnd(BigDecimal.DECIMALS,"0").slice(0,BigDecimal.DECIMALS))+BigInt(BigDecimal.ROUNDED&&decimals[BigDecimal.DECIMALS]>="5"),this.isNegative="-"===input.charAt(0)}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}(BigDecimal,[{key:"getIntegersAndDecimals",value:function getIntegersAndDecimals(){var s=this.value.toString().replace("-","").padStart(BigDecimal.DECIMALS+1,"0");return{integers:s.slice(0,-BigDecimal.DECIMALS),decimals:s.slice(-BigDecimal.DECIMALS).replace(trailingZeros,"")}}},{key:"toString",value:function toString(){var _this$getIntegersAndD=this.getIntegersAndDecimals(),integers=_this$getIntegersAndD.integers,decimals=_this$getIntegersAndD.decimals;return`${this.isNegative?"-":""}${integers}${decimals.length?"."+decimals:""}`}},{key:"formatToParts",value:function formatToParts(formatter){var _this$getIntegersAndD2=this.getIntegersAndDecimals(),integers=_this$getIntegersAndD2.integers,decimals=_this$getIntegersAndD2.decimals,parts=formatter.numberFormatter.formatToParts(BigInt(integers));return this.isNegative&&parts.unshift({type:"minusSign",value:formatter.minusSign}),decimals.length&&(parts.push({type:"decimal",value:formatter.decimal}),decimals.split("").forEach((function(char){return parts.push({type:"fraction",value:char})}))),parts}},{key:"format",value:function format(formatter){var _this$getIntegersAndD3=this.getIntegersAndDecimals(),integers=_this$getIntegersAndD3.integers,decimals=_this$getIntegersAndD3.decimals;return`${`${this.isNegative?formatter.minusSign:""}${formatter.numberFormatter.format(BigInt(integers))}`}${decimals.length?`${formatter.decimal}${decimals.split("").map((function(char){return formatter.numberFormatter.format(Number(char))})).join("")}`:""}`}},{key:"add",value:function add(n){return BigDecimal.fromBigInt(this.value+new BigDecimal(n).value)}},{key:"subtract",value:function subtract(n){return BigDecimal.fromBigInt(this.value-new BigDecimal(n).value)}},{key:"multiply",value:function multiply(n){return BigDecimal._divRound(this.value*new BigDecimal(n).value,BigDecimal.SHIFT)}},{key:"divide",value:function divide(n){return BigDecimal._divRound(this.value*BigDecimal.SHIFT,new BigDecimal(n).value)}}]),BigDecimal}();function isValidNumber(numberString){return!(!numberString||isNaN(Number(numberString)))}BigDecimal.DECIMALS=100,BigDecimal.ROUNDED=!0,BigDecimal.SHIFT=BigInt("1"+"0".repeat(BigDecimal.DECIMALS)),BigDecimal._divRound=function(dividend,divisor){return BigDecimal.fromBigInt(dividend/divisor+(BigDecimal.ROUNDED?dividend*BigInt(2)/divisor%BigInt(2):BigInt(0)))},BigDecimal.fromBigInt=function(bigint){return Object.assign(Object.create(BigDecimal.prototype),{value:bigint,isNegative:bigint<BigInt(0)})};var allLeadingZerosOptionallyNegative=/^([-0])0+(?=\d)/;function sanitizeExponentialNumberString(numberString,func){if(!numberString)return numberString;var firstE=numberString.toLowerCase().indexOf("e")+1;return firstE?numberString.replace(/[eE]*$/g,"").substring(0,firstE).concat(numberString.slice(firstE).replace(/[eE]/g,"")).split(/[eE]/).map((function(section,i){return func(1===i?section.replace(/\./g,""):section)})).join("e").replace(/^e/,"1e"):func(numberString)}var client=__webpack_require__("./node_modules/@stencil/core/internal/client/index.js");function observers_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _get(){return _get="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function _get(target,property,receiver){var base=_superPropBase(target,property);if(base){var desc=Object.getOwnPropertyDescriptor(base,property);return desc.get?desc.get.call(arguments.length<3?target:receiver):desc.value}},_get.apply(this,arguments)}function _superPropBase(object,property){for(;!Object.prototype.hasOwnProperty.call(object,property)&&null!==(object=_getPrototypeOf(object)););return object}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _createSuper(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}function _possibleConstructorReturn(self,call){if(call&&("object"==typeof call||"function"==typeof call))return call;if(void 0!==call)throw new TypeError("Derived constructors may only return object or undefined");return function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(self)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function locale_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return locale_arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function locale_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return locale_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return locale_arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function locale_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var t9nLocales=["ar","bg","bs","ca","cs","da","de","el","en","es","et","fi","fr","he","hr","hu","id","it","ja","ko","lt","lv","no","nl","pl","pt-BR","pt-PT","ro","ru","sk","sl","sr","sv","th","tr","uk","vi","zh-CN","zh-HK","zh-TW"],locales=["ar","bg","bs","ca","cs","da","de","de-CH","el","en","en-AU","en-CA","en-GB","es","es-MX","et","fi","fr","fr-CH","he","hi","hr","hu","id","it","it-CH","ja","ko","lt","lv","mk","no","nl","pl","pt","pt-PT","ro","ru","sk","sl","sr","sv","th","tr","uk","vi","zh-CN","zh-HK","zh-TW"],numberingSystems=["arab","arabext","bali","beng","deva","fullwide","gujr","guru","hanidec","khmr","knda","laoo","latn","limb","mlym","mong","mymr","orya","tamldec","telu","thai","tibt"],isNumberingSystemSupported=(_toConsumableArray(new Set([].concat(t9nLocales,locales))),function(numberingSystem){return numberingSystems.includes(numberingSystem)}),browserNumberingSystem=(new Intl.NumberFormat).resolvedOptions().numberingSystem,defaultNumberingSystem="arab"!==browserNumberingSystem&&isNumberingSystemSupported(browserNumberingSystem)?browserNumberingSystem:"latn";var connectedComponents=new Set;(function createObserver(type,callback,options){if(client.a.isBrowser){var Observer=function getObserver(type){var ExtendedMutationObserver=function(_window$MutationObser){!function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}(ExtendedMutationObserver,window.MutationObserver);var _super=_createSuper(ExtendedMutationObserver);function ExtendedMutationObserver(callback){var _this;return function observers_classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,ExtendedMutationObserver),(_this=_super.call(this,callback)).observedEntry=[],_this.callback=void 0,_this.callback=callback,_this}return function observers_createClass(Constructor,protoProps,staticProps){return protoProps&&observers_defineProperties(Constructor.prototype,protoProps),staticProps&&observers_defineProperties(Constructor,staticProps),Constructor}(ExtendedMutationObserver,[{key:"observe",value:function observe(target,options){return this.observedEntry.push({target:target,options:options}),_get(_getPrototypeOf(ExtendedMutationObserver.prototype),"observe",this).call(this,target,options)}},{key:"unobserve",value:function unobserve(target){var _this2=this,newObservedEntries=this.observedEntry.filter((function(observed){return observed.target!==target}));this.observedEntry=[],this.callback(_get(_getPrototypeOf(ExtendedMutationObserver.prototype),"takeRecords",this).call(this),this),this.disconnect(),newObservedEntries.forEach((function(observed){return _this2.observe(observed.target,observed.options)}))}}]),ExtendedMutationObserver}();return"intersection"===type?window.IntersectionObserver:"mutation"===type?ExtendedMutationObserver:window.ResizeObserver}(type);return new Observer(callback,options)}})("mutation",(function(records){records.forEach((function(record){var el=record.target;connectedComponents.forEach((function(component){if(!!Object(dom.b)(el,component.el)){var closestLangEl=Object(dom.a)(component.el,"[lang]");if(closestLangEl){var closestLang=closestLangEl.lang;component.effectiveLocale=closestLangEl.hasAttribute("lang")&&""===closestLang?"en":closestLang}else component.effectiveLocale="en"}}))}))}));var locale_NumberStringFormat=function(){function NumberStringFormat(){var _this=this;!function locale_classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,NumberStringFormat),this._actualGroup=void 0,this._group=void 0,this._decimal=void 0,this._minusSign=void 0,this._digits=void 0,this._getDigitIndex=void 0,this._numberFormatter=void 0,this._numberFormatOptions=void 0,this.delocalize=function(numberString){return _this._numberFormatOptions?sanitizeExponentialNumberString(numberString,(function(nonExpoNumString){return nonExpoNumString.trim().replace(new RegExp(`[${_this._minusSign}]`,"g"),"-").replace(new RegExp(`[${_this._group}]`,"g"),"").replace(new RegExp(`[${_this._decimal}]`,"g"),".").replace(new RegExp(`[${_this._digits.join("")}]`,"g"),_this._getDigitIndex)})):numberString},this.localize=function(numberString){return _this._numberFormatOptions?sanitizeExponentialNumberString(numberString,(function(nonExpoNumString){return isValidNumber(nonExpoNumString.trim())?new BigDecimal(nonExpoNumString.trim()).format(_this).replace(new RegExp(`[${_this._actualGroup}]`,"g"),_this._group):nonExpoNumString})):numberString}}return function locale_createClass(Constructor,protoProps,staticProps){return protoProps&&locale_defineProperties(Constructor.prototype,protoProps),staticProps&&locale_defineProperties(Constructor,staticProps),Constructor}(NumberStringFormat,[{key:"group",get:function(){return this._group}},{key:"decimal",get:function(){return this._decimal}},{key:"minusSign",get:function(){return this._minusSign}},{key:"digits",get:function(){return this._digits}},{key:"numberFormatter",get:function(){return this._numberFormatter}},{key:"numberFormatOptions",get:function(){return this._numberFormatOptions},set:function(options){var numberingSystem;if(options.locale=function getSupportedLocale(locale){var context=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"cldr",contextualLocales="cldr"===context?locales:t9nLocales;return locale?contextualLocales.includes(locale)?locale:"nb"===(locale=locale.toLowerCase())?"no":"t9n"===context&&"pt"===locale?"pt-BR":(locale.includes("-")&&(locale=locale.replace(/(\w+)-(\w+)/,(function(_match,language,region){return`${language}-${region.toUpperCase()}`})),contextualLocales.includes(locale)||(locale=locale.split("-")[0])),"zh"===locale?"zh-CN":contextualLocales.includes(locale)?locale:(console.warn(`Translations for the "${locale}" locale are not available and will fall back to the default, English (en).`),"en")):"en"}(null==options?void 0:options.locale),options.numberingSystem=(numberingSystem=null==options?void 0:options.numberingSystem,isNumberingSystemSupported(numberingSystem)?numberingSystem:defaultNumberingSystem),(this._numberFormatOptions||"en"!==options.locale||options.numberingSystem!==defaultNumberingSystem||2!==Object.keys(options).length)&&JSON.stringify(this._numberFormatOptions)!==JSON.stringify(options)){this._numberFormatOptions=options,this._numberFormatter=new Intl.NumberFormat(this._numberFormatOptions.locale,this._numberFormatOptions),this._digits=_toConsumableArray(new Intl.NumberFormat(this._numberFormatOptions.locale,{useGrouping:!1,numberingSystem:this._numberFormatOptions.numberingSystem}).format(9876543210)).reverse();var index=new Map(this._digits.map((function(d,i){return[d,i]}))),parts=new Intl.NumberFormat(this._numberFormatOptions.locale).formatToParts(-12345678.9);this._actualGroup=parts.find((function(d){return"group"===d.type})).value,this._group=0===this._actualGroup.trim().length?" ":this._actualGroup,this._decimal=parts.find((function(d){return"decimal"===d.type})).value,this._minusSign=parts.find((function(d){return"minusSign"===d.type})).value,this._getDigitIndex=function(d){return index.get(d)}}}}]),NumberStringFormat}();new locale_NumberStringFormat},"./src/utils/resources.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return MODES})),__webpack_require__.d(__webpack_exports__,"a",(function(){return CSS_UTILITY}));var MODES=[{name:"light",className:"calcite-mode-light"},{name:"dark",className:"calcite-mode-dark"},{name:"auto",className:"calcite-mode-auto"}],CSS_UTILITY={autoMode:"calcite-mode-auto",darkMode:"calcite-mode-dark",lightMode:"calcite-mode-light",rtl:"calcite--rtl"}},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/html/dist/esm/client/index.js")},"./support/formatting.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return html}));var dedent__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/dedent/dist/dedent.js"),dedent__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(dedent__WEBPACK_IMPORTED_MODULE_0__);function html(strings){for(var _len=arguments.length,placeholders=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)placeholders[_key-1]=arguments[_key];return dedent__WEBPACK_IMPORTED_MODULE_0___default.a.apply(void 0,[strings].concat(placeholders))}},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/html/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/html/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-a11y/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-interactions/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-knobs/dist/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@whitespace/storybook-addon-html/out/preset/addDecorators.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.ts-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,5,6]]]);